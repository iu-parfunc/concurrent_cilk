cscope 15 $HOME/research/cilk/concurrent_cilk/runtime               0000801659
	@bug.cpp

29 
	~"bug.h
"

31 
	~<ex˚±i⁄
>

32 
	~<°dio.h
>

33 
	~<°d¨g.h
>

34 
	~<°dlib.h
>

35 #ifde‡
_WIN32


36 
	~"wödows-˛ón.h
"

37 
	~"öã∫Æ/abi.h
"

38 
	~"cûktoﬁs/cûks¸ìn.h
"

39 
	~<¸tdbg.h
>

42 
__CILKRTS_BEGIN_EXTERN_C


44 
COMMON_PORTABLE
 c⁄° *c⁄° 
	g__cûkπs_as£πi⁄_Áûed
 =

47 
COMMON_PORTABLE
 
	$__cûkπs_bug
(c⁄° *
fmt
,...Ë
cûk_nŸhrow


49 #i‡
	`deföed
 (
_WIN32
Ë&& deföed(
_DEBUG
)

50 
_CRTIMP
 
__cde˛
 
	`_was£π
(
__ö_z
 c⁄° 
wch¨_t
 * 
_Mesßge
,

51 
__ö_z
 c⁄° 
wch¨_t
 *
_Fûe
,

52 
__ö
 
_Löe
);

53 
mesßge
[256];

54 
wch¨_t
 
wmesßge
[256];

55 
va_li°
 
l
;

56 
	`va_°¨t
(
l
, 
fmt
);

57 
	`_v¢¥ötf_s
(
mesßge
, 256, 
_TRUNCATE
, 
fmt
, 
l
);

58 
	`va_íd
(
l
);

59 
	`_¢w¥ötf_s
(
wmesßge
, 256, 
_TRUNCATE
, 
	`_CRT_WIDE
("%S"),

60 
mesßge
);

65 
	`_CπSëRï‹tMode
(
_CRT_ASSERT
, 
_CRTDBG_MODE_FILE
| 
_CRTDBG_MODE_DEBUG
);

66 
	`_CπSëRï‹tFûe
(
_CRT_ASSERT
, 
_CRTDBG_FILE_STDERR
);

68 
	`_was£π
(
wmesßge
, 
	`_CRT_WIDE
(
__FILE__
), 
__LINE__
);

71 i‡(
	`IsDebuggîPª£¡
())

72 
	`DebugBªak
();

74 
	`ab‹t
();

79 
va_li°
 
l
;

80 
	`fÊush
(
NULL
);

81 
	`va_°¨t
(
l
, 
fmt
);

82 
	`vÂrötf
(
°dîr
, 
fmt
, 
l
);

83 
	`va_íd
(
l
);

84 
	`fÊush
(
°dîr
);

86 #i‚de‡
_WIN32


87 
	`ab‹t
();

92 
	`exô
(1);

93 
	}
}

95 
COMMON_PORTABLE
 
	$cûkbug_as£π_no_unˇught_ex˚±i⁄
()

97 
boﬁ
 
unˇught
 = 
°d
::
	`unˇught_ex˚±i⁄
();

98 
	`CILK_ASSERT
(!
unˇught
);

99 
	}
}

101 
COMMON_SYSDEP
 
	$ab‹t_beˇu£_πs_is_c‹ru±ed
()

103 
	`__cûkπs_bug
("The Cilk PlusÑuntime system detectedá corruption "

106 
	}
}

108 #ifde‡
WIN32


109 
COMMON_SYSDEP
 
	$__cûkπs_dbg¥ötf
(c⁄° *
fmt
,...)

111 
mesßge
[2048];

112 
va_li°
 
l
;

115 
	`__cûks¸ìn_dißbÀ_checkög
();

117 
	`va_°¨t
(
l
, 
fmt
);

118 
	`_v¢¥ötf_s
(
mesßge
, 2048, 
_TRUNCATE
, 
fmt
, 
l
);

119 
	`va_íd
(
l
);

120 
	`OuçutDebugSåögA
 (
mesßge
);

123 
	`__cûks¸ìn_íabÀ_checkög
();

124 
	}
}

127 
	g__CILKRTS_END_EXTERN_C


	@bug.h

35 #i‚de‡
INCLUDED_BUG_DOT_H


36 
	#INCLUDED_BUG_DOT_H


	)

38 
	~"πs-comm⁄.h
"

39 
	~<cûk/comm⁄.h
>

41 
__CILKRTS_BEGIN_EXTERN_C


50 
COMMON_PORTABLE
 
NORETURN
 
	$__cûkπs_bug
(c⁄° *
fmt
,...Ë
cûk_nŸhrow
;

52 #i‚de‡
CILK_ASSERT


55 
COMMON_PORTABLE
 c⁄° *c⁄° 
__cûkπs_as£πi⁄_Áûed
;

62 
	#CILK_ASSERT
(
ex
) \

63 (
	`__buûtö_ex≥˘
((
ex
) != 0, 1) ? ()0 : \

64 
	`__cûkπs_bug
(
__cûkπs_as£πi⁄_Áûed
, 
__FILE__
, 
__LINE__
, #ex))

	)

70 
COMMON_PORTABLE
 
	`cûkbug_as£π_no_unˇught_ex˚±i⁄
();

76 
COMMON_SYSDEP
 
	`ab‹t_beˇu£_πs_is_c‹ru±ed
();

79 #ifde‡
_WIN32


87 
COMMON_SYSDEP
 
	$__cûkπs_dbg¥ötf
(c⁄° *
fmt
,...Ë
cûk_nŸhrow
;

96 #ifde‡
_DEBUG


97 
	#DBGPRINTF
(
_fmt
, ...Ë
	`__cûkπs_dbg¥ötf
(_fmt, 
__VA_ARGS__
)

	)

99 
	#DBGPRINTF
(
_fmt
, ...)

	)

104 
	#DBGPRINTF
(
_fmt
, ...)

	)

107 
__CILKRTS_END_EXTERN_C


	@c_reducers.c

32 
	~<cûk/ªdu˚r_›add.h
>

33 
	~<cûk/ªdu˚r_›™d.h
>

34 
	~<cûk/ªdu˚r_›‹.h
>

35 
	~<cûk/ªdu˚r_›x‹.h
>

36 
	~<cûk/ªdu˚r_max.h
>

37 
	~<cûk/ªdu˚r_mö.h
>

38 
	~<limôs.h
>

39 
	~<m©h.h
>

41 #i‚de‡
_MSC_VER


42 
	~<°döt.h
>

44 
	~<wch¨.h
>

48 #i‚de‡
HUGE_VALF


49 c⁄° 
	g__huge_vÆf
[] = {0x7f800000};

50 
	#HUGE_VALF
 (*((c⁄° *)
__huge_vÆf
))

	)

53 #i‚de‡
HUGE_VALL


54 c⁄° 
	g__huge_vÆl
[] = {0, 0, 0x00007f80, 0};

55 
	#HUGE_VALL
 (*((c⁄° *)
__huge_vÆl
))

	)

60 #¥agm®
w¨nög
(
dißbÀ
:2259)

62 
	$CILK_C_REDUCER_OPADD_IMP
(,)

63 
	$CILK_C_REDUCER_OPADD_IMP
(,
uch¨
)

64 
	$CILK_C_REDUCER_OPADD_IMP
(sig√d ,
sch¨
)

65 
	$CILK_C_REDUCER_OPADD_IMP
(
wch¨_t
,wchar_t)

66 
	$CILK_C_REDUCER_OPADD_IMP
(,)

67 
	$CILK_C_REDUCER_OPADD_IMP
(,
ush‹t
)

68 
	$CILK_C_REDUCER_OPADD_IMP
(,)

69 
	$CILK_C_REDUCER_OPADD_IMP
(,
uöt
)

70 
	$CILK_C_REDUCER_OPADD_IMP
(,)

71 
	$CILK_C_REDUCER_OPADD_IMP
(,)

72 
	$CILK_C_REDUCER_OPADD_IMP
(,
ul⁄g
)

73 
	$CILK_C_REDUCER_OPADD_IMP
(,
l⁄gl⁄g
)

74 
	$CILK_C_REDUCER_OPADD_IMP
(,
ul⁄gl⁄g
)

75 
	$CILK_C_REDUCER_OPADD_IMP
(,)

76 
	$CILK_C_REDUCER_OPADD_IMP
(,)

77 
	$CILK_C_REDUCER_OPADD_IMP
(,
l⁄gdoubÀ
)

79 
	$CILK_C_REDUCER_OPAND_IMP
(,)

80 
	$CILK_C_REDUCER_OPAND_IMP
(,
uch¨
)

81 
	$CILK_C_REDUCER_OPAND_IMP
(sig√d ,
sch¨
)

82 
	$CILK_C_REDUCER_OPAND_IMP
(
wch¨_t
,wchar_t)

83 
	$CILK_C_REDUCER_OPAND_IMP
(,)

84 
	$CILK_C_REDUCER_OPAND_IMP
(,
ush‹t
)

85 
	$CILK_C_REDUCER_OPAND_IMP
(,)

86 
	$CILK_C_REDUCER_OPAND_IMP
(,
uöt
)

87 
	$CILK_C_REDUCER_OPAND_IMP
(,)

88 
	$CILK_C_REDUCER_OPAND_IMP
(,)

89 
	$CILK_C_REDUCER_OPAND_IMP
(,
ul⁄g
)

90 
	$CILK_C_REDUCER_OPAND_IMP
(,
l⁄gl⁄g
)

91 
	$CILK_C_REDUCER_OPAND_IMP
(,
ul⁄gl⁄g
)

93 
	$CILK_C_REDUCER_OPOR_IMP
(,)

94 
	$CILK_C_REDUCER_OPOR_IMP
(,
uch¨
)

95 
	$CILK_C_REDUCER_OPOR_IMP
(sig√d ,
sch¨
)

96 
	$CILK_C_REDUCER_OPOR_IMP
(
wch¨_t
,wchar_t)

97 
	$CILK_C_REDUCER_OPOR_IMP
(,)

98 
	$CILK_C_REDUCER_OPOR_IMP
(,
ush‹t
)

99 
	$CILK_C_REDUCER_OPOR_IMP
(,)

100 
	$CILK_C_REDUCER_OPOR_IMP
(,
uöt
)

101 
	$CILK_C_REDUCER_OPOR_IMP
(,)

102 
	$CILK_C_REDUCER_OPOR_IMP
(,)

103 
	$CILK_C_REDUCER_OPOR_IMP
(,
ul⁄g
)

104 
	$CILK_C_REDUCER_OPOR_IMP
(,
l⁄gl⁄g
)

105 
	$CILK_C_REDUCER_OPOR_IMP
(,
ul⁄gl⁄g
)

107 
	$CILK_C_REDUCER_OPXOR_IMP
(,)

108 
	$CILK_C_REDUCER_OPXOR_IMP
(,
uch¨
)

109 
	$CILK_C_REDUCER_OPXOR_IMP
(sig√d ,
sch¨
)

110 
	$CILK_C_REDUCER_OPXOR_IMP
(
wch¨_t
,wchar_t)

111 
	$CILK_C_REDUCER_OPXOR_IMP
(,)

112 
	$CILK_C_REDUCER_OPXOR_IMP
(,
ush‹t
)

113 
	$CILK_C_REDUCER_OPXOR_IMP
(,)

114 
	$CILK_C_REDUCER_OPXOR_IMP
(,
uöt
)

115 
	$CILK_C_REDUCER_OPXOR_IMP
(,)

116 
	$CILK_C_REDUCER_OPXOR_IMP
(,)

117 
	$CILK_C_REDUCER_OPXOR_IMP
(,
ul⁄g
)

118 
	$CILK_C_REDUCER_OPXOR_IMP
(,
l⁄gl⁄g
)

119 
	$CILK_C_REDUCER_OPXOR_IMP
(,
ul⁄gl⁄g
)

121 
	$CILK_C_REDUCER_MAX_IMP
(,,
CHAR_MIN
)

122 
	$CILK_C_REDUCER_MAX_IMP
(,
uch¨
,0)

123 
	$CILK_C_REDUCER_MAX_IMP
(sig√d ,
sch¨
,
SCHAR_MIN
)

124 
	$CILK_C_REDUCER_MAX_IMP
(
wch¨_t
,wch¨_t,
WCHAR_MIN
)

125 
	$CILK_C_REDUCER_MAX_IMP
(,,
SHRT_MIN
)

126 
	$CILK_C_REDUCER_MAX_IMP
(,
ush‹t
,0)

127 
	$CILK_C_REDUCER_MAX_IMP
(,,
INT_MIN
)

128 
	$CILK_C_REDUCER_MAX_IMP
(,
uöt
,0)

129 
	$CILK_C_REDUCER_MAX_IMP
(,,0)

130 
	$CILK_C_REDUCER_MAX_IMP
(,,
LONG_MIN
)

131 
	$CILK_C_REDUCER_MAX_IMP
(,
ul⁄g
,0)

132 
	$CILK_C_REDUCER_MAX_IMP
(,
l⁄gl⁄g
,
LLONG_MIN
)

133 
	$CILK_C_REDUCER_MAX_IMP
(,
ul⁄gl⁄g
,0)

134 
	`CILK_C_REDUCER_MAX_IMP
(,,-
HUGE_VALF
)

135 
	`CILK_C_REDUCER_MAX_IMP
(,,-
HUGE_VAL
)

136 
	`CILK_C_REDUCER_MAX_IMP
(,
l⁄gdoubÀ
,-
HUGE_VALL
)

137 
	$CILK_C_REDUCER_MAX_INDEX_IMP
(,,
CHAR_MIN
)

138 
	$CILK_C_REDUCER_MAX_INDEX_IMP
(,
uch¨
,0)

139 
	$CILK_C_REDUCER_MAX_INDEX_IMP
(sig√d ,
sch¨
,
SCHAR_MIN
)

140 
	$CILK_C_REDUCER_MAX_INDEX_IMP
(
wch¨_t
,wch¨_t,
WCHAR_MIN
)

141 
	$CILK_C_REDUCER_MAX_INDEX_IMP
(,,
SHRT_MIN
)

142 
	$CILK_C_REDUCER_MAX_INDEX_IMP
(,
ush‹t
,0)

143 
	$CILK_C_REDUCER_MAX_INDEX_IMP
(,,
INT_MIN
)

144 
	$CILK_C_REDUCER_MAX_INDEX_IMP
(,
uöt
,0)

145 
	$CILK_C_REDUCER_MAX_INDEX_IMP
(,,0)

146 
	$CILK_C_REDUCER_MAX_INDEX_IMP
(,,
LONG_MIN
)

147 
	$CILK_C_REDUCER_MAX_INDEX_IMP
(,
ul⁄g
,0)

148 
	$CILK_C_REDUCER_MAX_INDEX_IMP
(,
l⁄gl⁄g
,
LLONG_MIN
)

149 
	$CILK_C_REDUCER_MAX_INDEX_IMP
(,
ul⁄gl⁄g
,0)

150 
	`CILK_C_REDUCER_MAX_INDEX_IMP
(,,-
HUGE_VALF
)

151 
	`CILK_C_REDUCER_MAX_INDEX_IMP
(,,-
HUGE_VAL
)

152 
	`CILK_C_REDUCER_MAX_INDEX_IMP
(,
l⁄gdoubÀ
,-
HUGE_VALL
)

154 
	$CILK_C_REDUCER_MIN_IMP
(,,
CHAR_MAX
)

155 
	$CILK_C_REDUCER_MIN_IMP
(,
uch¨
,
CHAR_MIN
)

156 
	$CILK_C_REDUCER_MIN_IMP
(sig√d ,
sch¨
,
SCHAR_MAX
)

157 
	$CILK_C_REDUCER_MIN_IMP
(
wch¨_t
,wch¨_t,
WCHAR_MAX
)

158 
	$CILK_C_REDUCER_MIN_IMP
(,,
SHRT_MAX
)

159 
	$CILK_C_REDUCER_MIN_IMP
(,
ush‹t
,
USHRT_MAX
)

160 
	$CILK_C_REDUCER_MIN_IMP
(,,
INT_MAX
)

161 
	$CILK_C_REDUCER_MIN_IMP
(,
uöt
,
UINT_MAX
)

162 
	$CILK_C_REDUCER_MIN_IMP
(,,
UINT_MAX
)

163 
	$CILK_C_REDUCER_MIN_IMP
(,,
LONG_MAX
)

164 
	$CILK_C_REDUCER_MIN_IMP
(,
ul⁄g
,
ULONG_MAX
)

165 
	$CILK_C_REDUCER_MIN_IMP
(,
l⁄gl⁄g
,
LLONG_MAX
)

166 
	$CILK_C_REDUCER_MIN_IMP
(,
ul⁄gl⁄g
,
ULLONG_MAX
)

167 
	$CILK_C_REDUCER_MIN_IMP
(,,
HUGE_VALF
)

168 
	$CILK_C_REDUCER_MIN_IMP
(,,
HUGE_VAL
)

169 
	$CILK_C_REDUCER_MIN_IMP
(,
l⁄gdoubÀ
,
HUGE_VALL
)

170 
	$CILK_C_REDUCER_MIN_INDEX_IMP
(,,
CHAR_MAX
)

171 
	$CILK_C_REDUCER_MIN_INDEX_IMP
(,
uch¨
,
CHAR_MIN
)

172 
	$CILK_C_REDUCER_MIN_INDEX_IMP
(sig√d ,
sch¨
,
SCHAR_MAX
)

173 
	$CILK_C_REDUCER_MIN_INDEX_IMP
(
wch¨_t
,wch¨_t,
WCHAR_MAX
)

174 
	$CILK_C_REDUCER_MIN_INDEX_IMP
(,,
SHRT_MAX
)

175 
	$CILK_C_REDUCER_MIN_INDEX_IMP
(,
ush‹t
,
USHRT_MAX
)

176 
	$CILK_C_REDUCER_MIN_INDEX_IMP
(,,
INT_MAX
)

177 
	$CILK_C_REDUCER_MIN_INDEX_IMP
(,
uöt
,
UINT_MAX
)

178 
	$CILK_C_REDUCER_MIN_INDEX_IMP
(,,
UINT_MAX
)

179 
	$CILK_C_REDUCER_MIN_INDEX_IMP
(,,
LONG_MAX
)

180 
	$CILK_C_REDUCER_MIN_INDEX_IMP
(,
ul⁄g
,
ULONG_MAX
)

181 
	$CILK_C_REDUCER_MIN_INDEX_IMP
(,
l⁄gl⁄g
,
LLONG_MAX
)

182 
	$CILK_C_REDUCER_MIN_INDEX_IMP
(,
ul⁄gl⁄g
,
ULLONG_MAX
)

183 
	$CILK_C_REDUCER_MIN_INDEX_IMP
(,,
HUGE_VALF
)

184 
	$CILK_C_REDUCER_MIN_INDEX_IMP
(,,
HUGE_VAL
)

185 
	`CILK_C_REDUCER_MIN_INDEX_IMP
(,
l⁄gdoubÀ
,
HUGE_VALL
)

	@cilk-abi-cilk-for.cpp

36 
	~"öã∫Æ/abi.h
"

37 
	~"mëaˇŒ_im∂.h
"

38 
	~"globÆ_°©e.h
"

42 #i‡
deföed
(
_WIN32
)

43 #i‡
deföed
 (
_DEBUG
)

44 
	#CILKRTS_OPTIMIZED
 0

45 #ñ£

	)

46 
	#CILKRTS_OPTIMIZED
 1

	)

49 #i‡
deföed
(
__OPTIMIZE__
)

50 
	#CILKRTS_OPTIMIZED
 1

	)

52 
	#CILKRTS_OPTIMIZED
 0

	)

56 
	gãm∂©e
 <
ty≥«me
 
	gcou¡_t
>

57 
ölöe
 
	$gøösize
(
ªq
, 
cou¡_t
 
cou¡
)

62 i‡(
ªq
 > 0)

63  
ªq
;

72 i‡(
cou¡
 < 1)

75 
globÆ_°©e_t
* 
g
 = 
	`cûkg_gë_globÆ_°©e
();

76 i‡(
g
->
undî_±oﬁ
)

85 c⁄° 
Px8
 = 
g
->
P
 * 8;

86 
cou¡_t
 
n
 = (
cou¡
 + 
Px8
 - 1) / Px8;

90 i‡(
n
 > 2048)

92  (Ë
n
;

94 
	}
}

110 
	gãm∂©e
 <
ty≥«me
 
	gcou¡_t
,Åy≥«mê
	gF
>

111 
ölöe
 

112 
	$ˇŒ_cûk_f‹_lo›_body
(
cou¡_t
 
low
, cou¡_à
high
,

113 
F
 
body
, *
d©a
,

114 
__cûkπs_w‹kî
 *
w
,

115 
__cûkπs_≥digªe
 *
lo›_roŸ_≥digªe
)

122 
__cûkπs_°ack_‰ame
 *
sf
 = 
w
->
cuºít_°ack_‰ame
;

127 c⁄° 
__cûkπs_≥digªe
 *
ßved_√xt_≥digªe_node
 = 
w
->
≥digªe
.
∑ª¡
;

136 
__cûkπs_≥digªe
 
lo›_Àaf_≥digªe
;

138 
lo›_Àaf_≥digªe
.
ønk
 = (
uöt64_t
)
low
;

139 
lo›_Àaf_≥digªe
.
∑ª¡
 = 
lo›_roŸ_≥digªe
;

142 
w
->
≥digªe
.
ønk
 = 0;

143 
w
->
≥digªe
.
∑ª¡
 = &
lo›_Àaf_≥digªe
;

146 
	`body
(
d©a
, 
low
, 
high
);

151 
w
 = 
sf
->
w‹kî
;

155 
w
->
≥digªe
.
∑ª¡
 = 
ßved_√xt_≥digªe_node
;

156 
	}
}

182 
ölöe
 
__cûkπs_w‹kî
*

183 
	$ˇ±uª_•awn_¨g_°ack_‰ame
(
__cûkπs_°ack_‰ame
* &
sf
, 
__cûkπs_w‹kî
* 
w
)

186 
sf
 = 
w
->
cuºít_°ack_‰ame
;

187 #ifde‡
__INTEL_COMPILER


188 #i‡
__INTEL_COMPILER
 <1300 && 
__INTEL_COMPILER_BUILD_DATE
 < 20130101

198 
sf
 = sf->
ˇŒ_∑ª¡
;

201  
w
;

202 
	}
}

220 
	gãm∂©e
 <
ty≥«me
 
	gcou¡_t
,Åy≥«mê
	gF
>

222 
	$cûk_f‹_ªcursive
(
cou¡_t
 
low
, cou¡_à
high
,

223 
F
 
body
, *
d©a
, 
gøö
,

224 
__cûkπs_w‹kî
 *
w
,

225 
__cûkπs_≥digªe
 *
lo›_roŸ_≥digªe
)

227 
èû_ªcur£
:

228 
cou¡_t
 
cou¡
 = 
high
 - 
low
;

230 i‡(
cou¡
 > 
gøö
)

233 
cou¡_t
 
mid
 = 
low
 + 
cou¡
 / 2;

242 
__cûkπs_°ack_‰ame
 *
sf
;

243 
_Cûk_•awn
 
	`cûk_f‹_ªcursive
(
low
, 
mid
, 
body
, 
d©a
, 
gøö
,

244 
	`ˇ±uª_•awn_¨g_°ack_‰ame
(
sf
, 
w
),

245 
lo›_roŸ_≥digªe
);

246 
w
 = 
sf
->
w‹kî
;

247 
low
 = 
mid
;

249 
èû_ªcur£
;

254 
	`ˇŒ_cûk_f‹_lo›_body
(
low
, 
high
, 
body
, 
d©a
, 
w
, 
lo›_roŸ_≥digªe
);

255 
	}
}

257 
	$no›
(Ë{ 
	}
}

269 
	gãm∂©e
 <
ty≥«me
 
	gcou¡_t
,Åy≥«mê
	gF
>

270 
	$cûk_f‹_roŸ
(
F
 
body
, *
d©a
, 
cou¡_t
 
cou¡
, 
gøö
)

290 
_Cûk_•awn
 
	`no›
();

294 
__cûkπs_w‹kî
 *
w
 = 
	`__cûkπs_gë_és_w‹kî
();

295 
__cûkπs_°ack_‰ame
 *
sf
 = 
w
->
cuºít_°ack_‰ame
;

299 --
w
->
≥digªe
.
ønk
;

303 
__cûkπs_≥digªe
 
lo›_roŸ_≥digªe
 = 
w
->
≥digªe
;

313 
gs
 = 
	`gøösize
(
gøö
, 
cou¡
);

314 
	`cûk_f‹_ªcursive
((
cou¡_t
Ë0, 
cou¡
, 
body
, 
d©a
, 
gs
, 
w
,

315 &
lo›_roŸ_≥digªe
);

318 
w
 = 
sf
->
w‹kî
;

321 
w
->
≥digªe
 = 
lo›_roŸ_≥digªe
;

324 ++
w
->
≥digªe
.
ønk
;

335 
	}
}

353 
CILK_ABI_THROWS_VOID
 
__cûkπs_cûk_f‹_32
(
__cûk_abi_f32_t
 
body
, *
d©a
,

354 
cûk32_t
 
cou¡
, 
gøö
)

358 i‡(
cou¡
 > 0)

359 
cûk_f‹_roŸ
(
body
, 
d©a
, 
cou¡
, 
gøö
);

373 
CILK_ABI_THROWS_VOID
 
__cûkπs_cûk_f‹_64
(
__cûk_abi_f64_t
 
body
, *
d©a
,

374 
cûk64_t
 
cou¡
, 
gøö
)

378 i‡(
cou¡
 > 0)

379 
cûk_f‹_roŸ
(
body
, 
d©a
, 
cou¡
, 
gøö
);

	@cilk-abi.c

34 
	~"öã∫Æ/abi.h
"

35 
	~"cûk/cûk_≠i.h
"

36 
	~"cûk/cûk_undocumíãd.h
"

37 
	~"cûktoﬁs/cûks¸ìn.h
"

38 
	~"öã∫Æ/ö•e˘‹-abi.h
"

40 
	~"globÆ_°©e.h
"

41 
	~"os.h
"

42 
	~"os_muãx.h
"

43 
	~"bug.h
"

44 
	~"loˇl_°©e.h
"

45 
	~"fuŒ_‰ame.h
"

46 
	~"≥digªes.h
"

47 
	~"scheduÀr.h
"

48 
	~"sysdï.h
"

49 
	~"ex˚±.h
"

50 
	~"cûk_mÆloc.h
"

52 
	~<î∫o.h
>

53 
	~<°rög.h
>

54 
	~<°dlib.h
>

56 #ifde‡
_MSC_VER


59 
	~<limôs.h
>

62 * 
_Rëu∫Addªss
();

63 #¥agm®
öåösic
(
_Rëu∫Addªss
)

65 
	~"sysdï-wö.h
"

68 
	~"mëaˇŒ_im∂.h
"

69 
	~"ªdu˚r_im∂.h
"

70 
	~"cûk-ôäŸify.h
"

71 
	~"cûk-tbb-öãr›.h
"

73 
	#TBB_INTEROP_DATA_DELAYED_UNTIL_BIND
 (*)-1

	)

76 
	#BIND_THREAD_RTN
 
__cûkπs_böd_thªad_1


	)

78 #ifde‡
CILK_IVARS


79 
	~"c⁄cuºít_cûk_öã∫Æ.h
"

80 
	~<cûk/c⁄cuºít_queue.h
>

82 
ölöe


83 
	$íãr_‰ame_öã∫Æ
(
__cûkπs_°ack_‰ame
 *
sf
, 
uöt32_t
 
vîsi⁄
)

85 
__cûkπs_w‹kî
 *
w
 = 
	`__cûkπs_gë_és_w‹kî
();

86 i‡(
w
 == 0) {

87 
w
 = 
	`BIND_THREAD_RTN
();

89 
sf
->
Êags
 = 
CILK_FRAME_LAST
 | (
vîsi⁄
 << 24);

90 
	`CILK_ASSERT
((
sf
->
Êags
 & 
CILK_FRAME_FLAGS_MASK
Ë=
CILK_FRAME_LAST
);

92 
sf
->
Êags
 = (
vîsi⁄
 << 24);

93 
	`CILK_ASSERT
((
sf
->
Êags
 & 
CILK_FRAME_FLAGS_MASK
) == 0);

95 
sf
->
ˇŒ_∑ª¡
 = 
w
->
cuºít_°ack_‰ame
;

96 
sf
->
w‹kî
 = 
w
;

97 
w
->
cuºít_°ack_‰ame
 = 
sf
;

98 
	}
}

100 
CILK_ABI_VOID
 
	$__cûkπs_íãr_‰ame
(
__cûkπs_°ack_‰ame
 *
sf
)

102 
	`íãr_‰ame_öã∫Æ
(
sf
, 0);

103 
	}
}

105 
CILK_ABI_VOID
 
	$__cûkπs_íãr_‰ame_1
(
__cûkπs_°ack_‰ame
 *
sf
)

107 
	`íãr_‰ame_öã∫Æ
(
sf
, 1);

108 
sf
->
ª£rved
 = 0;

109 
	}
}

111 
ölöe


112 
	$íãr_‰ame_Á°_öã∫Æ
(
__cûkπs_°ack_‰ame
 *
sf
, 
uöt32_t
 
vîsi⁄
)

114 
__cûkπs_w‹kî
 *
w
 = 
	`__cûkπs_gë_és_w‹kî_Á°
();

115 
sf
->
Êags
 = 
vîsi⁄
 << 24;

116 
sf
->
ˇŒ_∑ª¡
 = 
w
->
cuºít_°ack_‰ame
;

117 
sf
->
w‹kî
 = 
w
;

118 
w
->
cuºít_°ack_‰ame
 = 
sf
;

119 
	}
}

121 
CILK_ABI_VOID
 
	$__cûkπs_íãr_‰ame_Á°
(
__cûkπs_°ack_‰ame
 *
sf
)

123 
	`íãr_‰ame_Á°_öã∫Æ
(
sf
, 0);

124 
	}
}

126 
CILK_ABI_VOID
 
	$__cûkπs_íãr_‰ame_Á°_1
(
__cûkπs_°ack_‰ame
 *
sf
)

128 
	`íãr_‰ame_Á°_öã∫Æ
(
sf
, 1);

129 
sf
->
ª£rved
 = 0;

130 
	}
}

133 
	$__cûkπs_undo_dëach
(
__cûkπs_°ack_‰ame
 *
sf
)

135 
__cûkπs_w‹kî
 *
w
 = 
sf
->
w‹kî
;

136 
__cûkπs_°ack_‰ame
 *vﬁ©ûê*
t
 = 
w
->
èû
;

141 --
t
;

142 #ifde‡
CILK_IVARS


143 if(
w
->
l
->
‰ame_ff
->
c⁄cuºít_cûk_Êags
 & 
FULL_FRAME_SELF_STEAL
) {

145 
	`if_f
(
t
 < 
w
->
exc
) {

146 #i‡
deföed
 
__i386__
 || deföed 
__x86_64__


147 
	`__sync_„tch_™d_™d
(&
sf
->
Êags
, ~
CILK_FRAME_DETACHED
);

149 
	`__cûkπs_„n˚
();

150 
sf
->
Êags
 &~
CILK_FRAME_DETACHED
;

156 
w
->
èû
 = 
t
;

161 #i‡
deföed
 
__i386__
 || deföed 
__x86_64__


162 
	`__sync_„tch_™d_™d
(&
sf
->
Êags
, ~
CILK_FRAME_DETACHED
);

164 
	`__cûkπs_„n˚
();

165 
sf
->
Êags
 &~
CILK_FRAME_DETACHED
;

168  
	`__buûtö_ex≥˘
(
t
 < 
w
->
exc
, 0);

169 
	}
}

171 
CILK_ABI_VOID
 
	$__cûkπs_Àave_‰ame
(
__cûkπs_°ack_‰ame
 *
sf
)

173 
__cûkπs_w‹kî
 *
w
 = 
sf
->
w‹kî
;

175 #ifde‡
CILK_IVARS


176 
	`__c⁄cuºít_cûk_Àave_‰ame_hook
(
w
, 
sf
);

181 #ifde‡
_WIN32


184 i‡(
sf
->
Êags
 & 
CILK_FRAME_UNWINDING
)

193 i‡((
sf
->
Êags
 & 
CILK_FRAME_DETACHED
))

195 
	`upd©e_≥digªe_⁄_Àave_‰ame
(
w
, 
sf
);

201 #i‡
CILK_LIB_DEBUG


203 
	`CILK_ASSERT
(
w
->
cuºít_°ack_‰ame
 !
sf
);

209 #i‡
CILK_LIB_DEBUG


210 i‡(
	`__buûtö_ex≥˘
(
sf
->
Êags
 & (
CILK_FRAME_EXITING
|
CILK_FRAME_UNSYNCHED
), 0))

211 
	`__cûkπs_bug
("W%u: functionÉxiting with invalid flags %02x\n",

212 
w
->
£lf
, 
sf
->
Êags
);

217 i‡((
sf
->
Êags
 & 
CILK_FRAME_DETACHED
)) {

220 #i‚de‡
_WIN32


221 i‡(
	`__buûtö_ex≥˘
(
sf
->
Êags
 & 
CILK_FRAME_EXCEPTING
, 0)) {

222 
	`upd©e_≥digªe_⁄_Àave_‰ame
(
w
, 
sf
);

223 
	`__cûkπs_ªtu∫_ex˚±i⁄
(
sf
);

231 i‡(
	`__buûtö_ex≥˘
(
	`__cûkπs_undo_dëach
(
sf
), 0)) {

235 
	`__cûkπs_c_THE_ex˚±i⁄_check
(
w
, 
sf
);

238 
	`upd©e_≥digªe_⁄_Àave_‰ame
(
w
, 
sf
);

240 #ifde‡
CILK_IVARS


242 if(
sf
->
Êags
 & 
CILK_FRAME_SELF_STEAL_MASK
) ;

248 i‡(
	`__buûtö_ex≥˘
(
sf
->
Êags
 & 
CILK_FRAME_FLAGS_MASK
, 0))

249 
	`__cûkπs_bug
("W%u: frame won undo-detachÑace with flags %02x\n",

250 
w
->
£lf
, 
sf
->
Êags
);

255 #i‡
CILK_LIB_DEBUG


256 
sf
->
Êags
 |
CILK_FRAME_EXITING
;

259 i‡(
	`__buûtö_ex≥˘
(
sf
->
Êags
 & 
CILK_FRAME_LAST
, 0))

260 
	`__cûkπs_c_ªtu∫_‰om_öôül
(
w
);

261 i‡(
sf
->
Êags
 & 
CILK_FRAME_STOLEN
)

262 
	`__cûkπs_ªtu∫
(
w
);

264 
	`¥ötf
("s‡%∞ªtu∫ög\n", 
sf
);

265 
	}
}

268 
CILK_ABI_VOID
 
	$__cûkπs_sync
(
__cûkπs_°ack_‰ame
 *
sf
)

270 
__cûkπs_w‹kî
 *
w
 = 
sf
->
w‹kî
;

272 i‡(
	`__buûtö_ex≥˘
(!(
sf
->
Êags
 & 
CILK_FRAME_UNSYNCHED
), 0))

273 
	`__cûkπs_bug
("W%u: doubÀ syn¯%p\n", 
w
->
£lf
, 
sf
);

274 #i‚de‡
_WIN32


275 i‡(
	`__buûtö_ex≥˘
(
sf
->
Êags
 & 
CILK_FRAME_EXCEPTING
, 0)) {

276 
	`__cûkπs_c_sync_ex˚±
(
w
, 
sf
);

281 #ifde‡
_WIN32


282 
w
->
l
->
sync_ªtu∫_addªss
 = 
	`_Rëu∫Addªss
();

285 
	`__cûkπs_c_sync
(
w
, 
sf
);

286 
	}
}

296 
CILK_API_VOID_PTR


297 
	$__cûkπs_gë_sf
()

299 
__cûkπs_w‹kî
 *
w
 = 
	`__cûkπs_gë_és_w‹kî
();

300 i‡(0 =
w
)

301  
NULL
;

303  
w
->
cuºít_°ack_‰ame
;

304 
	}
}

307 
__cûkπs_w‹kî
 *
	$föd_‰ì_w‹kî
(
globÆ_°©e_t
 *
g
)

309 
__cûkπs_w‹kî
 *
w
 = 0;

310 
i
;

314 
i
 = 
g
->
P
 - 1; i < g->
tŸÆ_w‹kîs
; ++i) {

315 
w
 = 
g
->
w‹kîs
[
i
];

316 
	`CILK_ASSERT
(
WORKER_SYSTEM
 !
w
->
l
->
ty≥
);

317 i‡(
w
->
l
->
ty≥
 =
WORKER_FREE
) {

318 
w
->
l
->
ty≥
 = 
WORKER_USER
;

319 
w
->
l
->
ãam
 = w;

320  
w
;

326 
w
 = (
__cûkπs_w‹kî
 *)
	`__cûkπs_mÆloc
((*w));

327 
	`__cûkπs_cûks¸ìn_ign‹e_block
(
w
, w+1);

328 
	`make_w‹kî
(
g
, -1, 
w
);

329 
w
->
l
->
ty≥
 = 
WORKER_USER
;

330 
w
->
l
->
ãam
 = w;

331  
w
;

332 
	}
}

351 
CILK_ABI_WORKER_PTR
 
	$BIND_THREAD_RTN
()

353 
__cûkπs_w‹kî
 *
w
;

354 
°¨t_cûks¸ìn
 = 0;

355 
unique_obj
;

358 
globÆ_°©e_t
* 
g
;

360 
	`ITT_SYNC_CREATE
 (&
unique_obj
, "Initialization");

361 
	`ITT_SYNC_PREPARE
(&
unique_obj
);

362 
	`ITT_SYNC_ACQUIRED
(&
unique_obj
);

366 
	`__cûkπs_öô_öã∫Æ
(1);

372 
g
 = 
	`cûkg_gë_globÆ_°©e
();

373 
	`globÆ_os_muãx_lock
();

374 i‡(
	`__buûtö_ex≥˘
(
g
->
w‹k_d⁄e
, 0))

375 
	`__cûkπs_bug
("AttemptÅoÉnter Cilk while Cilk is shutting down");

376 
w
 = 
	`föd_‰ì_w‹kî
(
g
);

377 
	`CILK_ASSERT
(
w
);

379 
	`__cûkπs_£t_és_w‹kî
(
w
);

380 
	`__cûkπs_cûks¸ìn_e°ablish_w‹kî
(
w
);

382 
fuŒ_‰ame
 *
ff
 = 
	`__cûkπs_make_fuŒ_‰ame
(
w
, 0);

383 
ff
->
°ack_£lf
 = 
	`sysdï_make_u£r_°ack
(
w
);

384 
	`tbb_öãr›_u£_ßved_°ack_›_öfo
(
w
, 
ff
->
°ack_£lf
);

385 
w
->
l
->
u£r_thªad_imp‹ãd
 = 0;

386 
	`CILK_ASSERT
(
ff
->
joö_cou¡î
 == 0);

387 
ff
->
joö_cou¡î
 = 1;

388 
w
->
l
->
‰ame_ff
 = 
ff
;

389 
w
->
ªdu˚r_m≠
 = 
	`__cûkπs_make_ªdu˚r_m≠
(w);

390 
	`__cûkπs_£t_À·mo°_ªdu˚r_m≠
(
w
->
ªdu˚r_m≠
, 1);

391 
	`lﬂd_≥digªe_Àaf_öto_u£r_w‹kî
(
w
);

400 
	`CILK_ASSERT
(
w
->
hód
 =w->
l
->
…q
);

401 
	`CILK_ASSERT
(
w
->
èû
 =w->
l
->
…q
);

402 
	`CILK_ASSERT
(
w
->
¥Ÿe˘ed_èû
 =w->
…q_limô
);

404 i‡(0 !
	`__cûkπs_sysdï_böd_thªad
(
w
))

408 
	`__cûkπs_dißŒow_°ólög
(
w
, 
NULL
);

410 
°¨t_cûks¸ìn
 = (0 =
w
->
g
->
Q
);

412 i‡(
w
->
£lf
 != -1) {

421 
	`__cûkπs_íãr_cûk
(
w
->
g
);

424 
	`globÆ_os_muãx_u∆ock
();

428 i‡(
g
->
P
 > 1)

430 
	`START_INTERVAL
(
w
, 
INTERVAL_IN_SCHEDULER
);

431 
	`START_INTERVAL
(
w
, 
INTERVAL_WORKING
);

434 
	`ITT_SYNC_RELEASING
(&
unique_obj
);

438 i‡(
°¨t_cûks¸ìn
)

439 
	`__cûkπs_cûks¸ìn_íabÀ_ö°rumíèti⁄
();

441  
w
;

442 
	}
}

444 #i‚de‡
_MSC_VER


453 #ifde‡
_DARWIN_C_SOURCE


458 
CILK_ABI_WORKER_PTR
 
	$__cûkπs_böd_thªad
 () {

459  
	`BIND_THREAD_RTN
();

460 
	}
}

467 
	#STRINGIFY
(
x
Ë#x

	)

468 
	#ALIASED_NAME
(
x
Ë
	`__©åibuã__
 ((
	`Æüs
 (
	`STRINGIFY
(x))))

	)

470 
CILK_ABI_WORKER_PTR
 
	$__cûkπs_böd_thªad
()

471 
	`ALIASED_NAME
(
BIND_THREAD_RTN
);

476 
CILK_API_SIZET


477 
	$__cûkπs_gë_°ack_size
() {

478  
	`cûkg_gë_°ack_size
();

479 
	}
}

482 
CILK_API_VOID
 
	$__cûkπs_dump_°©s
()

486 
	`globÆ_os_muãx_lock
();

487 i‡(
	`cûkg_is_published
()) {

488 
globÆ_°©e_t
 *
g
 = 
	`cûkg_gë_globÆ_°©e
();

489 
	`__cûkπs_dump_°©s_to_°dîr
(
g
);

492 
	`__cûkπs_bug
("AttemptingÅoÑeport Cilk stats beforeÅheÑuntime has started\n");

494 
	`globÆ_os_muãx_u∆ock
();

495 
	}
}

506 
	$CILK_INSPECTOR_ABI
(
__cûkπs_ªgi⁄_id
)

507 
	$__cûkπs_gë_°ack_ªgi⁄_id
(
__cûkπs_thªad_id
 
thªad_id
)

509 
globÆ_°©e_t
 *
g
 = 
	`cûkg_gë_globÆ_°©e
();

510 
i
;

512 i‡(
NULL
 =
g
)

513  
NULL
;

515 
i
 = 0; i < 
g
->
tŸÆ_w‹kîs
; i++)

517 i‡(
WORKER_FREE
 !
g
->
w‹kîs
[
i
]->
l
->
ty≥
)

519 i‡(
	`__cûkπs_sysdï_is_w‹kî_thªad_id
(
g
, 
i
, 
thªad_id
))

520  (
__cûkπs_ªgi⁄_id
)
g
->
w‹kîs
[
i
]->
l
->
‰ame_ff
->
°ack_£lf
;

524  
NULL
;

525 
	}
}

538 
	$CILK_INSPECTOR_ABI
()

539 
	$__cûkπs_gë_°ack_ªgi⁄_¥›îtõs
(
__cûkπs_ªgi⁄_id
 
ªgi⁄_id
,

540 
__cûkπs_ªgi⁄_¥›îtõs
 *
¥›îtõs
)

542 i‡(
NULL
 =
¥›îtõs
)

545 i‡(
¥›îtõs
->
size
 !(
__cûkπs_ªgi⁄_¥›îtõs
))

548  
	`__cûkπs_sysdï_gë_°ack_ªgi⁄_¥›îtõs
((
__cûkπs_°ack
 *)
ªgi⁄_id
, 
¥›îtõs
);

549 
	}
}

551 #i‚de‡
_WIN32


552 
CILK_ABI_THROWS_VOID
 
	$__cûkπs_ªthrow
(
__cûkπs_°ack_‰ame
 *
sf
)

554 
	`__cûkπs_gcc_ªthrow
(
sf
);

555 
	}
}

564 
__cûk_tbb_ªtcode
 
	$__cûkπs_unw©ch_°ack
(*
d©a
)

566 
__cûk_tbb_°ack_›_thunk
 
o
;

569 i‡(
TBB_INTEROP_DATA_DELAYED_UNTIL_BIND
 =
d©a
)

571 
__cûkπs_°ack
 *
sd
;

572 
fuŒ_‰ame
 *
ff
;

573 
__cûkπs_w‹kî
 *
w
 = 
	`__cûkπs_gë_és_w‹kî
();

574 i‡(
NULL
 =
w
)

577 
	`tbb_öãr›_‰ì_°ack_›_öfo
();

582 
	`__cûkπs_w‹kî_lock
(
w
);

583 
ff
 = 
w
->
l
->
‰ame_ff
;

584 
	`__cûkπs_‰ame_lock
(
w
,
ff
);

585 
d©a
 = 
ff
->
°ack_£lf
;

586 
	`__cûkπs_‰ame_u∆ock
(
w
,
ff
);

587 
	`__cûkπs_w‹kî_u∆ock
(
w
);

590 #i‡
CILK_LIB_DEBUG


592 
__cûkπs_°ack
 *
sd
;

593 
fuŒ_‰ame
 *
ff
;

594 
__cûkπs_w‹kî
 *
w
 = 
	`__cûkπs_gë_és_w‹kî
();

595 
	`__cûkπs_w‹kî_lock
(
w
);

596 
ff
 = 
w
->
l
->
‰ame_ff
;

597 
	`__cûkπs_‰ame_lock
(
w
,
ff
);

598 
sd
 = 
ff
->
°ack_£lf
;

599 
	`CILK_ASSERT
 (
d©a
==
sd
);

600 
	`__cûkπs_‰ame_u∆ock
(
w
,
ff
);

601 
	`__cûkπs_w‹kî_u∆ock
(
w
);

605 
o
.
d©a
 = 
NULL
;

606 
o
.
routöe
 = 
NULL
;

607 
	`__cûkπs_£t_°ack_›
–(
__cûkπs_°ack
*)
d©a
, 
o
 );

614 
	}
}

626 
CILK_API_TBB_RETCODE


627 
	$__cûkπs_w©ch_°ack
(
__cûk_tbb_unw©ch_thunk
 *
u
,

628 
__cûk_tbb_°ack_›_thunk
 
o
)

630 
__cûkπs_°ack
 *
sd
;

631 
__cûkπs_w‹kî
 *
w
;

633 #ifde‡
_MSC_VER


636 
	`sysdï_öô_moduÀ
();

640 
w
 = 
	`__cûkπs_gë_és_w‹kî
();

641 i‡(
NULL
 =
w
)

645 
	`tbb_öãr›_ßve_°ack_›_öfo
(
o
);

647 
u
->
routöe
 = 
__cûkπs_unw©ch_°ack
;

648 
u
->
d©a
 = 
TBB_INTEROP_DATA_DELAYED_UNTIL_BIND
;

654 
	`__cûkπs_w‹kî_lock
(
w
);

655 
sd
 = 
w
->
l
->
‰ame_ff
->
°ack_£lf
;

656 
	`__cûkπs_w‹kî_u∆ock
(
w
);

662 
u
->
routöe
 = 
__cûkπs_unw©ch_°ack
;

663 
u
->
d©a
 = 
sd
;

665 
	`__cûkπs_£t_°ack_›
–
sd
, 
o
 );

668 
	}
}

673 
CILK_API_INT
 
	$__cûkπs_synched
()

675 
__cûkπs_w‹kî
 *
w
 = 
	`__cûkπs_gë_és_w‹kî
();

678 i‡(
NULL
 =
w
)

683 
uöt32_t
 
Êags
 = 
w
->
cuºít_°ack_‰ame
->flags;

684 i‡(0 =(
Êags
 & 
CILK_FRAME_UNSYNCHED
))

692 
fuŒ_‰ame
 *
ff
 = 
w
->
l
->
‰ame_ff
;

697 i‡(
NULL
 =
ff
)

706  1 =
ff
->
joö_cou¡î
;

707 
	}
}

712 
CILK_API_INT


713 
	$__cûkπs_bump_lo›_ønk_öã∫Æ
(
__cûkπs_w‹kî
* 
w
)

717 i‡(
NULL
 =
w
)

726 ((
__cûkπs_≥digªe
*Ë
w
->
≥digªe
.
∑ª¡
)->
ønk
++;

730 
w
->
≥digªe
.
ønk
 = 0;

733 
	}
}

	@cilk-ittnotify.h

29 #i‚de‡
INCLUDED_CILK_ITTNOTIFY_DOT_H


30 
	#INCLUDED_CILK_ITTNOTIFY_DOT_H


	)

32 #ifde‡
__INTEL_COMPILER


34 
	~<°dio.h
>

36 #ifde‡
USE_ITTNOTIFY


37 
	~<ôäŸify.h
>

39 #ifde‡
_WIN32


40 
	#ITT_SYNC_CREATE
(
_addªss
, 
_des¸ùti⁄
) \

41 
	`__ôt_sync_¸óãA
(
_addªss
, \

42 "I¡ñ Cûk Plu†" 
_des¸ùti⁄
, \

44 
__ôt_©å_b¨rõr
)

	)

46 
	#ITT_SYNC_CREATE
(
_addªss
, 
_des¸ùti⁄
) \

47 
	`__ôt_sync_¸óã
(
_addªss
, \

48 "I¡ñ Cûk Plu†" 
_des¸ùti⁄
, \

50 
__ôt_©å_b¨rõr
)

	)

53 
	#ITT_SYNC_PREPARE
(
_addªss
Ë
	`__ôt_sync_¥ï¨e
(_addªss)

	)

54 
	#ITT_SYNC_ACQUIRED
(
_addªss
Ë
	`__ôt_sync_acquúed
(_addªss)

	)

55 
	#ITT_SYNC_RELEASING
(
_addªss
Ë
	`__ôt_sync_ªÀasög
(_addªss)

	)

56 
	#ITT_SYNC_DESTROY
(
_addªss
Ë
	`__ôt_sync_de°roy
(_addªss)

	)

60 
	#ITT_SYNC_SET_NAME_AND_PREPARE
(
_addªss
, 
_sync_ªt_addªss
Ë
	`__ôt_sync_¥ï¨e
(_addªss)

	)

62 
	#ITT_SYNC_SET_NAME_AND_PREPARE
(
_addªss
, 
_sync_ªt_addªss
) \

63 i‡(
NULL
 !
__ôt_sync_¥ï¨e_±r
) { \

64 i‡(0 =
_sync_ªt_addªss
) \

65 
	`__ôt_sync_ª«meA
(
_addªss
, ""); \

68 
buf
[128]; \

69 
	`•rötf_s
(
buf
, 128, "IP:0x%p", (
DWORD_PTR
)
_sync_ªt_addªss
 - 5); \

70 
	`__ôt_sync_ª«meA
(
_addªss
, 
buf
); \

71 
_sync_ªt_addªss
 = 0; \

73 
	`__ôt_sync_¥ï¨e
(
_addªss
); \

74 }

	)

77 
	#ITT_SYNC_CREATE
(
_addªss
, 
_des¸ùti⁄
)

	)

78 
	#ITT_SYNC_PREPARE
(
_addªss
)

	)

79 
	#ITT_SYNC_ACQUIRED
(
_addªss
)

	)

80 
	#ITT_SYNC_RELEASING
(
_addªsss
)

	)

81 
	#ITT_SYNC_DESTROY
(
_addªss
)

	)

82 
	#ITT_SYNC_SET_NAME_AND_PREPARE
(
_sync_addªss
, 
_waô_addªss
)

	)

	@cilk-tbb-interop.h

43 #i‚de‡
INCLUDED_CILK_TBB_INTEROP_DOT_H


44 
	#INCLUDED_CILK_TBB_INTEROP_DOT_H


	)

46 
	~<cûk/comm⁄.h
>

48 
__CILKRTS_BEGIN_EXTERN_C


51 
	t__cûk_tbb_ªtcode
;

75 
	e__cûk_tbb_°ack_›
 {

82 
	mCILK_TBB_STACK_ORPHAN
,

89 
	mCILK_TBB_STACK_ADOPT
,

97 
	mCILK_TBB_STACK_RELEASE


98 } 
	t__cûk_tbb_°ack_›
;

113 
	$__cûk_tbb_ªtcode
 (*
	t__cûk_tbb_p‚_°ack_›
)(
	t__cûk_tbb_°ack_›
 
	t›
,

114 * 
	td©a
);

125 
	$__cûk_tbb_ªtcode
 (*
	t__cûk_tbb_p‚_unw©ch_°acks
)(*
	td©a
);

131 
	s__cûk_tbb_°ack_›_thunk
 {

134 
__cûk_tbb_p‚_°ack_›
 
routöe
;

137 * 
d©a
;

138 } 
	t__cûk_tbb_°ack_›_thunk
;

144 
	s__cûk_tbb_unw©ch_thunk
 {

147 
__cûk_tbb_p‚_unw©ch_°acks
 
routöe
;

151 * 
d©a
;

152 } 
	t__cûk_tbb_unw©ch_thunk
;

176 
CILK_EXPORT


177 
__cûk_tbb_ªtcode
 
	`__cûkπs_w©ch_°ack
(
__cûk_tbb_unw©ch_thunk
* 
u
,

178 
__cûk_tbb_°ack_›_thunk
 
o
);

180 
__CILKRTS_END_EXTERN_C


	@cilk_api.c

45 
	#COMPILING_CILK_API_FUNCTIONS


	)

47 
	~<öã∫Æ/abi.h
>

48 
	~<cûk/cûk_≠i.h
>

50 
	~"os.h
"

51 
	~"os_muãx.h
"

52 
	~"bug.h
"

53 
	~"globÆ_°©e.h
"

54 
	~"loˇl_°©e.h
"

55 
	~"scheduÀr.h
"

56 
	~"sysdï.h
"

58 
CILK_API_VOID
 
	$__cûkπs_öô
()

61 
	`__cûkπs_öô_öã∫Æ
(0);

62 
	}
}

64 
CILK_API_VOID
 
	$__cûkπs_íd_cûk
()

68 
	`globÆ_os_muãx_lock
();

70 i‡(
	`cûkg_is_published
()) {

71 
globÆ_°©e_t
 *
g
 = 
	`cûkg_gë_globÆ_°©e
();

72 i‡(
g
->
Q
 || 
	`__cûkπs_gë_és_w‹kî
())

73 
	`__cûkπs_bug
("AttemptÅo shut down Cilk while Cilk is still "

75 
	`__cûkπs_°›_w‹kîs
(
g
);

76 
	`__cûkπs_deöô_öã∫Æ
(
g
);

79 
	`globÆ_os_muãx_u∆ock
();

80 
	}
}

82 
CILK_API_INT


83 
	$__cûkπs_gë_nw‹kîs
()

85  
	`cûkg_gë_nw‹kîs
();

86 
	}
}

88 
CILK_API_INT


89 
	$__cûkπs_gë_tŸÆ_w‹kîs
()

91  
	`cûkg_gë_tŸÆ_w‹kîs
();

92 
	}
}

94 
CILK_API_INT
 
	$__cûkπs_gë_f‹˚_ªdu˚
()

96  
	`cûkg_gë_f‹˚_ªdu˚
();

97 
	}
}

99 
CILK_API_INT
 
	$__cûkπs_£t_∑øm
(c⁄° * 
∑øm
, c⁄° * 
vÆue
)

101  
	`cûkg_£t_∑øm
(
∑øm
, 
vÆue
);

102 
	}
}

104 #ifde‡
_WIN32


105 
CILK_API_INT
 
	$__cûkπs_£t_∑øm_w
(c⁄° 
wch¨_t
* 
∑øm
, c⁄° wch¨_t* 
vÆue
)

107  
	`cûkg_£t_∑øm_w
(
∑øm
, 
vÆue
);

108 
	}
}

121 
CILK_API_INT


122 
	$__cûkπs_gë_w‹kî_numbî
()

124 
__cûkπs_w‹kî
 *
w
 = 
	`__cûkπs_gë_és_w‹kî
();

126 i‡(0 =
w
)

129 i‡(
WORKER_USER
 =
w
->
l
->
ty≥
)

136  
w
->
£lf
 + 1;

137 
	}
}

143 
	s≥digªe_c⁄ãxt_t


146 
size_t
 
	msize
;

149 c⁄° 
__cûkπs_≥digªe
 *
	m≥digªe
;

152 *
	munu£d1
;

155 *
	munu£d2
;

159 } 
	t≥digªe_c⁄ãxt_t
;

175 
	#PEDIGREE_WALK_COMPLETE
 (
__cûkπs_≥digªe
 *)-1

	)

177 
CILK_API_INT


178 
	$__cûkπs_gë_≥digªe_öfo
(
__cûkπs_≥digªe_c⁄ãxt_t
 *
exã∫Æ_c⁄ãxt
,

179 
uöt64_t
 *
sf_búthønk
)

181 
≥digªe_c⁄ãxt_t
 *
c⁄ãxt
 = (≥digªe_c⁄ãxt_à*)
exã∫Æ_c⁄ãxt
;

183 
	`CILK_ASSERT
((
__cûkπs_≥digªe_c⁄ãxt_t
) ==

184 (
≥digªe_c⁄ãxt_t
));

185 i‡(
c⁄ãxt
->
size
 !(
≥digªe_c⁄ãxt_t
))

190 i‡(
PEDIGREE_WALK_COMPLETE
 =
c⁄ãxt
->
≥digªe
)

196 i‡(
NULL
 =
c⁄ãxt
->
≥digªe
)

198 
__cûkπs_w‹kî
 *
w
 = 
	`__cûkπs_gë_és_w‹kî
();

199 
__cûkπs_≥digªe
* 
≥digªe_node
;

200 i‡(
NULL
 !
w
) {

201 
≥digªe_node
 = &
w
->
≥digªe
;

204 
≥digªe_node
 = 
	`__cûkπs_gë_és_≥digªe_Àaf
(1);

206 
c⁄ãxt
->
≥digªe
 = 
≥digªe_node
->
∑ª¡
;

209 
c⁄ãxt
->
≥digªe
 = c⁄ãxt->≥digªe->
∑ª¡
;

213 i‡(
NULL
 =
c⁄ãxt
->
≥digªe
)

215 
c⁄ãxt
->
≥digªe
 = 
PEDIGREE_WALK_COMPLETE
;

219 *
sf_búthønk
 = 
c⁄ãxt
->
≥digªe
->
ønk
;

221 
	}
}

223 
CILK_API_PEDIGREE


224 
	$__cûkπs_gë_≥digªe_öã∫Æ
(
__cûkπs_w‹kî
 *
w
)

226 i‡(
NULL
 !
w
) {

227  
w
->
≥digªe
;

230 c⁄° 
__cûkπs_≥digªe
 *
≥digªe
 =

231 
	`__cûkπs_gë_és_≥digªe_Àaf
(1);

232  *
≥digªe
;

234 
	}
}

237 
CILK_API_INT
 
	$__cûkπs_bump_w‹kî_ønk_öã∫Æ
(
__cûkπs_w‹kî
 *
w
)

239 
__cûkπs_≥digªe
 *
≥digªe
;

240 
≥digªe
 = (
w
 ? &w->≥digªê: 
	`__cûkπs_gë_és_≥digªe_Àaf
(1));

241 
≥digªe
->
ønk
++;

243 
	}
}

	@cilk_malloc.c

29 
	~"cûk_mÆloc.h
"

31 
	~<°dlib.h
>

32 #i‡
deföed
 
_WIN32
 || deföed 
_WIN64
 || deföed 
__löux__


33 
	~<mÆloc.h
>

34 
	#HAS_MEMALIGN
 1

	)

37 
	#PREFERRED_ALIGNMENT
 64

	)

40 *
	$__cûkπs_mÆloc
(
size_t
 
size
)

43 #ifde‡
_WIN32


44  
	`_Æig√d_mÆloc
(
size
, 
PREFERRED_ALIGNMENT
);

45 #ñi‡
deföed
 
HAS_MEMALIGN


46  
	`memÆign
(
PREFERRED_ALIGNMENT
, 
size
);

48  
	`mÆloc
(
size
);

50 
	}
}

52 *
	$__cûkπs_ªÆloc
(*
±r
, 
size_t
 
size
)

54 #ifde‡
_WIN32


55  
	`_Æig√d_ªÆloc
(
±r
, 
size
, 
PREFERRED_ALIGNMENT
);

57  
	`ªÆloc
(
±r
, 
size
);

59 
	}
}

61 
	$__cûkπs_‰ì
(*
±r
)

63 #ifde‡
_WIN32


64 
	`_Æig√d_‰ì
(
±r
);

66 
	`‰ì
(
±r
);

68 
	}
}

	@cilk_malloc.h

39 #i‚de‡
INCLUDED_CILK_MALLOC_DOT_H


40 
	#INCLUDED_CILK_MALLOC_DOT_H


	)

42 
	~<cûk/comm⁄.h
>

43 
	~<°ddef.h
>

45 
	~"πs-comm⁄.h
"

47 
__CILKRTS_BEGIN_EXTERN_C


57 
COMMON_PORTABLE
 *
__cûkπs_mÆloc
(
size_t
 
size
);

68 
COMMON_PORTABLE
 *
__cûkπs_ªÆloc
(*
±r
, 
size_t
 
size
);

76 
COMMON_PORTABLE
 
__cûkπs_‰ì
(*
±r
);

78 
	g__CILKRTS_END_EXTERN_C


	@component.h

29 #i‚de‡
INCLUDED_COMPONENT_DOT_H


30 
	#INCLUDED_COMPONENT_DOT_H


	)

32 
	#COMPONENT_NAME
 "I¡ñÆ Cûkô Plu†Ru¡ime"

	)

34 
	#COMPONENT_INTERNAL_NAME
 
COMPONENT_NAME


	)

36 
	#COMPONENT_FILENAME
 "CILKRTS20"

	)

38 
	#BuûdVîsi⁄Såög
(
_maj‹
, 
_mö‹
, 
_buûd
, 
_ªv
Ë#_maj‹ "," #_mö‹ "," #_buûd "," #_ªv

	)

40 
	#COMPONENT_VERSION_STRING
 
	`BuûdVîsi⁄Såög
 (
VERSION_MAJOR
, 
VERSION_MINOR
, 
VERSION_BUILD
, 
VERSION_REVISION
)

	)

	@concurrent_cilk.c

10 
	~<°dio.h
>

11 
	~"scheduÀr.h
"

12 
	~<time.h
>

13 
	~"c⁄cuºít_cûk_öã∫Æ.h
"

14 
	~"bug.h
"

15 
	~"os.h
"

16 
	~"os_muãx.h
"

17 
	~"loˇl_°©e.h
"

18 
	~"sig«l_node.h
"

19 
	~"fuŒ_‰ame.h
"

20 
	~"°acks.h
"

21 
	~"sysdï.h
"

22 
	~"ex˚±.h
"

23 
	~"cûk_mÆloc.h
"

24 
	~"≥digªes.h
"

25 
	~<cûk/c⁄cuºít_queue.h
>

26 
	~<£tjmp.h
>

29 #¥agm®
w¨nög
(
dißbÀ
: 266)

32 #¥agm®
w¨nög
(
dißbÀ
: 2206)

34 
	#VALIDATE_NOT_FLAG_CILK_FRAME_BLOCKED
(
w
, 
sf
) \

35 i‡(
	`__buûtö_ex≥˘
(
sf
->
Êags
 & 
CILK_FRAME_BLOCKED
, 0)) { \

36 
	`__cûkπs_bug
("W%u:ÅriedÅoÑuná blocked frame. FunctionÉxiting with invalid cilk frame flags %x.\n", \

37 
w
->
£lf
, 
sf
->
Êags
); \

38 }

	)

40 
	#VALIDATE_NOT_FLAG_WORKER_RESUMING
(
w
) \

41 if(
	`__buûtö_ex≥˘
(
w
->
c⁄cuºít_w‹kî_°©e
 & 
CILK_WORKER_RESTORING
, 0)) { \

42 
	`__cûkπs_bug
("W%u:ÅriedÅo blocká worker whileÉitherÑestoring. " \

44 
w
->
£lf
, w->
c⁄cuºít_w‹kî_°©e
); \

45 }

	)

47 
	$¥öt_sf_Êags
(
__cûkπs_°ack_‰ame
 *
sf
)

49 
	`¥ötf
("<<<< flagsÑeturning: ");

50 if(
sf
->
Êags
 & 
CILK_FRAME_BLOCKED_RETURNING
Ë
	`¥ötf
("CILK_FRAME_BLOCKED_RETURNING ");

51 if(
sf
->
Êags
 & 
CILK_FRAME_BLOCKED
Ë
	`¥ötf
("CILK_FRAME_BLOCKED ");

52 if(
sf
->
Êags
 & 
CILK_FRAME_SELF_STEAL
Ë
	`¥ötf
("CILK_FRAME_SELF_STEAL ");

53 if(
sf
->
Êags
 & 
CILK_FRAME_STOLEN
Ë
	`¥ötf
("CILK_FRAME_STOLEN ");

54 if(
sf
->
Êags
 & 
CILK_FRAME_UNSYNCHED
Ë
	`¥ötf
("CILK_FRAME_UNSYNCHED ");

55 if(
sf
->
Êags
 & 
CILK_FRAME_DETACHED
Ë
	`¥ötf
("CILK_FRAME_DETACHED ");

56 if(
sf
->
Êags
 & 
CILK_FRAME_EXCEPTING
Ë
	`¥ötf
("CILK_FRAME_EXCEPTING ");

57 if(
sf
->
Êags
 & 
CILK_FRAME_LAST
Ë
	`¥ötf
("CILK_FRAME_LAST ");

58 if(
sf
->
Êags
 & 
CILK_FRAME_EXITING
Ë
	`¥ötf
("CILK_FRAME_EXITING ");

59 if(
sf
->
Êags
 & 
CILK_FRAME_SUSPENDED
Ë
	`¥ötf
("CILK_FRAME_SUSPENDED ");

60 if(
sf
->
Êags
 & 
CILK_FRAME_UNWINDING
Ë
	`¥ötf
("CILK_FRAME_UNWINDING ");

61 
	`¥ötf
("\n");

62 
	}
}

65 
	$CILK_API
(Ë
	$__cûkπs_m¶ìp
(
mûlis
)

67 
time•ec
 
time
;

68 
time
.
tv_£c
 = 
mûlis
 / 1000;

69 
time
.
tv_n£c
 = (
mûlis
 % 1000) * 1000000ul;

70 
	`«no¶ìp
(&
time
,
NULL
);

71 
	}
}

73 
	$CILK_API
(Ë
	$__cûkπs_u¶ìp
(
mi¸os
)

75 
time•ec
 
time
;

76 
time
.
tv_£c
 = 
mi¸os
/1000000ul;

77 
time
.
tv_n£c
 = (
mi¸os
 % 1000) * 1000000ul;

78 
	`«no¶ìp
(&
time
,
NULL
);

79 
	}
}

81 
ölöe
 
	$CILK_API
()

82 
	$__cûkπs_iv¨_˛ór
(
__cûkπs_iv¨
* 
iv¨
)

84 *
iv¨
 = 0;

85 
	}
}

87 
NOINLINE


88 
	$w‹kî_ª∂a˚mít_scheduÀr
()

90 
__cûkπs_w‹kî
 *
w
 = 
	`__cûkπs_gë_és_w‹kî_Á°
();

91 
°ﬁí
 = 0;

95 
	`CILK_ASSERT
(
w
->
cuºít_°ack_‰ame
);

97 
	`__cûkπs_run_scheduÀr_wôh_ex˚±i⁄s
((
__cûkπs_w‹kî
 *Ë
w
);

99 
	`CILK_ASSERT
(0);

100 
	}
}

103 
ölöe
 

104 
	$£tup_ª∂a˚mít_°ack_™d_run
(
__cûkπs_w‹kî
 *
w
)

106 *
˘x
[5];

109 if(! 
w
->
l
->
scheduÀr_°ack
)

110 
w
->
l
->
scheduÀr_°ack
 = 
	`sysdï_make_töy_°ack
(w);

111 
	`CILK_ASSERT
(
w
->
l
->
scheduÀr_°ack
);

117 i‡(0 =
	`__buûtö_£tjmp
(
˘x
)) {

118 
˘x
[2] = 
w
->
l
->
scheduÀr_°ack
;

119 
	`__buûtö_l⁄gjmp
(
˘x
, 1);

125 
	`w‹kî_ª∂a˚mít_scheduÀr
();

126 
	`CILK_ASSERT
(0);

128 
	}
}

130 
ölöe
 

131 
	$‰ìze_‰ame
(
__cûkπs_w‹kî
 *
w
, 
fuŒ_‰ame
 *
ff
, 
__cûkπs_°ack_‰ame
 *
sf
)

136 
	`CILK_ASSERT
(
ff
);

137 
	`CILK_ASSERT
(
sf
);

139 if(
w
->
c⁄cuºít_w‹kî_°©e
 & 
CILK_WORKER_UNBLOCKED
) {

140 
	`¥ötf
("ªc‹dedÜa° blocked fuŒ fømêa†%p\n", 
ff
);

141 
ff
->
c⁄cuºít_cûk_Êags
 |
FULL_FRAME_BLOCKED_LAST
;

142 
w
->
∑u£d_ff
 = 
ff
;

149 
	`VALIDATE_NOT_FLAG_WORKER_RESUMING
(
w
);

152 
w
->
c⁄cuºít_w‹kî_°©e
 |
CILK_WORKER_BLOCKED
;

157 
sf
->
Êags
 |
CILK_FRAME_SUSPENDED
 | 
CILK_FRAME_BLOCKED
;

160 
ff
->
c⁄cuºít_cûk_Êags
 |
FULL_FRAME_BLOCKED
;

163 
ff
->
ˇŒ_°ack
 = 
sf
;

165 
	`__cûkπs_put_°ack
(
ff
, 
sf
);

167 
	}
}

170 
ölöe
 

171 
	$thaw_‰ame
(
__cûkπs_∑u£d_°ack
 *
p°k
)

174 
__cûkπs_°ack_‰ame
 *
sf
;

175 
fuŒ_‰ame
 *
ff
;

177 
	`CILK_ASSERT
(
p°k
);

178 
ff
 = 
p°k
->ff;

179 
sf
 = 
p°k
->
cuºít_°ack_‰ame
;

180 
__cûkπs_w‹kî
 *
w
 = 
p°k
->w;

181 
	`CILK_ASSERT
(
w
);

184 
w
->
l
->
ãam
 = 
p°k
->team;

185 
w
->
l
->
‰ame_ff
 = 
p°k
->
ff
;

186 
w
->
c⁄cuºít_w‹kî_°©e
 = 
p°k
->concurrent_worker_state;

187 
w
->
l
->
scheduÀr_°ack
 = 
p°k
->scheduler_stack;

188 
w
->
cuºít_°ack_‰ame
 = 
p°k
->current_stack_frame;

189 
w
->
cuºít_°ack_‰ame
->
Êags
 = 
p°k
->flags;

190 
	`mem˝y
(&
w
->
l
->
ív
, &
p°k
->ív, (
jmp_buf
));

204 
	`CILK_ASSERT
(!(
sf
->
Êags
 & 
CILK_FRAME_BLOCKED_RETURNING
));

205 
	`CILK_ASSERT
(!(
w
->
c⁄cuºít_w‹kî_°©e
 & 
CILK_WORKER_UNBLOCKED
));

206 
	`CILK_ASSERT
(
ff
->
c⁄cuºít_cûk_Êags
 & 
FULL_FRAME_BLOCKED
);

208 
sf
->
Êags
 &~
CILK_FRAME_BLOCKED
;

209 
sf
->
Êags
 |
CILK_FRAME_BLOCKED_RETURNING
;

211 
ff
->
c⁄cuºít_cûk_Êags
 &~
FULL_FRAME_BLOCKED
;

212 
ff
->
c⁄cuºít_cûk_Êags
 |
FULL_FRAME_SELF_STEAL
;

214 
w
->
c⁄cuºít_w‹kî_°©e
 |
CILK_WORKER_RESTORING
;

220 
	`l⁄gjmp
(
p°k
->
˘x
, 1);

221 
	`CILK_ASSERT
(0);

222 
	}
}

225 
	$CILK_API
()

226 
	$__cûkπs_föÆize_∑u£
(
__cûkπs_w‹kî
* 
w
, 
__cûkπs_∑u£d_°ack
 *
p°k
)

229 
p°k
->
w
 = w;

230 
p°k
->
ff
 = 
w
->
l
->
‰ame_ff
;

231 
p°k
->
ãam
 = 
w
->
l
->team;

232 
p°k
->
Êags
 = 
w
->
cuºít_°ack_‰ame
->flags;

234 
p°k
->
scheduÀr_°ack
 = 
w
->
l
->scheduler_stack;

235 
p°k
->
cuºít_°ack_‰ame
 = 
w
->current_stack_frame;

236 
p°k
->
c⁄cuºít_w‹kî_°©e
 = 
w
->concurrent_worker_state;

237 
	`mem˝y
(&
p°k
->
ív
, &
w
->
l
->ív, (
jmp_buf
));

240 
	`BEGIN_WITH_WORKER_LOCK
(
w
) {

242 
	`BEGIN_WITH_FRAME_LOCK
(
w
, w->
l
->
‰ame_ff
) {

243 
	`‰ìze_‰ame
(
w
, w->
l
->
‰ame_ff
, w->
cuºít_°ack_‰ame
);

244 
w
->
l
->
‰ame_ff
 = 
NULL
;

245 } 
	`END_WITH_FRAME_LOCK
(
w
, w->
l
->
‰ame_ff
);

247 } 
	`END_WITH_WORKER_LOCK
(
w
);

249 
	`£tup_ª∂a˚mít_°ack_™d_run
(
w
);

250 
	`CILK_ASSERT
(0);

251 
	}
}

253 
	$∑u£d_°ack_åylock
(
__cûkπs_∑u£d_°ack
 *
p°k
) {

254  
	`ˇs
(&
p°k
->
lock
, 0, 1);

255 
	}
}

257 
	$∑u£d_°ack_u∆ock
(
__cûkπs_∑u£d_°ack
 *
p°k
) {

258 
	`©omic_ªÀa£
(&
p°k
->
lock
, 0);

259 
	}
}

261 
	$ª°‹e_ªady_compuèti⁄s
(
__cûkπs_w‹kî
 *
w
)

263 
	`¥ötf
("restoringÑeady computation\n");

264 
__cûkπs_∑u£d_°ack
 *
p°k
 = 
NULL
;

269 
	`dequeue
(
w
->
ªady_queue
, (
ELEMENT_TYPE
 *Ë&
p°k
);

271 if(! 
	`£tjmp
(
w
->
unblocked_˘x
)) {

272 
	`thaw_‰ame
(
p°k
);

273 
	`CILK_ASSERT
(0);

276 
	`mem£t
(&
w
->
unblocked_˘x
, 0, (
jmp_buf
));

278 
	}
}

283 
	$__c⁄cuºít_cûk_Àave_‰ame_hook
(
__cûkπs_w‹kî
 *
w
, 
__cûkπs_°ack_‰ame
 *
sf
)

285 
__cûkπs_∑u£d_°ack
 *
p°k
;

286 
__cûkπs_∑u£d_°ack
 *
esˇ≥
;

287 
uöçå_t
 
±r
;

290 
	`VALIDATE_NOT_FLAG_CILK_FRAME_BLOCKED
(
w
, 
sf
);

301 
	`dequeue
(
w
->
ªady_queue
, (
ELEMENT_TYPE
 *Ë&
p°k
);

303 i‡(
p°k
 !
NULL
) {

304 i‡(!
sf
->
Êags
 & 
CILK_FRAME_BLOCKED_RETURNING
) {

312 
esˇ≥
 = 
	`__cûkπs_mÆloc
((
__cûkπs_∑u£d_°ack
));

313 
	`mem£t
(
esˇ≥
, 0, (
__cûkπs_∑u£d_°ack
));

314 
±r
 = (
uöçå_t
Ë
	`__cûkπs_∑u£
((
esˇ≥
->
˘x
));

316 i‡(!
±r
) {

317 
	`íqueue
(
w
->
ªady_queue
, (
ELEMENT_TYPE
Ë
esˇ≥
);

318 
	`thaw_‰ame
(
p°k
);

319 
	`CILK_ASSERT
(0);

321 
	`¥ötf
("escaping context!\n");

327 
	}
}

	@concurrent_cilk_internal.h

1 #i‚de‡
__CONCURRENT_CILK_INTERNAL_H


2 
	#__CONCURRENT_CILK_INTERNAL_H


	)

5 
	~"cûk/c⁄cuºít_cûk.h
"

6 
	~"fuŒ_‰ame.h
"

8 
	#BEGIN_WITH_WORKER_LOCK
(
w
Ë
	`__cûkπs_w‹kî_lock
(w); do

	)

9 
	#END_WITH_WORKER_LOCK
(
w
Ë
	`__cûkπs_w‹kî_u∆ock
(w), 0)

	)

10 
	#BEGIN_WITH_FRAME_LOCK
(
w
, 
ff
) \

11 dÿ{ 
fuŒ_‰ame
 *
_locked_ff
 = 
ff
; 
	`__cûkπs_‰ame_lock
(
w
, _locked_ff); do

	)

13 
	#END_WITH_FRAME_LOCK
(
w
, 
ff
) \

14 
	`__cûkπs_‰ame_u∆ock
(
w
, 
_locked_ff
), 0); } 0)

	)

17 
	g__CILKRTS_BEGIN_EXTERN_C


23 
	#if_t
(
ã°
Ëi‡(
	`__buûtö_ex≥˘
—e°,1))

	)

24 
	#if_f
(
ã°
Ëi‡(
	`__buûtö_ex≥˘
—e°,0))

	)

29 
	#•ö_∑u£
(Ë
	`__asm__
("∑u£")

	)

30 
	#ˇs
(
±r
,
ﬁdvÆ
,
√wvÆ
Ë
	`__sync_boﬁ_com∑ª_™d_sw≠
’å,ﬁdvÆ,√wvÆ)

	)

31 
	#ˇsv
(
±r
,
ﬁdvÆ
,
√wvÆ
Ë
	`__sync_vÆ_com∑ª_™d_sw≠
’å,ﬁdvÆ,√wvÆ)

	)

32 
	#©omic_add
(
±r
,
num
Ë
	`__sync_„tch_™d_add
’å,num)

	)

33 
	#©omic_sub
(
±r
,
num
Ë
	`__sync_„tch_™d_sub
’å,num)

	)

34 
	#©omic_£t
(
±r
,
vÆ
Ë
	`__sync_lock_ã°_™d_£t
’å,vÆ)

	)

35 
	#©omic_ªÀa£
(
±r
, 
vÆ
Ë
	`__sync_lock_ªÀa£
’å,vÆ)

	)

36 
	#Æign
(
n
Ë
	`__©åibuã__
((
	`Æig√d
“)))

	)

42 
	#READ_WRITE
 1

	)

43 
	#READ_ONLY
 0

	)

48 
	#NONE
 0

	)

49 
	#LOW
 1

	)

50 
	#MED
 2

	)

51 
	#HIGH
 3

	)

56 
	#¥e„tch
(
addr
,
rw
,
loˇlôy
Ë
	`__buûtö_¥e„tch
◊ddr,rw,loˇlôy)

	)

57 
	#¥e„tch_rw
(
addr
,
loˇlôy
Ë
	`__buûtö_¥e„tch
◊ddr,
READ_WRITE
,loˇlôy)

	)

58 
	#¥e„tch_r
(
addr
,
loˇlôy
Ë
	`__buûtö_¥e„tch
◊ddr,
READ_ONLY
,loˇlôy)

	)

62 
__cûkπs_w‹kî
 
	t__cûkπs_w‹kî
;

63 
__cûkπs_w‹kî
* 
	t__cûkπs_w‹kî_±r
;

64 
__cûkπs_°ack_‰ame
 
	t__cûkπs_°ack_‰ame
;

65 
__cûkπs_f‹w¨dög_¨øy
 
	t__cûkπs_f‹w¨dög_¨øy
;

66 
__cûkπs_∑u£d_°ack
 
	t__cûkπs_∑u£d_°ack
;

67 
queue_t
 
	tqueue_t
;

68 
__cûkπs_°ack_∑ú
 
	t__cûkπs_°ack_∑ú
;

69 
__cûkπs_iv¨_waôli°
 
	t__cûkπs_iv¨_waôli°
;

72 
globÆ_°©e_t
 
	tglobÆ_°©e_t
;

73 
loˇl_°©e
 
	tloˇl_°©e
;

74 
cûkªd_m≠
 
	tcûkªd_m≠
;

75 
__cûkπs_w‹kî_sysdï_°©e
 
	t__cûkπs_w‹kî_sysdï_°©e
;

80 
	s__cûkπs_∑u£d_°ack
 {

84 
__cûkπs_w‹kî
 *
	mw
;

86 
fuŒ_‰ame
 *
	mff
;

88 
__cûkπs_w‹kî
 *
	mãam
;

90 
	mÊags
;

92 
fuŒ_‰ame
 *
	m∑u£d_ff
;

94 
	mc⁄cuºít_w‹kî_°©e
;

96 *
	mscheduÀr_°ack
;

98 
__cûkπs_°ack_‰ame
 *
	mcuºít_°ack_‰ame
;

100 
jmp_buf
 
	mív
;

105 
__cûkπs_∑u£d_°ack
 *
	mhód
;

107 
__cûkπs_∑u£d_°ack
 *
	mèû
;

109 
__cûkπs_∑u£d_°ack
 *
	m√xt
;

111 
jmp_buf
 
	m˘x
;

113 
	mlock
;

116 } 
	t__cûkπs_∑u£d_°ack
;

119 
∑u£d_°ack_åylock
(
__cûkπs_∑u£d_°ack
 *
p°k
);

120 
∑u£d_°ack_u∆ock
(
__cûkπs_∑u£d_°ack
 *
p°k
);

123 
__cûkπs_c⁄cuºít_yõld
(
__cûkπs_w‹kî
 *
w
);

124 
thaw_‰ame
(
__cûkπs_∑u£d_°ack
 *
p°k
);

127 
do_ªtu∫_‰om_£lf
 (
__cûkπs_w‹kî
 *
w
, 
fuŒ_‰ame
 *
ff
, 
__cûkπs_°ack_‰ame
 *
sf
);

130 
ª°‹e_ªady_compuèti⁄s
(
__cûkπs_w‹kî
 *
w
);

133 
__c⁄cuºít_cûk_Àave_‰ame_hook
(
__cûkπs_w‹kî
 *
w
, 
__cûkπs_°ack_‰ame
 *
sf
);

136 
	g__CILKRTS_END_EXTERN_C


	@concurrent_queue.c

24 
	~<cûk/c⁄cuºít_queue.h
>

25 
	~"c⁄cuºít_cûk_öã∫Æ.h
"

27 
	~<mÆloc.h
>

28 
	~<sched.h
>

31 #i‡
deföed
(
FIFO_DEBUG
)

32 
	~<as£π.h
>

35 
ölöe
 
uöt64_t
 
	$ªad_tsc
()

37 
uöt64_t
 
time
;

38 
uöt32_t
 
msw
 , 
lsw
;

39 
__asm__
 
	`__vﬁ©ûe__
("rdtsc\n\t"

42 : "Ù" (
msw
), "Ù"(
lsw
)

45 
time
 = ((
uöt64_t
Ë
msw
 << 32Ë| 
lsw
;

46  
time
;

47 
	}
}

49 
ölöe
 
	$waô_ticks
(
uöt64_t
 
ticks
)

51 
uöt64_t
 
cuºít_time
;

52 
uöt64_t
 
time
 = 
	`ªad_tsc
();

53 
time
 +
ticks
;

55 
cuºít_time
 = 
	`ªad_tsc
();

56 } 
cuºít_time
 < 
time
);

57 
	}
}

59 
ELEMENT_TYPE
 
	gELEMENT_ZERO
 = 0x0UL;

61 
queue_t
 *
	$make_°ack_queue
()

63 
queue_t
 *
q
 = (queue_à*Ë
	`mÆloc
((queue_t));

64 
	`queue_öô
(
q
);

65  
q
;

66 
	}
}

68 
	$dñëe_°ack_queue
 (
queue_t
 *
q
)

70 
	`‰ì
(
q
);

71 
	}
}

77 
	$queue_öô
(
queue_t
 *
q
)

79 
	`mem£t
(
q
, 0, (
queue_t
));

80 #i‡
	`deföed
(
CONS_BATCH
)

81 
q
->
b©ch_hi°‹y
 = 
CONS_BATCH_SIZE
;

83 
	}
}

85 #i‡
deföed
(
PROD_BATCH
Ë|| deföed(
CONS_BATCH
)

86 
ölöe
 
	$Àqth™
(vﬁ©ûê
ELEMENT_TYPE
 
poöt
, vﬁ©ûêELEMENT_TYPE 
b©ch_poöt
)

88  (
poöt
 =
b©ch_poöt
);

89 
	}
}

92 #i‡
deföed
(
PROD_BATCH
)

93 
	$íqueue
(
queue_t
 * 
q
, 
ELEMENT_TYPE
 
vÆue
)

95 
uöt32_t
 
tmp_hód
;

96 if–
q
->
hód
 =q->
b©ch_hód
 ) {

97 
tmp_hód
 = 
q
->
hód
 + 
PROD_BATCH_SIZE
;

98 i‡–
tmp_hód
 >
QUEUE_SIZE
 )

99 
tmp_hód
 = 0;

101 i‡–
q
->
d©a
[
tmp_hód
] ) {

102 
	`waô_ticks
(
CONGESTION_PENALTY
);

103  
BUFFER_FULL
;

106 
q
->
b©ch_hód
 = 
tmp_hód
;

108 
q
->
d©a
[q->
hód
] = 
vÆue
;

109 
q
->
hód
 ++;

110 i‡–
q
->
hód
 >
QUEUE_SIZE
 ) {

111 
q
->
hód
 = 0;

114  
SUCCESS
;

115 
	}
}

117 
	$íqueue
(
queue_t
 * 
q
, 
ELEMENT_TYPE
 
vÆue
)

119 i‡–
q
->
d©a
[q->
hód
] )

120  
BUFFER_FULL
;

121 
q
->
d©a
[q->
hód
] = 
vÆue
;

122 
q
->
hód
 ++;

123 i‡–
q
->
hód
 >
QUEUE_SIZE
 ) {

124 
q
->
hód
 = 0;

127  
SUCCESS
;

128 
	}
}

131 #i‡
deföed
(
CONS_BATCH
)

133 
ölöe
 
	$backåackög
(
queue_t
 * 
q
)

135 
uöt32_t
 
tmp_èû
;

136 
tmp_èû
 = 
q
->
èû
 + 
CONS_BATCH_SIZE
;

137 i‡–
tmp_èû
 >
QUEUE_SIZE
 ) {

138 
tmp_èû
 = 0;

139 #i‡
	`deföed
(
ADAPTIVE
)

140 i‡(
q
->
b©ch_hi°‹y
 < 
CONS_BATCH_SIZE
) {

141 
q
->
b©ch_hi°‹y
 =

142 (
CONS_BATCH_SIZE
 < (
q
->
b©ch_hi°‹y
 + 
BATCH_INCREAMENT
))?

143 
CONS_BATCH_SIZE
 : (
q
->
b©ch_hi°‹y
 + 
BATCH_INCREAMENT
);

148 #i‡
	`deföed
(
BACKTRACKING
)

150 
b©ch_size
 = 
q
->
b©ch_hi°‹y
;

151 !(
q
->
d©a
[
tmp_èû
])) {

153 
	`waô_ticks
(
CONGESTION_PENALTY
);

155 
b©ch_size
 = batch_size >> 1;

156 if–
b©ch_size
 >= 0 ) {

157 
tmp_èû
 = 
q
->
èû
 + 
b©ch_size
;

158 i‡(
tmp_èû
 >
QUEUE_SIZE
)

159 
tmp_èû
 = 0;

164 #i‡
	`deföed
(
ADAPTIVE
)

165 
q
->
b©ch_hi°‹y
 = 
b©ch_size
;

169 i‡–!
q
->
d©a
[
tmp_èû
] ) {

170 
	`waô_ticks
(
CONGESTION_PENALTY
);

175 i‡–
tmp_èû
 =
q
->
èû
 ) {

176 
tmp_èû
 = (tmp_èû + 1Ë>
QUEUE_SIZE
 ?

177 0 : 
tmp_èû
 + 1;

179 
q
->
b©ch_èû
 = 
tmp_èû
;

182 
	}
}

184 
	$dequeue
(
queue_t
 * 
q
, 
ELEMENT_TYPE
 * 
vÆue
)

186 if–
q
->
èû
 =q->
b©ch_èû
 ) {

187 i‡–
	`backåackög
(
q
) != 0 )

188  
BUFFER_EMPTY
;

190 *
vÆue
 = 
q
->
d©a
[q->
èû
];

191 
q
->
d©a
[q->
èû
] = 
ELEMENT_ZERO
;

192 
q
->
èû
 ++;

193 i‡–
q
->
èû
 >
QUEUE_SIZE
 )

194 
q
->
èû
 = 0;

196  
SUCCESS
;

197 
	}
}

201 
	$dequeue
(
queue_t
 * 
q
, 
ELEMENT_TYPE
 * 
vÆue
)

203 i‡–!
q
->
d©a
[q->
èû
] )

204  
BUFFER_EMPTY
;

205 *
vÆue
 = 
q
->
d©a
[q->
èû
];

206 
q
->
d©a
[q->
èû
] = 
ELEMENT_ZERO
;

207 
q
->
èû
 ++;

208 i‡–
q
->
èû
 >
QUEUE_SIZE
 )

209 
q
->
èû
 = 0;

211  
SUCCESS
;

212 
	}
}

	@except-gcc.cpp

29 
	~"ex˚±-gcc.h
"

30 
	~"ex˚±.h
"

31 
	~"sysdï.h
"

32 
	~"bug.h
"

33 
	~"loˇl_°©e.h
"

34 
	~"fuŒ_‰ame.h
"

35 
	~"scheduÀr.h
"

36 
	~"‰ame_mÆloc.h
"

38 
	~<°döt.h
>

39 
	~<ty≥öfo
>

41 
	#DEBUG_EXCEPTIONS
 0

	)

43 
	s≥ndög_ex˚±i⁄_öfo


45 
make
(
__cxa_eh_globÆs
 *, 
_Unwöd_Ex˚±i⁄
 *, 
boﬁ
);

46 
de°ru˘
();

47 
boﬁ
 
em±y
() const;

48 
check
() const;

50 
_Unwöd_Ex˚±i⁄
 *
	ma˘ive
;

55 
boﬁ
 
	mªthrow
;

56 
__cxa_eh_globÆs
 
	mru¡ime_°©e
;

59 
	g≥ndög_ex˚±i⁄_öfo
::
	$check
() const

61 i‡(
a˘ive
)

62 
	`CILK_ASSERT
(()
ru¡ime_°©e
.
unˇughtEx˚±i⁄s
 > 0);

63 
	}
}

65 
	g≥ndög_ex˚±i⁄_öfo
::
	$make
(
__cxa_eh_globÆs
 *
°©e_ö
,

66 
_Unwöd_Ex˚±i⁄
 *
exc_ö
, 
boﬁ
 
ªthrow_ö
)

68 
a˘ive
 = 
exc_ö
;

69 
ªthrow
 = 
ªthrow_ö
;

70 
ru¡ime_°©e
 = *
°©e_ö
;

72 
°©e_ö
->
ˇughtEx˚±i⁄s
 = 0;

73 
°©e_ö
->
unˇughtEx˚±i⁄s
 = 0;

74 #i‡
CILK_LIB_DEBUG


75 
	`check
();

77 
	}
}

79 
boﬁ


80 
	g≥ndög_ex˚±i⁄_öfo
::
	$em±y
() const

82  !
a˘ive
 && !
ªthrow
 && !
ru¡ime_°©e
.
ˇughtEx˚±i⁄s
 &&

83 !
ru¡ime_°©e
.
unˇughtEx˚±i⁄s
;

84 
	}
}

86 #i‡
DEBUG_EXCEPTIONS


87 
	~<°dio.h
>

89 
	$decode_ex˚±i⁄s
(*
out
, 
size_t
 
Àn
, 
≥ndög_ex˚±i⁄_öfo
 *
öfo
)

91 i‡(
öfo
->
	`em±y
())

92 
	`¢¥ötf
(
out
, 
Àn
, "[empty]");

93 i‡(
öfo
->
ªthrow
)

94 
	`¢¥ötf
(
out
, 
Àn
, "[rethrow %p]",

95 
öfo
->
ru¡ime_°©e
.
ˇughtEx˚±i⁄s
);

97 
	`¢¥ötf
(
out
, 
Àn
, "[throw %p]", (*)
öfo
->
a˘ive
);

98 
	}
}

102 
	$ßve_ex˚±i⁄_öfo
(
__cûkπs_w‹kî
 *
w
,

103 
__cxa_eh_globÆs
 *
°©e
,

104 
_Unwöd_Ex˚±i⁄
 *
exc
,

105 
boﬁ
 
ªthrow
,

106 c⁄° *
why
)

108 
≥ndög_ex˚±i⁄_öfo
 *
öfo
 =

109 (
≥ndög_ex˚±i⁄_öfo
 *)
	`__cûkπs_‰ame_mÆloc
(
w
,  (pending_exception_info));

110 
	`CILK_ASSERT
(
öfo
);

111 
öfo
->
	`make
(
°©e
, 
exc
, 
ªthrow
);

113 #i‡
DEBUG_EXCEPTIONS


115 
buf
[40];

116 
	`decode_ex˚±i⁄s
(
buf
,  buf, 
öfo
);

117 
	`Ârötf
(
°dîr
, "makeÉxception info W%u %p %s (%s)\n",

118 
w
->
£lf
, 
öfo
, 
buf
, 
why
);

122 
	`CILK_ASSERT
(
w
->
l
->
≥ndög_ex˚±i⁄
 == 0);

123 
w
->
l
->
≥ndög_ex˚±i⁄
 = 
öfo
;

124 
	}
}

126 #i‡
DEBUG_EXCEPTIONS


127 
	~<°dio.h
>

129 
	$decode_Êags
(
Êags
, 
out
[9])

131 
out
[0] = (
Êags
 & 
CILK_FRAME_STOLEN
) ? 'S' : '_';

132 
out
[1] = (
Êags
 & 
CILK_FRAME_UNSYNCHED
) ? 'U' : '_';

133 
out
[2] = (
Êags
 & 
CILK_FRAME_DETACHED
) ? 'D' : '_';

134 
out
[3] = (
Êags
 & 
CILK_FRAME_EXCEPTING
) ? 'X' : '_';

135 
out
[4] = '\0';

136 
	}
}

153 
CILK_ABI_THROWS_VOID


154 
	$__cûkπs_ªtu∫_ex˚±i⁄
(
__cûkπs_°ack_‰ame
 *
sf
)

156 
__cûkπs_w‹kî
 *
w
 = 
sf
->
w‹kî
;

157 
_Unwöd_Ex˚±i⁄
 *
exc
 = (_Unwöd_Ex˚±i⁄ *)
sf
->
ex˚±_d©a
;

159 
	`CILK_ASSERT
(
sf
->
Êags
 & 
CILK_FRAME_DETACHED
);

160 
sf
->
Êags
 &~
CILK_FRAME_DETACHED
;

163 i‡(!
	`__cûkπs_p›_èû
(
w
)) {

165 
w
->
cuºít_°ack_‰ame
 = 
sf
->
ˇŒ_∑ª¡
;

166 
sf
->
ˇŒ_∑ª¡
 = 0;

167 
__cxa_eh_globÆs
 *
°©e
 = 
	`__cxa_gë_globÆs
();

169 #i‡
DEBUG_EXCEPTIONS


170 
	`fÊush
(
°dout
);

171 
decoded
[9];

172 
	`decode_Êags
(
sf
->
Êags
, 
decoded
);

173 
	`Ârötf
(
°dîr
, "__cilkrts_save_except W%u sf %p/%sÉxc %p [%u %p] suspend\n",

174 
w
->
£lf
, 
sf
, 
decoded
, 
exc
,

175 
°©e
->
unˇughtEx˚±i⁄s
,

176 
°©e
->
ˇughtEx˚±i⁄s
);

181 
	`ßve_ex˚±i⁄_öfo
(
w
, 
°©e
, 
exc
,Éx¯=
NULL
, "save_except");

183 
fuŒ_‰ame
 *
ff
 = 
w
->
l
->
‰ame_ff
;

184 
	`CILK_ASSERT
(
NULL
 =
ff
->
≥ndög_ex˚±i⁄
);

185 
ff
->
≥ndög_ex˚±i⁄
 = 
w
->
l
->pending_exception;

186 
w
->
l
->
≥ndög_ex˚±i⁄
 = 
NULL
;

188 
	`__cûkπs_ex˚±i⁄_‰om_•awn
(
w
, 
sf
);

194 #i‡
DEBUG_EXCEPTIONS


196 
__cxa_eh_globÆs
 *
°©e
 = 
	`__cxa_gë_globÆs
();

198 
	`fÊush
(
°dout
);

199 
decoded
[9];

200 
	`decode_Êags
(
sf
->
Êags
, 
decoded
);

201 
	`Ârötf
(
°dîr
, "__cilkrts_save_except W%d %p/%s %p->%p [%u %p]Éscape\n",

202 
w
->
£lf
, 
sf
, 
decoded
, 
exc
,

203 
exc
 ? 
	`to_cxx
”xc)->
√xtEx˚±i⁄
 : 0,

204 
°©e
->
unˇughtEx˚±i⁄s
,

205 
°©e
->
ˇughtEx˚±i⁄s
);

215 i‡(
exc
)

216 
	`CILK_ASSERT
(()
°©e
->
unˇughtEx˚±i⁄s
 > 0);

223 
	}
}

228 
	$__cûkπs_ßve_ex˚±i⁄_°©e
(
__cûkπs_w‹kî
 *
w
, 
fuŒ_‰ame
 *
ff
)

230 
	`ßve_ex˚±i⁄_öfo
(
w
, 
	`__cxa_gë_globÆs
(), 0, 
Ál£
, "undo-detach");

231 
	`CILK_ASSERT
(
NULL
 =
ff
->
≥ndög_ex˚±i⁄
);

232 
ff
->
≥ndög_ex˚±i⁄
 = 
w
->
l
->pending_exception;

233 
w
->
l
->
≥ndög_ex˚±i⁄
 = 
NULL
;

234 
	}
}

245 
NORETURN
 
	$__cûkπs_c_sync_ex˚±
 (
__cûkπs_w‹kî
 *
w
, 
__cûkπs_°ack_‰ame
 *
sf
)

247 
__cxa_eh_globÆs
 *
°©e
 = 
	`__cxa_gë_globÆs
();

248 
_Unwöd_Ex˚±i⁄
 *
exc
 = (_Unwöd_Ex˚±i⁄ *)
sf
->
ex˚±_d©a
;

250 
	`CILK_ASSERT
 (
sf
->
Êags
 & (
CILK_FRAME_UNSYNCHED
|
CILK_FRAME_EXCEPTING
) == (CILK_FRAME_UNSYNCHED|CILK_FRAME_EXCEPTING));

251 
sf
->
Êags
 &~
CILK_FRAME_EXCEPTING
;

253 #i‡
DEBUG_EXCEPTIONS


254 
	`fÊush
(
°dout
);

255 
decoded
[9];

256 
	`decode_Êags
(
sf
->
Êags
, 
decoded
);

257 i‡(
exc
)

258 
	`Ârötf
(
°dîr
, "__cilkrts_sync_except W%u %p/%s %p->%p [%u %p]\n",

259 
w
->
£lf
, 
sf
, 
decoded
, 
exc
,

260 
	`to_cxx
(
exc
)->
√xtEx˚±i⁄
,

261 
°©e
->
unˇughtEx˚±i⁄s
,

262 
°©e
->
ˇughtEx˚±i⁄s
);

264 
	`Ârötf
(
°dîr
, "__cilkrts_sync_except W%d %p/%sÇone [%u %p]\n",

265 
w
->
£lf
, 
sf
, 
decoded
,

266 
°©e
->
unˇughtEx˚±i⁄s
,

267 
°©e
->
ˇughtEx˚±i⁄s
);

272 
	`ßve_ex˚±i⁄_öfo
(
w
, 
°©e
, 
exc
, 
Ál£
, "sync_except");

275 
fuŒ_‰ame
 *
ff
 = 
w
->
l
->
‰ame_ff
;

276 
	`CILK_ASSERT
(
NULL
 =
ff
->
≥ndög_ex˚±i⁄
);

277 
ff
->
≥ndög_ex˚±i⁄
 = 
w
->
l
->pending_exception;

278 
w
->
l
->
≥ndög_ex˚±i⁄
 = 
NULL
;

281 
	`CILK_ASSERT
(!
°d
::
	`unˇught_ex˚±i⁄
());

282 
	`__cûkπs_c_sync
(
w
, 
sf
);

283 
	}
}

286 
≥ndög_ex˚±i⁄_öfo
::
	$de°ru˘
()

288 i‡(
a˘ive
) {

289 #i‡
DEBUG_EXCEPTIONS


290 
	`Ârötf
(
°dîr
, "de°royÉx˚±i⁄ infÿ%∞%p\n", 
this
, 
a˘ive
);

292 
	`_Unwöd_DñëeEx˚±i⁄
(
a˘ive
);

293 
a˘ive
 = 0;

295 #i‡
DEBUG_EXCEPTIONS


296 
	`Ârötf
(
°dîr
, "de°royÉx˚±i⁄ infÿ%p\n", 
this
);

299 
ru¡ime_°©e
.
ˇughtEx˚±i⁄s
) {

300 
__cxa_ex˚±i⁄
 *
exc
 = 
ru¡ime_°©e
.
ˇughtEx˚±i⁄s
;

301 
ru¡ime_°©e
.
ˇughtEx˚±i⁄s
 = 
exc
->
√xtEx˚±i⁄
;

302 #i‡
DEBUG_EXCEPTIONS


303 
	`Ârötf
(
°dîr
, "de°roy caughàex˚±i⁄ %p\n", 
this
);

305 
	`_Unwöd_DñëeEx˚±i⁄
(&
exc
->
unwödHódî
);

307 
	}
}

330 
≥ndög_ex˚±i⁄_öfo
 *

331 
	$__cûkπs_mîge_≥ndög_ex˚±i⁄s
 (

332 
__cûkπs_w‹kî
 *
w
,

333 
≥ndög_ex˚±i⁄_öfo
 *
À·
,

334 
≥ndög_ex˚±i⁄_öfo
 *
right
)

338 i‡(
NULL
 =
À·
) {

339 #i‡
DEBUG_EXCEPTIONS


340 i‡(
right
) {

341 
buf
[40];

342 
	`decode_ex˚±i⁄s
(
buf
,  buf, 
right
);

343 
	`Ârötf
(
°dîr
, "__cilkrts merge W%uÇil %p -> %p %s\n",

344 
w
->
£lf
, 
right
,Ñight, 
buf
);

347  
right
;

350 i‡(
NULL
 =
right
) {

351 #i‡
DEBUG_EXCEPTIONS


352 i‡(
À·
) {

353 
buf
[40];

354 
	`decode_ex˚±i⁄s
(
buf
,  buf, 
À·
);

355 
	`Ârötf
(
°dîr
, "__cilkrts merge W%u %pÇil -> %p %s\n",

356 
w
->
£lf
, 
À·
,Üe·, 
buf
);

359  
À·
;

362 #i‡
CILK_LIB_DEBUG


364 
À·
->
	`check
();

365 
right
->
	`check
();

368 #i‡
DEBUG_EXCEPTIONS


370 
buf1
[40], 
buf2
[40];

371 
	`decode_ex˚±i⁄s
(
buf1
,  buf1, 
À·
);

372 
	`decode_ex˚±i⁄s
(
buf2
,  buf2, 
right
);

373 
	`Ârötf
(
°dîr
, "__cilkrts merge W%u %p %s %p %s\n",

374 
w
->
£lf
, 
À·
, 
buf1
, 
right
, 
buf2
);

391 
__cxa_ex˚±i⁄
 *
ˇught
 = 
À·
->
ru¡ime_°©e
.
ˇughtEx˚±i⁄s
;

392 i‡(
ˇught
)

393 
	`CILK_ASSERT
(!
right
->
ru¡ime_°©e
.
ˇughtEx˚±i⁄s
);

395 
	`CILK_ASSERT
(!
À·
->
ªthrow
);

396 
À·
->
ªthrow
 = 
right
->rethrow;

397 
À·
->
ru¡ime_°©e
.
ˇughtEx˚±i⁄s
 = 
ˇught
 = 
right
->runtime_state.caughtExceptions;

398 
right
->
ru¡ime_°©e
.
ˇughtEx˚±i⁄s
 = 
NULL
;

402 c⁄° 
right_unˇught
 = 
right
->
ru¡ime_°©e
.
unˇughtEx˚±i⁄s
;

403 i‡(!
À·
->
a˘ive
){

404 
À·
->
a˘ive
 = 
right
->active;

405 
right
->
a˘ive
 = 0;

406 
À·
->
ru¡ime_°©e
.
unˇughtEx˚±i⁄s
 +
right_unˇught
;

407 i‡(
À·
->
a˘ive
)

412 
À·
->
ru¡ime_°©e
.
unˇughtEx˚±i⁄s
 +
right_unˇught
 - (
right
->
a˘ive
 != 0);

415 
right
->
	`de°ru˘
();

416 
	`__cûkπs_‰ame_‰ì
(
w
, 
right
,  *right);

419 i‡(
À·
->
	`em±y
()) {

420 
À·
->
	`de°ru˘
();

421 
	`__cûkπs_‰ame_‰ì
(
w
, 
À·
,  *left);

422 
À·
 = 
NULL
;

425 #i‡
CILK_LIB_DEBUG


426 i‡(
À·
)

427 
À·
->
	`check
();

430  
À·
;

431 
	}
}

447 
	$__cûkπs_c_ªsume_ex˚±
 (
_Unwöd_Ex˚±i⁄
 *
exc
)

449 #i‡
DEBUG_EXCEPTIONS


450 
	`Ârötf
(
°dîr
, "ªsumêex˚±i⁄ %p\n", 
exc
);

452 
_Unwöd_Rós⁄_Code
 
why
 = 
	`_Unwöd_Rai£Ex˚±i⁄
(
exc
);

453 
	`__cûkπs_bug
 ("CûkÑu¡imêîr‹: faûedÅÿªö°©êsu•ídedÉx˚±i⁄ %∞(%d)\n", 
exc
, 
why
);

454 
	}
}

462 
	$__cûkπs_£tup_f‹_executi⁄_sysdï
(
__cûkπs_w‹kî
 *
w
, 
fuŒ_‰ame
 *
ff
)

466 
__cxa_eh_globÆs
 *
°©e
 = 
	`__cxa_gë_globÆs
 ();

467 
≥ndög_ex˚±i⁄_öfo
 *
öfo
 = 
w
->
l
->
≥ndög_ex˚±i⁄
;

469 i‡(
öfo
 =
NULL
)

472 
w
->
l
->
≥ndög_ex˚±i⁄
 = 0;

474 #i‡
DEBUG_EXCEPTIONS


475 
_Unwöd_Ex˚±i⁄
 *
exc
 = 
öfo
->
a˘ive
;

476 i‡(
exc
) {

477 
	`fÊush
(
°dout
);

478 
	`Ârötf
(
°dîr
, "__cilkrts_resume_except W%u %p->%p [%u %p]\n",

479 
w
->
£lf
, 
exc
,

480 
	`to_cxx
(
exc
)->
√xtEx˚±i⁄
,

481 
öfo
->
ru¡ime_°©e
.
unˇughtEx˚±i⁄s
,

482 
öfo
->
ru¡ime_°©e
.
ˇughtEx˚±i⁄s
);

487 i‡(
°©e
->
unˇughtEx˚±i⁄s
 || sèã->
ˇughtEx˚±i⁄s
)

488 
	`__cûkπs_bug
("W%u:Ñesumög wôhÇ⁄-em±yÖri‹Éx˚±i⁄ sèã %u %p\n", 
°©e
->
unˇughtEx˚±i⁄s
, sèã->
ˇughtEx˚±i⁄s
);

490 *
°©e
 = 
öfo
->
ru¡ime_°©e
;

491 
öfo
->
ru¡ime_°©e
.
ˇughtEx˚±i⁄s
 = 0;

492 
öfo
->
ru¡ime_°©e
.
unˇughtEx˚±i⁄s
 = 0;

494 i‡(
öfo
->
ªthrow
) {

495 
öfo
->
ªthrow
 = 
Ál£
;

498 
ff
->
ˇŒ_°ack
->
Êags
 |
CILK_FRAME_EXCEPTING
;

500 i‡(
öfo
->
a˘ive
) {

501 
ff
->
ˇŒ_°ack
->
Êags
 |
CILK_FRAME_EXCEPTING
;

502 
ff
->
ˇŒ_°ack
->
ex˚±_d©a
 = 
öfo
->
a˘ive
;

503 
öfo
->
a˘ive
 = 0;

506 i‡(
öfo
->
	`em±y
()) {

507 
öfo
->
	`de°ru˘
();

508 
	`__cûkπs_‰ame_‰ì
(
w
, 
öfo
,  *info);

509 
w
->
l
->
≥ndög_ex˚±i⁄
 = 
NULL
;

512 #i‡
CILK_LIB_DEBUG


513 i‡(
ff
->
ˇŒ_°ack
->
ex˚±_d©a
)

514 
	`CILK_ASSERT
(
°d
::
	`unˇught_ex˚±i⁄
());

516 
	}
}

520 
≥ndög_ex˚±i⁄_öfo
 *
	$__cûkπs_gë_ex˚±i⁄
(
__cûkπs_w‹kî
 *
w
,

521 
__cûkπs_°ack_‰ame
 *
sf
)

523 
≥ndög_ex˚±i⁄_öfo
 *
öfo
 = 
w
->
l
->
≥ndög_ex˚±i⁄
;

525 i‡(
öfo
 =
NULL
) {

526 
sf
->
Êags
 &~
CILK_FRAME_EXCEPTING
;

530 
w
->
l
->
≥ndög_ex˚±i⁄
 = 
NULL
;

534 
_Unwöd_Ex˚±i⁄
 *
exc
 = 
öfo
->
a˘ive
;

535 
öfo
->
a˘ive
 = 
NULL
;

536 
öfo
->
	`de°ru˘
();

537 
	`__cûkπs_‰ame_‰ì
(
w
, 
öfo
,  *info);

538 
öfo
 = 0;

539 
sf
->
Êags
 |
CILK_FRAME_EXCEPTING
;

540 
sf
->
ex˚±i⁄
 = 
exc
;

542 
	}
}

546 
__©åibuã__
((
n⁄nuŒ
)Ë
	$__cûkπs_gcc_ªthrow
(
__cûkπs_°ack_‰ame
 *
sf
)

548 #ifde‡
__CYGWIN__


551 
	`__cûkπs_bug
("The Cygwin implementation ofÅhe Intel Cilk PlusÑuntime doesn't supportÉxceptions\n");

553 i‡(
sf
->
ex˚±_d©a
) {

554 #i‡
CILK_LIB_DEBUG


555 
	`CILK_ASSERT
(
°d
::
	`unˇught_ex˚±i⁄
());

557 
	`_Unwöd_Resume
 ((
_Unwöd_Ex˚±i⁄
 *)
sf
->
ex˚±_d©a
);

559 
throw
;

562 
	}
}

	@except-gcc.h

39 #i‚de‡
INCLUDED_EXCEPT_GCC_DOT_H


40 
	#INCLUDED_EXCEPT_GCC_DOT_H


	)

42 #i‚de‡
__˝lu•lus


43 #îr‹ 
ex˚±
-
gcc
.
h
 
should
 
be
 
u£d
 
ö
 
C
++ 
code
 
⁄ly
.

46 
	~<cûk/comm⁄.h
>

47 
	~<ex˚±i⁄
>

48 
	~<ty≥öfo
>

50 
	g__cxa_ex˚±i⁄
;

52 
__CILKRTS_BEGIN_EXTERN_C


55 
	e_Unwöd_Rós⁄_Code
 {

56 
	m_URC_NO_REASON
 = 0,

57 
	m_URC_FOREIGN_EXCEPTION_CAUGHT
 = 1,

58 
	m_URC_FATAL_PHASE2_ERROR
 = 2,

59 
	m_URC_FATAL_PHASE1_ERROR
 = 3,

60 
	m_URC_NORMAL_STOP
 = 4,

61 
	m_URC_END_OF_STACK
 = 5,

62 
	m_URC_HANDLER_FOUND
 = 6,

63 
	m_URC_INSTALL_CONTEXT
 = 7,

64 
	m_URC_CONTINUE_UNWIND
 = 8

65 } 
	t_Unwöd_Rós⁄_Code
;

67 
_Unwöd_Ex˚±i⁄
 
	t_Unwöd_Ex˚±i⁄
;

70 (*
	t_Unwöd_Ex˚±i⁄_CÀ™up_Fn
)(
	t_Unwöd_Rós⁄_Code
 
	tªas⁄
,

71 
	t_Unwöd_Ex˚±i⁄
 *
	texc
);

80 
	s_Unwöd_Ex˚±i⁄


82 
uöt64_t
 
ex˚±i⁄_˛ass
;

83 
_Unwöd_Ex˚±i⁄_CÀ™up_Fn
 
ex˚±i⁄_˛ónup
;

84 
¥iv©e_1
;

85 
¥iv©e_2
;

89 
_Unwöd_Rós⁄_Code


90 
	`_Unwöd_Rai£Ex˚±i⁄
(
_Unwöd_Ex˚±i⁄
 *
ex˚±i⁄_obje˘
);

93 
	`_Unwöd_Resume
(
_Unwöd_Ex˚±i⁄
 *
ex˚±i⁄_obje˘
);

96 
	`_Unwöd_DñëeEx˚±i⁄
(
_Unwöd_Ex˚±i⁄
 *
ex˚±i⁄_obje˘
);

105 
	s__cxa_ex˚±i⁄
 {

106 
°d
::
ty≥_öfo
 * 
ex˚±i⁄Ty≥
;

107 (*
ex˚±i⁄De°ru˘‹
)(*);

108 
°d
::
u√x≥˘ed_h™dÀr
 
u√x≥˘edH™dÀr
;

109 
°d
::
ãrmö©e_h™dÀr
 
ãrmö©eH™dÀr
;

110 
__cxa_ex˚±i⁄
 * 
√xtEx˚±i⁄
;

112 
h™dÀrCou¡
;

113 
h™dÀrSwôchVÆue
;

114 c⁄° * 
a˘i⁄Rec‹d
;

115 c⁄° * 
œnguageS≥cificD©a
;

116 * 
ˇtchTemp
;

117 * 
adju°edPå
;

119 
_Unwöd_Ex˚±i⁄
 
unwödHódî
;

122 
ölöe
 
__cxa_ex˚±i⁄
 *
	$to_cxx
(
_Unwöd_Ex˚±i⁄
 *
e
)

124  ((
__cxa_ex˚±i⁄
 *)(
e
+1)) - 1;

125 
	}
}

127 
	s__cxa_eh_globÆs
 {

128 
__cxa_ex˚±i⁄
 *
	mˇughtEx˚±i⁄s
;

129 
	munˇughtEx˚±i⁄s
;

130 } 
	t__cxa_eh_globÆs
;

132 
__cxa_eh_globÆs
*
	$__cxa_gë_globÆs
(Ë
	`throw
();

134 
__CILKRTS_END_EXTERN_C


	@except.h

36 #i‚de‡
INCLUDED_EXCEPT_DOT_H


37 
	#INCLUDED_EXCEPT_DOT_H


	)

39 
	~<cûk/comm⁄.h
>

40 
	~<öã∫Æ/abi.h
>

41 
	~"fuŒ_‰ame.h
"

43 
__CILKRTS_BEGIN_EXTERN_C


49 
≥ndög_ex˚±i⁄_öfo
 
	t≥ndög_ex˚±i⁄_öfo
;

75 
COMMON_SYSDEP


76 
≥ndög_ex˚±i⁄_öfo
 *
__cûkπs_mîge_≥ndög_ex˚±i⁄s
(

77 
__cûkπs_w‹kî
 *
w
,

78 
≥ndög_ex˚±i⁄_öfo
 *
À·_ex˚±i⁄
,

79 
≥ndög_ex˚±i⁄_öfo
 *
right_ex˚±i⁄
);

87 
COMMON_SYSDEP


88 
__cûkπs_ßve_ex˚±i⁄_°©e
(
__cûkπs_w‹kî
 *
w
,

89 
fuŒ_‰ame
 *
ff
);

99 
dñëe_ex˚±i⁄_obj
 (
__cûkπs_w‹kî
 *
w
,

100 
≥ndög_ex˚±i⁄_öfo
 *
≥i
,

101 
dñëe_obje˘
);

103 #i‚de‡
_WIN32


105 
NON_COMMON
 
NORETURN
 
__cûkπs_c_sync_ex˚±
(
__cûkπs_w‹kî
 *
w
,

106 
__cûkπs_°ack_‰ame
 *
sf
);

107 
NON_COMMON
 
__©åibuã__
((
n⁄nuŒ
))

108 
__cûkπs_gcc_ªthrow
(
__cûkπs_°ack_‰ame
 *
sf
);

111 
	g__CILKRTS_END_EXTERN_C


	@frame_malloc.c

29 
	~"‰ame_mÆloc.h
"

30 
	~"bug.h
"

31 
	~"loˇl_°©e.h
"

32 
	~"cûk_mÆloc.h
"

34 
	~<mem‹y.h
>

37 #i‡
USE_MMAP


38 
	#__USE_MISC
 1

	)

39 
	~<sys/mm™.h
>

40 
	~<î∫o.h
>

46 #ifde‡
_DEBUG


47 
	#HEADER_FILL_CHAR
 0xbf

	)

53 #i‡
deföed
(
NDEBUG
Ë&& deföed (
HEADER_FILL_CHAR
)

54 #¥agm®
mesßge
 ("Warning: HEADER_FILL_CHAR defined foráÑelease build")

57 
Æloˇã_b©ch
(
__cûkπs_w‹kî
 *
w
, 
buckë
, 
size_t
 
size
);

59 #i‚de‡
_WIN32


61 c⁄° 
	g__cûkπs_buckë_sizes
[
FRAME_MALLOC_NBUCKETS
] =

66 
	#FRAME_MALLOC_BUCKET_TO_SIZE
(
buckë
Ë
__cûkπs_buckë_sizes
[buckë]

	)

69 
	#FRAME_MALLOC_MAX_SIZE
 2048

	)

75 
	#FRAME_MALLOC_BUCKET_TO_SIZE
(
buckë
Ë((
size_t
)(64 << (buckë)))

	)

78 
	#FRAME_MALLOC_MAX_SIZE
 \

79 
	`FRAME_MALLOC_BUCKET_TO_SIZE
(
FRAME_MALLOC_NBUCKETS
 - 1)

	)

84 
	$push
(
‰ì_li°
 **
b
, ‰ì_li° *
p
)

86 #ifde‡
HEADER_FILL_CHAR


87 
	`mem£t
 (
p
, 
HEADER_FILL_CHAR
, 
	`FRAME_MALLOC_BUCKET_TO_SIZE
(0));

90 
p
->
cdr
 = *
b
;

91 *
b
 = 
p
;

92 
	}
}

94 
‰ì_li°
 *
	$p›
(
‰ì_li°
 **
b
)

96 
‰ì_li°
 *
p
 = *
b
;

97 i‡(
p
)

98 *
b
 = 
p
->
cdr
;

99  
p
;

100 
	}
}

109 
	#FRAME_MALLOC_CHUNK
 (32 * 1024 - 128)

	)

112 
	spoﬁ_c⁄s
 {

113 *
	mp
;

114 
poﬁ_c⁄s
 *
	mcdr
;

117 
	$exãnd_globÆ_poﬁ
(
globÆ_°©e_t
 *
g
)

120 
poﬁ_c⁄s
 *
c
 = (poﬁ_c⁄†*)
	`__cûkπs_mÆloc
((*c));

121 
g
->
‰ame_mÆloc
.
poﬁ_begö
 =

122 (*)
	`__cûkπs_mÆloc
((
size_t
)
FRAME_MALLOC_CHUNK
);

123 
g
->
‰ame_mÆloc
.
poﬁ_íd
 =

124 
g
->
‰ame_mÆloc
.
poﬁ_begö
 + 
FRAME_MALLOC_CHUNK
;

125 
g
->
‰ame_mÆloc
.
Æloˇãd_‰om_os
 +
FRAME_MALLOC_CHUNK
;

126 
c
->
p
 = 
g
->
‰ame_mÆloc
.
poﬁ_begö
;

127 
c
->
cdr
 = 
g
->
‰ame_mÆloc
.
poﬁ_li°
;

128 
g
->
‰ame_mÆloc
.
poﬁ_li°
 = 
c
;

129 
	}
}

132 
‰ì_li°
 *
	$globÆ_Æloc
(
globÆ_°©e_t
 *
g
, 
buckë
)

134 
‰ì_li°
 *
mem
;

135 
size_t
 
size
;

137 
	`CILK_ASSERT
(
buckë
 < 
FRAME_MALLOC_NBUCKETS
);

138 
size
 = 
	`FRAME_MALLOC_BUCKET_TO_SIZE
(
buckë
);

139 
g
->
‰ame_mÆloc
.
Æloˇãd_‰om_globÆ_poﬁ
 +
size
;

141 i‡(!(
mem
 = 
	`p›
(&
g
->
‰ame_mÆloc
.
globÆ_‰ì_li°
[
buckë
]))) {

143 
	`CILK_ASSERT
(
g
->
‰ame_mÆloc
.
poﬁ_begö
 <g->‰ame_mÆloc.
poﬁ_íd
);

144 i‡(
g
->
‰ame_mÆloc
.
poﬁ_begö
 + 
size
 > g->‰ame_mÆloc.
poﬁ_íd
) {

146 
g
->
‰ame_mÆloc
.
wa°ed
 +=

147 
g
->
‰ame_mÆloc
.
poﬁ_íd
 - g->‰ame_mÆloc.
poﬁ_begö
;

148 
	`exãnd_globÆ_poﬁ
(
g
);

150 
mem
 = (
‰ì_li°
 *)
g
->
‰ame_mÆloc
.
poﬁ_begö
;

151 
g
->
‰ame_mÆloc
.
poﬁ_begö
 +
size
;

154  
mem
;

155 
	}
}

157 
	$globÆ_‰ì
(
globÆ_°©e_t
 *
g
, *
mem
, 
buckë
)

159 
size_t
 
size
;

161 
	`CILK_ASSERT
(
buckë
 < 
FRAME_MALLOC_NBUCKETS
);

162 
size
 = 
	`FRAME_MALLOC_BUCKET_TO_SIZE
(
buckë
);

163 
g
->
‰ame_mÆloc
.
Æloˇãd_‰om_globÆ_poﬁ
 -
size
;

165 
	`push
(&
g
->
‰ame_mÆloc
.
globÆ_‰ì_li°
[
buckë
], 
mem
);

166 
	}
}

168 
	$__cûkπs_‰ame_mÆloc_globÆ_öô
(
globÆ_°©e_t
 *
g
)

170 
i
;

172 
	`__cûkπs_muãx_öô
(&
g
->
‰ame_mÆloc
.
lock
);

173 
g
->
‰ame_mÆloc
.
check_f‹_Àaks
 = 1;

174 
g
->
‰ame_mÆloc
.
poﬁ_li°
 = 0;

175 
g
->
‰ame_mÆloc
.
poﬁ_begö
 = 0;

176 
g
->
‰ame_mÆloc
.
poﬁ_íd
 = 0;

177 
g
->
‰ame_mÆloc
.
b©ch_size
 = 8000;

178 
g
->
‰ame_mÆloc
.
pŸítül_limô
 = 4 * g->‰ame_mÆloc.
b©ch_size
;

179 
g
->
‰ame_mÆloc
.
Æloˇãd_‰om_os
 = 0;

180 
g
->
‰ame_mÆloc
.
Æloˇãd_‰om_globÆ_poﬁ
 = 0;

181 
g
->
‰ame_mÆloc
.
wa°ed
 = 0;

182 
i
 = 0; i < 
FRAME_MALLOC_NBUCKETS
; ++i)

183 
g
->
‰ame_mÆloc
.
globÆ_‰ì_li°
[
i
] = 0;

184 
	}
}

187 
size_t
 
	$cou¡_mem‹y_ö_globÆ_li°
(
globÆ_°©e_t
 *
g
)

191 
size_t
 
size_ªmaöög_ö_globÆ_li°
 = 0;

192 
i
;

193 
i
 = 0; i < 
FRAME_MALLOC_NBUCKETS
; ++i) {

194 
‰ì_li°
 *
p
;

195 
size_t
 
size_ö_buckë
 = 0;

196 
p
 = 
g
->
‰ame_mÆloc
.
globÆ_‰ì_li°
[
i
];

198 
p
) {

199 
size_ö_buckë
 +
	`FRAME_MALLOC_BUCKET_TO_SIZE
(
i
);

200 
p
 =Ö->
cdr
;

202 
size_ªmaöög_ö_globÆ_li°
 +
size_ö_buckë
;

204  
size_ªmaöög_ö_globÆ_li°
;

205 
	}
}

208 
	$__cûkπs_‰ame_mÆloc_globÆ_˛ónup
(
globÆ_°©e_t
 *
g
)

210 
poﬁ_c⁄s
 *
c
;

212 i‡(
g
->
‰ame_mÆloc
.
check_f‹_Àaks
) {

213 
size_t
 
mem‹y_ö_globÆ_li°
 = 
	`cou¡_mem‹y_ö_globÆ_li°
(
g
);

220 i‡(
mem‹y_ö_globÆ_li°
 > 
g
->
‰ame_mÆloc
.
Æloˇãd_‰om_os
) {

221 
	`__cûkπs_bug
("\nError. The CilkÑuntime data structures may have been corrupted.\n");

225 (
c
 = 
g
->
‰ame_mÆloc
.
poﬁ_li°
)) {

226 
g
->
‰ame_mÆloc
.
poﬁ_li°
 = 
c
->
cdr
;

227 
	`__cûkπs_‰ì
(
c
->
p
);

228 
	`__cûkπs_‰ì
(
c
);

231 
	`__cûkπs_muãx_de°roy
(0, &
g
->
‰ame_mÆloc
.
lock
);

235 i‡(
g
->
‰ame_mÆloc
.
check_f‹_Àaks


236 && (
g
->
‰ame_mÆloc
.
Æloˇãd_‰om_globÆ_poﬁ
 != 0))

238 
	`__cûkπs_bug
("\n"

245 
	}
}

252 
	$Æloˇã_b©ch
(
__cûkπs_w‹kî
 *
w
, 
buckë
, 
size_t
 
size
)

254 
globÆ_°©e_t
 *
g
 = 
w
->g;

256 
	`__cûkπs_muãx_lock
(
w
, &
g
->
‰ame_mÆloc
.
lock
); {

257 #i‡
USE_MMAP


258 *
p
 = 
	`mm≠
(0, 12288, 
PROT_READ
|
PROT_WRITE
, 
MAP_PRIVATE
|
MAP_ANONYMOUS
, -1, 0);

259 i‡(
p
 =
MAP_FAILED
)

260 
	`__cûkπs_bug
("mm≠ faûed %d", 
î∫o
);

261 
	`as£π
(
size
 < 4096);

262 
	`as£π
(
p
 !
MAP_FAILED
);

263 
	`m¥Ÿe˘
(
p
, 4096, 
PROT_NONE
);

264 
	`m¥Ÿe˘
(
p
 + 8192, 4096, 
PROT_NONE
);

265 
w
->
l
->
buckë_pŸítül
[
buckë
] +
size
;

266 
	`push
(&
w
->
l
->
‰ì_li°
[
buckë
], (‰ì_li° *)(
p
 + 8192 - 
size
));

268 
size_t
 
byãs_Æloˇãd
 = 0;

270 
w
->
l
->
buckë_pŸítül
[
buckë
] +
size
;

271 
byãs_Æloˇãd
 +
size
;

272 
	`push
(&
w
->
l
->
‰ì_li°
[
buckë
], 
	`globÆ_Æloc
(
g
, bucket));

273 } 
byãs_Æloˇãd
 < 
g
->
‰ame_mÆloc
.
b©ch_size
);

275 } 
	`__cûkπs_muãx_u∆ock
(
w
, &
g
->
‰ame_mÆloc
.
lock
);

277 
	}
}

279 
	$gc_buckë
(
__cûkπs_w‹kî
 *
w
, 
buckë
, 
size_t
 
size
)

281 
‰ì_li°
 *
p
, *
q
;

282 
globÆ_°©e_t
 *
g
 = 
w
->g;

283 
size_t
 
pŸ
 = 
w
->
l
->
buckë_pŸítül
[
buckë
];

284 
size_t
 
√wpŸ
;

288 
√wpŸ
 = 0;

289 
√wpŸ
 = 0, 
p
 = 
w
->
l
->
‰ì_li°
[
buckë
];Ö && 2 *ÇewpŸ < 
pŸ
;

290 
p
 =Ö->
cdr
, 
√wpŸ
 +
size
)

292 
w
->
l
->
buckë_pŸítül
[
buckë
] = 
√wpŸ
;

294 i‡(
p
) {

299 
	`__cûkπs_muãx_lock
(
w
, &
g
->
‰ame_mÆloc
.
lock
); {

300 (
q
 = 
	`p›
(&
p
->
cdr
)))

301 #i‡
USE_MMAP


302 
	`munm≠
((*)
q
 + 
size
 - 8192, 12288);

304 
	`globÆ_‰ì
(
g
, 
q
, 
buckë
);

306 } 
	`__cûkπs_muãx_u∆ock
(
w
, &
g
->
‰ame_mÆloc
.
lock
);

308 
	}
}

312 
	$move_buckë_to_globÆ_‰ì_li°
(
__cûkπs_w‹kî
 *
w
,

313 
buckë
)

315 
‰ì_li°
 *
p
, *
q
;

316 
globÆ_°©e_t
 *
g
 = 
w
->g;

317 
p
 = 
w
->
l
->
‰ì_li°
[
buckë
];

319 i‡(
p
) {

320 
	`__cûkπs_muãx_lock
(
w
, &
g
->
‰ame_mÆloc
.
lock
); {

321 (
q
 = 
	`p›
(&
p
))) {

322 #i‡
USE_MMAP


323 
size_t
 
size
 = 
	`FRAME_MALLOC_BUCKET_TO_SIZE
(
buckë
);

324 
	`munm≠
((*)
q
 + 
size
 - 8192, 12288);

326 
	`globÆ_‰ì
(
g
, 
q
, 
buckë
);

329 } 
	`__cûkπs_muãx_u∆ock
(
w
, &
g
->
‰ame_mÆloc
.
lock
);

334 
w
->
l
->
buckë_pŸítül
[
buckë
] = 0;

335 
	}
}

337 
	$buckë_of_size
(
size_t
 
size
)

339 
i
;

341 
i
 = 0; i < 
FRAME_MALLOC_NBUCKETS
; ++i)

342 i‡(
size
 <
	`FRAME_MALLOC_BUCKET_TO_SIZE
(
i
))

343  
i
;

345 
	`CILK_ASSERT
(0 );

347 
	}
}

349 
size_t
 
	$__cûkπs_‰ame_mÆloc_roundup
(
size_t
 
size
)

351 i‡(
size
 > 
FRAME_MALLOC_MAX_SIZE
) {

354 
buckë
 = 
	`buckë_of_size
(
size
);

355 
size
 = 
	`FRAME_MALLOC_BUCKET_TO_SIZE
(
buckë
);

357  
size
;

358 
	}
}

360 
size_t
 
	$__cûkπs_size_of_buckë
(
buckë
)

362 
	`CILK_ASSERT
(
buckë
 >0 && buckë < 
FRAME_MALLOC_NBUCKETS
);

363  
	`FRAME_MALLOC_BUCKET_TO_SIZE
(
buckë
);

364 
	}
}

366 *
	$__cûkπs_‰ame_mÆloc
(
__cûkπs_w‹kî
 *
w
, 
size_t
 
size
)

368 
buckë
;

369 *
mem
;

372 i‡(!
w
 || 
size
 > 
FRAME_MALLOC_MAX_SIZE
) {

373 
	`NOTE_INTERVAL
(
w
, 
INTERVAL_FRAME_ALLOC_LARGE
);

374  
	`__cûkπs_mÆloc
(
size
);

377 
	`START_INTERVAL
(
w
, 
INTERVAL_FRAME_ALLOC
); {

378 
buckë
 = 
	`buckë_of_size
(
size
);

379 
size
 = 
	`FRAME_MALLOC_BUCKET_TO_SIZE
(
buckë
);

381 !(
mem
 = 
	`p›
(&
w
->
l
->
‰ì_li°
[
buckë
]))) {

383 
	`START_INTERVAL
(
w
, 
INTERVAL_FRAME_ALLOC_GLOBAL
) {

384 
	`Æloˇã_b©ch
(
w
, 
buckë
, 
size
);

385 } 
	`STOP_INTERVAL
(
w
, 
INTERVAL_FRAME_ALLOC_GLOBAL
);

387 } 
	`STOP_INTERVAL
(
w
, 
INTERVAL_FRAME_ALLOC
);

389  
mem
;

390 
	}
}

392 
	$__cûkπs_‰ame_‰ì
(
__cûkπs_w‹kî
 *
w
, *
p0
, 
size_t
 
size
)

394 
buckë
;

395 
‰ì_li°
 *
p
 = (‰ì_li° *)
p0
;

398 i‡(!
w
 || 
size
 > 
FRAME_MALLOC_MAX_SIZE
) {

399 
	`NOTE_INTERVAL
(
w
, 
INTERVAL_FRAME_FREE_LARGE
);

400 
	`__cûkπs_‰ì
(
p
);

404 #i‡
CILK_LIB_DEBUG


405 *(vﬁ©ûê*)
w
;

408 
	`START_INTERVAL
(
w
, 
INTERVAL_FRAME_FREE
); {

409 
buckë
 = 
	`buckë_of_size
(
size
);

410 
size
 = 
	`FRAME_MALLOC_BUCKET_TO_SIZE
(
buckë
);

411 
w
->
l
->
buckë_pŸítül
[
buckë
] +
size
;

412 
	`push
(&
w
->
l
->
‰ì_li°
[
buckë
], 
p
);

413 i‡(
w
->
l
->
buckë_pŸítül
[
buckë
] >

414 
w
->
g
->
‰ame_mÆloc
.
pŸítül_limô
) {

415 
	`START_INTERVAL
(
w
, 
INTERVAL_FRAME_FREE_GLOBAL
) {

416 
	`gc_buckë
(
w
, 
buckë
, 
size
);

417 } 
	`STOP_INTERVAL
(
w
, 
INTERVAL_FRAME_FREE_GLOBAL
);

419 } 
	`STOP_INTERVAL
(
w
, 
INTERVAL_FRAME_FREE
);

420 
	}
}

422 
	$__cûkπs_‰ame_mÆloc_≥r_w‹kî_öô
(
__cûkπs_w‹kî
 *
w
)

424 
i
;

425 
loˇl_°©e
 *
l
 = 
w
->l;

427 
i
 = 0; i < 
FRAME_MALLOC_NBUCKETS
; ++i) {

428 
l
->
‰ì_li°
[
i
] = 0;

429 
l
->
buckë_pŸítül
[
i
] = 0;

431 
	}
}

433 
	$__cûkπs_‰ame_mÆloc_≥r_w‹kî_˛ónup
(
__cûkπs_w‹kî
 *
w
)

435 
i
;

439 
i
 = 0; i < 
FRAME_MALLOC_NBUCKETS
; ++i) {

440 
	`move_buckë_to_globÆ_‰ì_li°
(
w
, 
i
);

442 
	}
}

	@frame_malloc.h

38 #i‚de‡
INCLUDED_FRAME_MALLOC_DOT_H


39 
	#INCLUDED_FRAME_MALLOC_DOT_H


	)

41 
	~"w‹kî_muãx.h
"

42 
	~"πs-comm⁄.h
"

43 
	~<öã∫Æ/abi.h
>

45 #ifde‡
__˝lu•lus


46 
	~<c°ddef
>

48 
	~<°ddef.h
>

51 
	g__CILKRTS_BEGIN_EXTERN_C


57 
	#FRAME_MALLOC_NBUCKETS
 6

	)

60 
	s‰ì_li°
 {

62 
‰ì_li°
 *
	mcdr
;

66 
	s__cûkπs_‰ame_ˇche


69 
muãx
 
	mlock
;

72 
poﬁ_c⁄s
 *
	mpoﬁ_li°
;

75 *
	mpoﬁ_begö
;

78 *
	mpoﬁ_íd
;

81 
‰ì_li°
 *
	mglobÆ_‰ì_li°
[
FRAME_MALLOC_NBUCKETS
];

87 
size_t
 
	mb©ch_size
;

90 
size_t
 
	mpŸítül_limô
;

93 
	mcheck_f‹_Àaks
;

96 
size_t
 
	mÆloˇãd_‰om_os
;

99 
size_t
 
	mwa°ed
;

102 
size_t
 
	mÆloˇãd_‰om_globÆ_poﬁ
;

115 
COMMON_PORTABLE


116 *
	$__cûkπs_‰ame_mÆloc
(
__cûkπs_w‹kî
 *
w
,

117 
size_t
 
size
Ë
cûk_nŸhrow
;

128 
COMMON_PORTABLE


129 
	$__cûkπs_‰ame_‰ì
(
__cûkπs_w‹kî
 *
w
,

130 * 
p
,

131 
size_t
 
size
Ë
cûk_nŸhrow
;

140 
COMMON_PORTABLE


141 
	`__cûkπs_‰ame_mÆloc_globÆ_˛ónup
(
globÆ_°©e_t
 *
g
);

148 
COMMON_PORTABLE


149 
	`__cûkπs_‰ame_mÆloc_≥r_w‹kî_öô
(
__cûkπs_w‹kî
 *
w
);

159 
COMMON_PORTABLE


160 
	`__cûkπs_‰ame_mÆloc_≥r_w‹kî_˛ónup
(
__cûkπs_w‹kî
 *
w
);

171 
COMMON_PORTABLE


172 
size_t
 
	$__cûkπs_‰ame_mÆloc_roundup
(
size_t
 
size
Ë
cûk_nŸhrow
;

182 
COMMON_PORTABLE


183 
size_t
 
	$__cûkπs_size_of_buckë
(
buckë
Ë
cûk_nŸhrow
;

190 
COMMON_PORTABLE


191 
	`__cûkπs_‰ame_mÆloc_globÆ_öô
(
globÆ_°©e_t
 *
g
);

193 
__CILKRTS_END_EXTERN_C


	@full_frame.c

30 
	~"fuŒ_‰ame.h
"

31 
	~"°©s.h
"

32 
	~"os.h
"

33 
	~"bug.h
"

34 
	~"jmpbuf.h
"

35 
	~"‰ame_mÆloc.h
"

36 #ifde‡
CILK_IVARS


37 
	~"öã∫Æ/abi.h
"

40 
COMMON_PORTABLE


41 
fuŒ_‰ame
 *
	$__cûkπs_make_fuŒ_‰ame
(
__cûkπs_w‹kî
 *
w
,

42 
__cûkπs_°ack_‰ame
 *
sf
)

44 
fuŒ_‰ame
 *
ff
;

46 
	`START_INTERVAL
(
w
, 
INTERVAL_ALLOC_FULL_FRAME
) {

47 
ff
 = (
fuŒ_‰ame
 *)
	`__cûkπs_‰ame_mÆloc
(
w
, (*ff));

48 
	`__cûkπs_muãx_öô
(&
ff
->
lock
);

50 
ff
->
fuŒ_‰ame_magic_0
 = 
FULL_FRAME_MAGIC_0
;

51 
ff
->
joö_cou¡î
 = 0;

52 
ff
->
∑ª¡
 = 0;

53 
ff
->
rightmo°_chûd
 = 0;

54 
ff
->
À·_siblög
 = ff->
right_siblög
 = 0;

55 
ff
->
ˇŒ_°ack
 = 
sf
;

56 
ff
->
is_ˇŒ_chûd
 = 0;

57 
ff
->
simuœãd_°ﬁí
 = 0;

58 
ff
->
chûdªn_ªdu˚r_m≠
 = ff->
right_ªdu˚r_m≠
 = 0;

59 
ff
->
≥ndög_ex˚±i⁄
 =

60 
ff
->
chûd_≥ndög_ex˚±i⁄
 =

61 
ff
->
right_≥ndög_ex˚±i⁄
 = 
NULL
;

63 
ff
->
sync_•
 = 0;

64 #ifde‡
_WIN32


65 
ff
->
ex˚±i⁄_•
 = 0;

66 
ff
->
åyÀvñ
 = ()-1;

67 
ff
->
ªgi°øti⁄
 = 0;

69 
ff
->
‰ame_size
 = 0;

72 
ff
->
°ack_£lf
 = 0;

73 
ff
->
°ack_chûd
 = 0;

75 
ff
->
sync_ma°î
 = 0;

77 #ifde‡
CILK_IVARS


78 
ff
->
c⁄cuºít_cûk_Êags
 = 0;

82 
ff
->
fuŒ_‰ame_magic_1
 = 
FULL_FRAME_MAGIC_1
;

83 } 
	`STOP_INTERVAL
(
w
, 
INTERVAL_ALLOC_FULL_FRAME
);

84  
ff
;

85 
	}
}

87 #ifde‡
CILK_IVARS


88 
	$¥öt_Êags
(
fuŒ_‰ame
 *
ff
)

90 if(! 
ff
->
c⁄cuºít_cûk_Êags
) ;

91 
	`¥ötf
("<<<<<<<<<<<<<<<<<<< >>>>> fuŒ_‰amê%∞ha†Êag†", 
ff
);

92 if(
ff
->
c⁄cuºít_cûk_Êags
 & 
FULL_FRAME_BLOCKED
Ë
	`¥ötf
("FULL_FRAME_BLOCKED ");

93 if(
ff
->
c⁄cuºít_cûk_Êags
 & 
FULL_FRAME_SELF_STEAL
Ë
	`¥ötf
("FULL_FRAME_SELF_STEAL ");

94 
	`¥ötf
("\n");

95 
	}
}

98 
COMMON_PORTABLE
 
	$__cûkπs_put_°ack
(
fuŒ_‰ame
 *
ff
,

99 
__cûkπs_°ack_‰ame
 *
sf
)

110 
±rdiff_t
 
sync_•_i
 = (±rdiff_tË
ff
->
sync_•
;

111 * 
•
 = (*Ë
	`__cûkπs_gë_•
(
sf
);

113 
ff
->
sync_•
 = 
•
 + 
sync_•_i
;

115 
	`DBGPRINTF
("%d- __cilkrts_put_stack -ádjust (+) sync "

117 
	`__cûkπs_gë_és_w‹kî
()->
£lf
, 
ff
, 
•
, ff->
sync_•
);

118 
	}
}

120 
COMMON_PORTABLE
 
	$__cûkπs_èke_°ack
(
fuŒ_‰ame
 *
ff
, *
•
)

130 
±rdiff_t
 
sync_•_i
 = 
ff
->
sync_•
 - (*Ë
•
;

132 
ff
->
sync_•
 = (*Ë
sync_•_i
;

134 
	`DBGPRINTF
("%d- __cilkrts_take_stack -ádjust (-) sync "

136 
	`__cûkπs_gë_és_w‹kî
()->
£lf
, 
ff
, ff->
sync_•
, 
•
);

137 
	}
}

139 
COMMON_PORTABLE


140 
	$__cûkπs_de°roy_fuŒ_‰ame
(
__cûkπs_w‹kî
 *
w
, 
fuŒ_‰ame
 *
ff
)

142 
	`vÆid©e_fuŒ_‰ame
(
ff
);

143 
	`CILK_ASSERT
(
ff
->
chûdªn_ªdu˚r_m≠
 == 0);

144 
	`CILK_ASSERT
(
ff
->
right_ªdu˚r_m≠
 == 0);

145 
	`CILK_ASSERT
(
NULL
 =
ff
->
≥ndög_ex˚±i⁄
);

146 
	`CILK_ASSERT
(
NULL
 =
ff
->
chûd_≥ndög_ex˚±i⁄
);

147 
	`CILK_ASSERT
(
NULL
 =
ff
->
right_≥ndög_ex˚±i⁄
);

148 
	`__cûkπs_muãx_de°roy
(
w
, &
ff
->
lock
);

149 
	`__cûkπs_‰ame_‰ì
(
w
, 
ff
, (*ff));

150 
	}
}

152 
COMMON_PORTABLE
 
	$vÆid©e_fuŒ_‰ame
(
fuŒ_‰ame
 *
ff
)

155 i‡(
ff
->
fuŒ_‰ame_magic_0
 !
FULL_FRAME_MAGIC_0
 ||

156 
ff
->
fuŒ_‰ame_magic_1
 !
FULL_FRAME_MAGIC_1
)

157 
	`ab‹t_beˇu£_πs_is_c‹ru±ed
();

158 
	}
}

160 
	$__cûkπs_‰ame_lock
(
__cûkπs_w‹kî
 *
w
, 
fuŒ_‰ame
 *
ff
)

162 
	`vÆid©e_fuŒ_‰ame
(
ff
);

163 
	`__cûkπs_muãx_lock
(
w
, &
ff
->
lock
);

164 
	}
}

166 
	$__cûkπs_‰ame_u∆ock
(
__cûkπs_w‹kî
 *
w
, 
fuŒ_‰ame
 *
ff
)

168 
	`__cûkπs_muãx_u∆ock
(
w
, &
ff
->
lock
);

169 
	}
}

	@full_frame.h

29 #i‚de‡
INCLUDED_FULL_FRAME_DOT_H


30 
	#INCLUDED_FULL_FRAME_DOT_H


	)

32 
	~"πs-comm⁄.h
"

33 
	~"w‹kî_muãx.h
"

35 
	~<cûk/comm⁄.h
>

37 
	~<°ddef.h
>

38 
	~<£tjmp.h
>

40 
__CILKRTS_BEGIN_EXTERN_C


43 
__cûkπs_°ack_‰ame
 
	t__cûkπs_°ack_‰ame
;

44 
__cûkπs_°ack
 
	t__cûkπs_°ack
;

47 
	tff_magic_t
;

49  
	g≥ndög_ex˚±i⁄_öfo
;

50  
	g__cûkπs_°ack
;

71 
fuŒ_‰ame
 
	tfuŒ_‰ame
;

147 
	sfuŒ_‰ame


152 
	#FULL_FRAME_MAGIC_0
 ((
ff_magic_t
)0x361e710b9597d553ULL)

	)

159 
ff_magic_t
 
	mfuŒ_‰ame_magic_0
;

165 
muãx
 
	mlock
;

171 
	mjoö_cou¡î
;

178 
	mis_ˇŒ_chûd
;

191 
	msimuœãd_°ﬁí
;

193 #ifde‡
CILK_IVARS


194 
jmp_buf
 
	mblocked_˘x
;

195 
	mc⁄cuºít_cûk_Êags
;

202 
fuŒ_‰ame
 *
	m∑ª¡
;

215 
fuŒ_‰ame
 *
	mÀ·_siblög
;

220 
fuŒ_‰ame
 *
	mright_siblög
;

227 
fuŒ_‰ame
 *
	mrightmo°_chûd
;

235 
__cûkπs_°ack_‰ame
 *
	mˇŒ_°ack
;

242 
cûkªd_m≠
 *
	mchûdªn_ªdu˚r_m≠
;

250 
cûkªd_m≠
 *
	mright_ªdu˚r_m≠
;

259 
≥ndög_ex˚±i⁄_öfo
 *
	m≥ndög_ex˚±i⁄
;

266 
≥ndög_ex˚±i⁄_öfo
 *
	mchûd_≥ndög_ex˚±i⁄
;

273 
≥ndög_ex˚±i⁄_öfo
 *
	mright_≥ndög_ex˚±i⁄
;

279 *
	msync_•
;

281 #ifde‡
_WIN32


286 *
	mex˚±i⁄_•
;

294 
	måyÀvñ
;

300 
	mªgi°øti⁄
;

308 
±rdiff_t
 
	m‰ame_size
;

318 
__cûkπs_°ack
 *
	m°ack_£lf
;

327 
__cûkπs_°ack
 *
	m°ack_chûd
;

336 
__cûkπs_w‹kî
 *
	msync_ma°î
;

341 
	#FULL_FRAME_MAGIC_1
 ((
ff_magic_t
)0x189986dcc7´e1ˇULL)

	)

349 
ff_magic_t
 
	mfuŒ_‰ame_magic_1
;

406 
COMMON_PORTABLE
 
__cûkπs_put_°ack
(
fuŒ_‰ame
 *
ff
,

407 
__cûkπs_°ack_‰ame
 *
sf
);

426 
COMMON_PORTABLE
 
__cûkπs_èke_°ack
(
fuŒ_‰ame
 *
ff
, *
•
);

438 
COMMON_PORTABLE


439 
fuŒ_‰ame
 *
__cûkπs_make_fuŒ_‰ame
(
__cûkπs_w‹kî
 *
w
,

440 
__cûkπs_°ack_‰ame
 *
sf
);

448 
COMMON_PORTABLE


449 
__cûkπs_de°roy_fuŒ_‰ame
(
__cûkπs_w‹kî
 *
w
, 
fuŒ_‰ame
 *
ff
);

456 
COMMON_PORTABLE
 
vÆid©e_fuŒ_‰ame
(
fuŒ_‰ame
 *
ff
);

469 
COMMON_PORTABLE
 
__cûkπs_‰ame_lock
(
__cûkπs_w‹kî
 *
w
,

470 
fuŒ_‰ame
 *
ff
);

481 
COMMON_PORTABLE
 
__cûkπs_‰ame_u∆ock
(
__cûkπs_w‹kî
 *
w
,

482 
fuŒ_‰ame
 *
ff
);

483 #ifde‡
CILK_IVARS


484 
¥öt_Êags
(
fuŒ_‰ame
 *
ff
);

488 
	g__CILKRTS_END_EXTERN_C


	@global_state.cpp

29 
	~"globÆ_°©e.h
"

30 
	~"os.h
"

31 
	~"bug.h
"

32 
	~"mëaˇŒ_im∂.h
"

33 
	~"°©s.h
"

34 
	~"cûk/cûk_≠i.h
"

36 
	~<Æg‹ôhm
>

37 
	~<c°rög
>

38 
	~<c°dlib
>

39 
	~<˛imôs
>

40 
	~<˚ºno
>

42 #ifde‡
_WIN32


43 
	~<wch¨.h
>

52 
	gcûkg_u£r_£âabÀ_vÆues_öôülized
 = 
Ál£
;

54 
	g«me•a˚
 {

60 
globÆ_°©e_t
 
	gglobÆ_°©e_sögÀt⁄
 =

70 
globÆ_°©e_t
 *
cûkg_sögÀt⁄_±r
 = 
NULL
;

74 
globÆ_°©e_t
 *
__cûkπs_globÆ_°©e
 = &
globÆ_°©e_sögÀt⁄
;

78 
ölöe
 
boﬁ
 
°rm©ch
(c⁄° * 
a
, c⁄° * 
b
)

80  0 =
°d
::
°rcmp
(
a
, 
b
);

84 
ölöe
 
to_l⁄g
(c⁄° * 
s
)

86 *
íd
;

88 
î∫o
 = 0;

89  
°d
::
°πﬁ
(
s
, &
íd
, 0);

92 #ifde‡
_WIN32


94 
ölöe
 
boﬁ
 
°rm©ch
(c⁄° 
wch¨_t
* 
a
, c⁄° wch¨_t* 
b
)

96  0 =
wcscmp
(
a
, 
b
);

102 
boﬁ
 
°rm©ch
(c⁄° * 
a
, c⁄° 
wch¨_t
* 
b
)

105 
wch¨_t
 
wa
[31];

106 
°d
::
size_t
 
cou¡
;

107 
î∫o_t
 
îr
 = 
mb°owcs_s
(&
cou¡
, 
wa
, 
a
, 30);

108 
CILK_ASSERT
(0 =
îr
);

109 i‡(
îr
Ë 
Ál£
;

110  
°rm©ch
(
wa
, 
b
);

116 
ölöe


117 
boﬁ
 
°rm©ch
(c⁄° 
wch¨_t
* 
a
, c⁄° * 
b
)

119  
°rm©ch
(
b
, 
a
);

125 
ölöe
 
to_l⁄g
(c⁄° 
wch¨_t
* 
s
)

127 
wch¨_t
 *
íd
;

129 
î∫o
 = 0;

130  
wc°ﬁ
(
s
, &
íd
, 0);

135 
boﬁ
 
Æways_f‹˚_ªdu˚
()

139 vﬁ©ûê
nŸ_f‹˚_ªdu˚
 = '\377';

140 
__cûkπs_mëaˇŒ
(
METACALL_TOOL_SYSTEM
, 
HYPER_ZERO_IF_FORCE_REDUCE
,

141 
c⁄°_ˇ°
<*>(&
nŸ_f‹˚_ªdu˚
));

142  ! 
nŸ_f‹˚_ªdu˚
;

149 
ãm∂©e
 <
ty≥«me
 
INT_T
,Åy≥«mê
CHAR_T
>

150 
°‹e_boﬁ
(
INT_T
 *
out
, c⁄° 
CHAR_T
 *
vÆ
)

152 c⁄° * c⁄° 
s_zîo
 = "0";

153 c⁄° * c⁄° 
s_⁄e
 = "1";

154 c⁄° * c⁄° 
s_åue
 = "true";

155 c⁄° * c⁄° 
s_Ál£
 = "false";

157 i‡(
vÆ
 == 0)

158  
__CILKRTS_SET_PARAM_INVALID
;

160 i‡(
°rm©ch
(
s_Ál£
, 
vÆ
Ë|| såm©ch(
s_zîo
, val)) {

161 *
out
 = 0;

162  
__CILKRTS_SET_PARAM_SUCCESS
;

165 i‡(
°rm©ch
(
s_åue
, 
vÆ
Ë|| såm©ch(
s_⁄e
, val)) {

166 *
out
 = 1;

167  
__CILKRTS_SET_PARAM_SUCCESS
;

170  
__CILKRTS_SET_PARAM_INVALID
;

179 
ãm∂©e
 <
ty≥«me
 
INT_T
,Åy≥«mê
CHAR_T
>

180 
°‹e_öt
(
INT_T
 *
out
, c⁄° 
CHAR_T
 *
vÆ
, INT_T 
mö
, INT_T 
max
)

182 
î∫o
 = 0;

183 *
íd
 = 0;

184 
vÆ_as_l⁄g
 = 
to_l⁄g
(
vÆ
);

185 i‡(
vÆ_as_l⁄g
 =0 && 
î∫o
 != 0)

186  
__CILKRTS_SET_PARAM_INVALID
;

187 i‡(
vÆ_as_l⁄g
 < 
mö
 || vÆ_as_l⁄g =
LONG_MIN
)

188  
__CILKRTS_SET_PARAM_XRANGE
;

189 i‡(
vÆ_as_l⁄g
 > 
max
 || vÆ_as_l⁄g =
LONG_MAX
)

190  
__CILKRTS_SET_PARAM_XRANGE
;

192 *
out
 = 
vÆ_as_l⁄g
;

193  
__CILKRTS_SET_PARAM_SUCCESS
;

200 
ãm∂©e
 <
˛ass
 
CHAR_T
>

201 
£t_∑øm_imp
(
globÆ_°©e_t
* 
g
, c⁄° 
CHAR_T
* 
∑øm
, c⁄° CHAR_T* 
vÆue
)

203 c⁄° * c⁄° 
s_f‹˚_ªdu˚
 = "forceÑeduce";

204 c⁄° * c⁄° 
s_nw‹kîs
 = "nworkers";

205 c⁄° * c⁄° 
s_max_u£r_w‹kîs
 = "max user workers";

206 c⁄° * c⁄° 
s_loˇl_°acks
 = "local stacks";

207 c⁄° * c⁄° 
s_sh¨ed_°acks
 = "shared stacks";

208 c⁄° * c⁄° 
s_n°acks
 = "nstacks";

209 c⁄° * c⁄° 
s_°ack_size
 = "stack size";

212 i‡(0 =
∑øm
)

213  
__CILKRTS_SET_PARAM_INVALID
;

214 i‡(0 =
vÆue
)

215  
__CILKRTS_SET_PARAM_INVALID
;

217 i‡(
°rm©ch
(
∑øm
, 
s_f‹˚_ªdu˚
))

223 i‡(
Æways_f‹˚_ªdu˚
())

225  
__CILKRTS_SET_PARAM_LATE
;

227  
°‹e_boﬁ
(&
g
->
f‹˚_ªdu˚
, 
vÆue
);

229 i‡(
°rm©ch
(
∑øm
, 
s_nw‹kîs
))

237 i‡(
cûkg_sögÀt⁄_±r
)

238  
__CILKRTS_SET_PARAM_LATE
;

242 
h¨dw¨e_˝u_cou¡
 = 
__cûkπs_h¨dw¨e_˝u_cou¡
();

243 
CILK_ASSERT
(
h¨dw¨e_˝u_cou¡
 > 0);

245 
max_˝u_cou¡
 = 16 * 
h¨dw¨e_˝u_cou¡
;

246 i‡(
__cûkπs_ru¬ög_undî_£quítül_±oﬁ
())

248 
h¨dw¨e_˝u_cou¡
 = 1;

249 
max_˝u_cou¡
 = 1;

252 
ªt
 = 
°‹e_öt
(&
g
->
P
, 
vÆue
, 0, 
max_˝u_cou¡
);

253 i‡(0 =
g
->
P
)

254 
g
->
P
 = 
h¨dw¨e_˝u_cou¡
;

255  
ªt
;

257 i‡(
°rm©ch
(
∑øm
, 
s_max_u£r_w‹kîs
))

262 
h¨dw¨e_˝u_cou¡
 = 
__cûkπs_h¨dw¨e_˝u_cou¡
();

263 
CILK_ASSERT
 (
h¨dw¨e_˝u_cou¡
 > 0);

265  
°‹e_öt
(&
g
->
max_u£r_w‹kîs
, 
vÆue
, 1,

266 16 * 
h¨dw¨e_˝u_cou¡
);

268 i‡(
°rm©ch
(
∑øm
, 
s_loˇl_°acks
))

274  
°‹e_öt
(&
g
->
°ack_ˇche_size
, 
vÆue
, 0, 42);

276 i‡(
°rm©ch
(
∑øm
, 
s_sh¨ed_°acks
))

283  
°‹e_öt
(&
g
->
globÆ_°ack_ˇche_size
, 
vÆue
, 0, 42);

285 i‡(
°rm©ch
(
∑øm
, 
s_n°acks
))

296  
°‹e_öt
<>(&
g
->
max_°acks
, 
vÆue
, 0, 
INT_MAX
);

298 i‡(
°rm©ch
(
∑øm
, 
s_°ack_size
))

304 i‡(
cûkg_sögÀt⁄_±r
)

305  
__CILKRTS_SET_PARAM_LATE
;

308 
ªt
 = 
°‹e_öt
<
size_t
>(&
g
->
°ack_size
, 
vÆue
, 0, 
INT_MAX
);

315 
g
->
°ack_size
 = 
cûkos_vÆid©e_°ack_size
(g->stack_size);

316  
ªt
;

321  
__CILKRTS_SET_PARAM_UNIMP
;

324 
ölöe


325 
ˇlc_max_u£r_w‹kîs
(
globÆ_°©e_t
 *
g
)

328 i‡(
g
->
max_u£r_w‹kîs
 > 0)

329  
g
->
max_u£r_w‹kîs
;

332  
°d
::
max
(3, 
g
->
P
 * 2);

337 
__CILKRTS_BEGIN_EXTERN_C


344 
globÆ_°©e_t
* 
	$cûkg_gë_u£r_£âabÀ_vÆues
()

348 
ív°r
[24];

353 
globÆ_°©e_t
* 
g
 = &
globÆ_°©e_sögÀt⁄
;

357 i‡(! 
cûkg_u£r_£âabÀ_vÆues_öôülized
)

361 
°ólög_dißbÀd
 = 
g
->stealing_disabled;

364 
°d
::
	`mem£t
(
g
, 0, (
globÆ_°©e_t
));

368 
h¨dw¨e_˝u_cou¡
 = 
	`__cûkπs_h¨dw¨e_˝u_cou¡
();

369 
	`CILK_ASSERT
(
h¨dw¨e_˝u_cou¡
 > 0);

371 
boﬁ
 
undî_±oﬁ
 = 
	`__cûkπs_ru¬ög_undî_£quítül_±oﬁ
();

372 i‡(
undî_±oﬁ
)

373 
h¨dw¨e_˝u_cou¡
 = 1;

375 
g
->
°ólög_dißbÀd
 = stealing_disabled;

376 
g
->
undî_±oﬁ
 = under_ptool;

377 
g
->
f‹˚_ªdu˚
 = 0;

378 
g
->
P
 = 
h¨dw¨e_˝u_cou¡
;

379 
g
->
max_u£r_w‹kîs
 = 0;

380 
g
->
°ack_ˇche_size
 = 7;

381 
g
->
globÆ_°ack_ˇche_size
 = 3;

382 
g
->
max_°acks
 = 0;

383 
g
->
max_°ól_Áûuªs
 = 128;

384 
g
->
°ack_size
 = 0;

386 i‡(
	`Æways_f‹˚_ªdu˚
())

387 
g
->
f‹˚_ªdu˚
 = 
åue
;

388 i‡(
	`cûkos_gëív
(
ív°r
, (envstr), "CILK_FORCE_REDUCE"))

389 
	`°‹e_boﬁ
(&
g
->
f‹˚_ªdu˚
, 
ív°r
);

391 i‡(
undî_±oﬁ
)

392 
g
->
P
 = 1;

393 i‡(
	`cûkos_gëív
(
ív°r
, (envstr), "CILK_NWORKERS"))

396 
	`°‹e_öt
(&
g
->
P
, 
ív°r
, 1, 16 * 
h¨dw¨e_˝u_cou¡
);

398 i‡(
	`cûkos_gëív
(
ív°r
, (envstr), "CILK_MAX_USER_WORKERS"))

403 
	`°‹e_öt
(&
g
->
max_u£r_w‹kîs
, 
ív°r
, 1, 16*
h¨dw¨e_˝u_cou¡
);

405 i‡(
	`cûkos_gëív
(
ív°r
, (envstr), "CILK_STEAL_FAILURES"))

408 
°‹e_öt
<>(&
g
->
max_°ól_Áûuªs
, 
ív°r
, 1, 
INT_MAX
);

415 
g
->
tŸÆ_w‹kîs
 = g->
P
 + 
	`ˇlc_max_u£r_w‹kîs
(g) - 1;

417 
cûkg_u£r_£âabÀ_vÆues_öôülized
 = 
åue
;

420  
g
;

421 
	}
}

423 
	$cûkg_ˇlc_tŸÆ_w‹kîs
()

425 
globÆ_°©e_t
* 
g
 = 
	`cûkg_gë_u£r_£âabÀ_vÆues
();

430  
g
->
P
 + 
	`ˇlc_max_u£r_w‹kîs
(g) - 1;

431 
	}
}

434 
globÆ_°©e_t
* 
	$cûkg_öô_globÆ_°©e
()

436 i‡(
cûkg_sögÀt⁄_±r
)

437  
cûkg_sögÀt⁄_±r
;

440 
globÆ_°©e_t
* 
g
 = 
	`cûkg_gë_u£r_£âabÀ_vÆues
();

442 
i
, 
max_w‹kîs
;

444 i‡(
g
->
max_°acks
 > 0) {

464 
g
->
°ack_ˇche_size
 = 1;

466 i‡(
g
->
max_°acks
 < g->
P
)

467 
g
->
max_°acks
 = g->
P
;

469 
g
->
globÆ_°ack_ˇche_size
 = g->
max_°acks
;

473 
g
->
addr_size
 = (*);

475 
	`__cûkπs_öô_°©s
(&
g
->
°©s
);

477 
	`__cûkπs_‰ame_mÆloc_globÆ_öô
(
g
);

479 
g
->
Q
 = 0;

480 
g
->
tŸÆ_w‹kîs
 = 
	`cûkg_ˇlc_tŸÆ_w‹kîs
();

481 
g
->
sy°em_w‹kîs
 = g->
P
 - 1;

482 
g
->
w‹k_d⁄e
 = 0;

483 
g
->
w‹kîs_ru¬ög
 = 0;

484 
g
->
…qsize
 = 1024;

486 
g
->
°acks
 = 0;

487 
g
->
°ack_size
 = 
	`cûkos_vÆid©e_°ack_size
(g->stack_size);

488 
g
->
Áûuª_to_Æloˇã_°ack
 = 0;

490 #ifde‡
CILK_IVARS


491 
g
->
live_blocked_w‹kîs
 = 0;

492 
g
->
⁄ly_waôög_⁄_blocked
 = 0;

495  
g
;

496 
	}
}

498 
	$cûkg_publish_globÆ_°©e
(
globÆ_°©e_t
* 
g
)

505 
__cûkπs_globÆ_°©e
 = 
g
;

506 
	`__cûkπs_„n˚
();

507 
cûkg_sögÀt⁄_±r
 = 
g
;

508 
	}
}

510 
	$cûkg_deöô_globÆ_°©e
()

512 
cûkg_sögÀt⁄_±r
 = 
NULL
;

513 
__cûkπs_globÆ_°©e
 = 
NULL
;

514 
	}
}

516 
	$cûkg_is_published
()

518  
NULL
 !
cûkg_sögÀt⁄_±r
;

519 
	}
}

521 
	$cûkg_£t_∑øm
(c⁄° * 
∑øm
, c⁄° * 
vÆue
)

523  
	`£t_∑øm_imp
(
	`cûkg_gë_u£r_£âabÀ_vÆues
(), 
∑øm
, 
vÆue
);

524 
	}
}

526 #ifde‡
_WIN32


527 
	$cûkg_£t_∑øm_w
(c⁄° 
wch¨_t
* 
∑øm
, c⁄° wch¨_t* 
vÆue
)

529  
	`£t_∑øm_imp
(
	`cûkg_gë_u£r_£âabÀ_vÆues
(), 
∑øm
, 
vÆue
);

530 
	}
}

535 
	t˝p_scheduÀr_t
(
	t__cûkπs_w‹kî
 *
	tw
);

538 
	$__cûkπs_run_scheduÀr_wôh_ex˚±i⁄s
(
__cûkπs_w‹kî
 *
w
)

540 
globÆ_°©e_t
* 
g
 = 
	`cûkg_gë_globÆ_°©e
();

541 
	`CILK_ASSERT
(
g
->
scheduÀr
);

543 
˝p_scheduÀr_t
* 
scheduÀr
 = (˝p_scheduÀr_t*Ë
g
->scheduler;

545 
åy
 {

546 
	`scheduÀr
(
w
);

547 } 
	`ˇtch
 (...) {

548 
	`__cûkπs_bug
("ExceptionÉscaped Cilk context");

550 
	}
}

552 
__CILKRTS_END_EXTERN_C


	@global_state.h

36 #i‚de‡
INCLUDED_GLOBAL_STATE_DOT_H


37 
	#INCLUDED_GLOBAL_STATE_DOT_H


	)

39 
	~<cûk/comm⁄.h
>

41 
	~"‰ame_mÆloc.h
"

42 
	~"°©s.h
"

43 
	~"bug.h
"

45 
__CILKRTS_BEGIN_EXTERN_C


48 
__cûkπs_°ack
 
	t__cûkπs_°ack
;

53 
	#PLACEHOLDER_STACK
 ((
__cûkπs_°ack
 *Ë-2)

	)

61 
	#BIND_PROVABLY_GOOD_STACK
 ((
__cûkπs_°ack
 *Ë-1)

	)

64 
	s__cûkπs_°ack_ˇche
 {

66 
muãx
 
	mlock
;

69 
	msize
;

72 
	mn
;

75 
__cûkπs_°ack
 **
	m°acks
;

76 } 
	t__cûkπs_°ack_ˇche
;

104 
	sglobÆ_°©e_t
 {

118 
	maddr_size
;

120 
	msy°em_w‹kîs
;

127 
	mmax_u£r_w‹kîs
;

129 
	mtŸÆ_w‹kîs
;

131 
	mw‹kîs_ru¬ög
;

134 
	m°ólög_dißbÀd
;

137 
globÆ_sysdï_°©e
 *
	msysdï
;

140 
__cûkπs_w‹kî
 **
	mw‹kîs
;

145 
__STDNS
 
size_t
 
	m…qsize
;

151 
	mf‹˚_ªdu˚
;

154 
	m°ack_ˇche_size
;

157 
	mglobÆ_°ack_ˇche_size
;

169 vﬁ©ûê
	mw‹k_d⁄e
;

171 
	mundî_±oﬁ
;

173 
°©i°ics
 
	m°©s
;

180 
	m°acks
;

187 
	mmax_°acks
;

190 
size_t
 
	m°ack_size
;

193 
__cûkπs_‰ame_ˇche
 
	m‰ame_mÆloc
;

196 
__cûkπs_°ack_ˇche
 
	m°ack_ˇche
;

203 
	mÁûuª_to_Æloˇã_°ack
;

211 
	mˇche_buf
[64];

217 
	mmax_°ól_Áûuªs
;

220 (*
	mscheduÀr
)(
__cûkπs_w‹kî
 *
	mw
);

226 
	mˇche_buf_2
[64];

228 
	mP
;

229 
	mQ
;

230 #ifde‡
CILK_IVARS


231 vﬁ©ûê
	mlive_blocked_w‹kîs
;

232 vﬁ©ûê
	m⁄ly_waôög_⁄_blocked
;

234 } 
	tglobÆ_°©e_t
;

241 
globÆ_°©e_t
* 
cûkg_öô_globÆ_°©e
();

254 
cûkg_publish_globÆ_°©e
(
globÆ_°©e_t
* 
g
);

260 
cûkg_is_published
();

266 
cûkg_deöô_globÆ_°©e
();

272 
ölöe


273 
globÆ_°©e_t
* 
	$cûkg_gë_globÆ_°©e
()

276 
globÆ_°©e_t
 *
cûkg_sögÀt⁄_±r
;

278 
	`__CILKRTS_ASSERT
(
cûkg_sögÀt⁄_±r
);

279  
cûkg_sögÀt⁄_±r
;

280 
	}
}

326 
cûkg_£t_∑øm
(c⁄° * 
∑øm
, c⁄° * 
vÆue
);

327 #ifde‡
_WIN32


339 
cûkg_£t_∑øm_w
(c⁄° 
wch¨_t
* 
∑øm
, c⁄° wch¨_t* 
vÆue
);

345 
ölöe


346 
	$cûkg_gë_nw‹kîs
()

349 
globÆ_°©e_t
* 
	`cûkg_gë_u£r_£âabÀ_vÆues
();

350  
	`cûkg_gë_u£r_£âabÀ_vÆues
()->
P
;

351 
	}
}

356 
ölöe


357 
	$cûkg_gë_tŸÆ_w‹kîs
()

360 
	`cûkg_ˇlc_tŸÆ_w‹kîs
();

364  
	`cûkg_ˇlc_tŸÆ_w‹kîs
();

365 
	}
}

370 
ölöe


371 
	$cûkg_gë_f‹˚_ªdu˚
()

374 
globÆ_°©e_t
* 
	`cûkg_gë_u£r_£âabÀ_vÆues
();

375  
	`cûkg_gë_u£r_£âabÀ_vÆues
()->
f‹˚_ªdu˚
;

376 
	}
}

381 
ölöe


382 
size_t
 
	$cûkg_gë_°ack_size
()

385 
globÆ_°©e_t
* 
	`cûkg_gë_u£r_£âabÀ_vÆues
();

386  
	`cûkg_gë_u£r_£âabÀ_vÆues
()->
°ack_size
;

387 
	}
}

400 
__cûkπs_run_scheduÀr_wôh_ex˚±i⁄s
(
__cûkπs_w‹kî
 *
w
);

402 
	g__CILKRTS_END_EXTERN_C


	@ivar_full_blocking.c

1 
	~<°dlib.h
>

2 
	~"c⁄cuºít_cûk_öã∫Æ.h
"

3 
	~<cûk/c⁄cuºít_queue.h
>

4 
	~"cûk_mÆloc.h
"

5 
	~<cûk/cûk_≠i.h
>

6 
	~"scheduÀr.h
"

7 
	~"bug.h
"

11 
ölöe


12 
	$CILK_API
(
iv¨_∑ylﬂd_t
Ë
	$__cûkπs_iv¨_ªad
(
__cûkπs_iv¨
 *
iv¨
)

14 
__cûkπs_w‹kî
 *
w
;

15 
__cûkπs_∑u£d_°ack
 *
p°k
;

16 
__cûkπs_∑u£d_°ack
 *
≥ek
;

17 
__cûkπs_∑u£d_°ack
 *
p°k_hód
;

18 
uöçå_t
 
±r
;

20 if(
	`IVAR_READY
(*
iv¨
)) {

21  
	`UNTAG
(*
iv¨
);

24 
p°k
 = 
	`__cûkπs_mÆloc
((
__cûkπs_∑u£d_°ack
));

25 
	`mem£t
(
p°k
, 0, (
__cûkπs_∑u£d_°ack
));

28 
w
 = 
	`__cûkπs_gë_és_w‹kî_Á°
();

29 
±r
 = (
uöçå_t
Ë
	`__cûkπs_∑u£
((
p°k
->
˘x
));

31 if(! 
±r
) {

36 if(
	`IVAR_PAUSED
(*
iv¨
)) {

37 
	`¥ötf
("ivarÑead inÖaused state\n");

42 
p°k_hód
 = (
__cûkπs_∑u£d_°ack
 *Ë(*
iv¨
 >> 
IVAR_SHIFT
);

45 ! 
	`∑u£d_°ack_åylock
(
p°k_hód
)Ë
	`•ö_∑u£
();

48 
p°k_hód
->
èû
->
√xt
 = 
p°k
;

51 
p°k_hód
->
èû
 = 
p°k
;

53 
	`∑u£d_°ack_u∆ock
(
p°k_hód
);

61 if(
	`IVAR_READY
(*
iv¨
)) {

63  
	`UNTAG
(*
iv¨
);

66 
p°k
->
hód
 =Östk;;

67 
p°k
->
èû
 =Östk;

69 } ! 
	`ˇs
(
iv¨
, 0, (((
iv¨_∑ylﬂd_t
Ë
p°k
Ë<< 
IVAR_SHIFT
Ë| 
CILK_IVAR_PAUSED
));

72 
	`__cûkπs_föÆize_∑u£
(
w
, 
p°k
);

73 
	`CILK_ASSERT
(0);

78 
	`¥ötf
("ivarÑeturning\n");

79  
	`UNTAG
(*
iv¨
);

80 
	}
}

82 
ölöe
 
	$CILK_API
()

83 
	$__cûkπs_iv¨_wrôe
(
__cûkπs_iv¨
* 
iv¨
, 
iv¨_∑ylﬂd_t
 
vÆ
)

86 
iv¨_∑ylﬂd_t
 
√wvÆ
 = (
vÆ
 << 
IVAR_SHIFT
Ë| 
CILK_IVAR_FULL
;

89 
iv¨_∑ylﬂd_t
 
ﬁd_vÆ
 = (iv¨_∑ylﬂd_tË
	`©omic_£t
(
iv¨
, 
√wvÆ
);

91 if(
	`IVAR_PAUSED
(
ﬁd_vÆ
)) {

92 
__cûkπs_∑u£d_°ack
 *
p°k
 = (__cûkπs_∑u£d_°ack *Ë(
ﬁd_vÆ
 >> 
IVAR_SHIFT
);

93 
	`¥ötf
("íqueueög ctx %p\n", 
p°k
->
w
->
ªady_queue
);

98 
	`íqueue
(
p°k
->
w
->
ªady_queue
, (
ELEMENT_TYPE
)Östk);

99 
p°k
 =Ö°k->
√xt
;

100 } 
p°k
);

104 if(
	`IVAR_READY
(
ﬁd_vÆ
))

105 
	`__cûkπs_bug
("Aâem±ed mu…ùÀÖut†⁄ Cûk IV¨ %p. Ab‹tögÖrogøm.\n", 
iv¨
);

106 
	}
}

	@jmpbuf.c

29 
	~"jmpbuf.h
"

35 *
__cûkπs_gë_•
(
__cûkπs_°ack_‰ame
 *
sf
);

36 
±rdiff_t
 
__cûkπs_gë_‰ame_size
(
__cûkπs_°ack_‰ame
 *
sf
);

	@jmpbuf.h

38 #i‚de‡
INCLUDED_JMPBUF_DOT_H


39 
	#INCLUDED_JMPBUF_DOT_H


	)

41 
	~<cûk/comm⁄.h
>

42 
	~<öã∫Æ/abi.h
>

43 
	~<°ddef.h
>

44 
	~<£tjmp.h
>

47 
	#SP
(
SF
Ë(SF)->
˘x
[0].
__jmpbuf
[
JB_RSP
]

	)

48 
	#FP
(
SF
Ë(SF)->
˘x
[0].
__jmpbuf
[
JB_RBP
]

	)

49 
	#PC
(
SF
Ë(SF)->
˘x
[0].
__jmpbuf
[
JB_PC
]

	)

51 
	#SP
(
SF
Ë(SF)->
˘x
[0].
__jmpbuf
[
JB_SP
]

	)

52 
	#FP
(
SF
Ë(SF)->
˘x
[0].
__jmpbuf
[
JB_BP
]

	)

53 
	#PC
(
SF
Ë(SF)->
˘x
[0].
__jmpbuf
[
JB_PC
]

	)

54 #ñi‡
deföed
 
_WIN64


55 
	#SP
(
SF
Ë((
_JUMP_BUFFER
*)(&(SF)->
˘x
))->
R•


	)

56 
	#FP
(
SF
Ë((
_JUMP_BUFFER
*)(&(SF)->
˘x
))->
Rbp


	)

57 
	#PC
(
SF
Ë((
_JUMP_BUFFER
*)(&(SF)->
˘x
))->
Rù


	)

58 #ñi‡
deföed
 
_WIN32


60 
	#SP
(
SF
ËSF->
˘x
.
E•


	)

62 
	#FP
(
SF
ËSF->
˘x
.
Ebp


	)

64 
	#PC
(
SF
ËSF->
˘x
.
Eù


	)

69 
	#FP
(
SF
Ë(SF)->
˘x
[0]

	)

70 
	#PC
(
SF
Ë(SF)->
˘x
[1]

	)

71 
	#SP
(
SF
Ë(SF)->
˘x
[2]

	)

74 
__CILKRTS_BEGIN_EXTERN_C


84 
ölöe
 *
	$__cûkπs_gë_•
(
__cûkπs_°ack_‰ame
 *
sf
)

86  (*)
	`SP
(
sf
);

87 
	}
}

99 
ölöe
 
±rdiff_t
 
	$__cûkπs_gë_‰ame_size
(
__cûkπs_°ack_‰ame
 *
sf
)

101 #ifde‡
_WIN32


102 i‡(0 =
	`SP
(
sf
))

105  (
±rdiff_t
)
	`FP
(
sf
Ë- (±rdiff_t)
	`SP
(sf);

106 
	}
}

108 
	g__CILKRTS_END_EXTERN_C


	@local_state.c

30 
	~"loˇl_°©e.h
"

31 
	~"bug.h
"

32 
	~"fuŒ_‰ame.h
"

34 
	$run_schedulög_°ack_f˙
(
__cûkπs_w‹kî
 *
w
)

36 
schedulög_°ack_f˙_t
 
f˙
 = 
w
->
l
->
po°_su•íd
;

37 
fuŒ_‰ame
 *
ff2
 = 
w
->
l
->
‰ame_ff
;

38 
__cûkπs_°ack_‰ame
 *
sf2
 = 
w
->
l
->
su•íded_°ack
;

40 
w
->
l
->
po°_su•íd
 = 0;

41 
w
->
l
->
su•íded_°ack
 = 0;

42 
	`CILK_ASSERT
(
f˙
);

43 
	`CILK_ASSERT
(
ff2
);

45 
	`f˙
(
w
, 
ff2
, 
sf2
);

46 
	}
}

	@local_state.h

37 #i‚de‡
INCLUDED_LOCAL_STATE_DOT_H


38 
	#INCLUDED_LOCAL_STATE_DOT_H


	)

40 
	~<öã∫Æ/abi.h
>

41 
	~"w‹kî_muãx.h
"

42 
	~"globÆ_°©e.h
"

44 
	~<£tjmp.h
>

45 
	~<°ddef.h
>

47 #i‚de‡
_WIN32


48 
	~<±hªad.h
>

51 
__CILKRTS_BEGIN_EXTERN_C


54 
sig«l_node_t
 
	tsig«l_node_t
;

55 
	gfuŒ_‰ame
;

56 
	g‰ì_li°
;

57 
	g≥ndög_ex˚±i⁄_öfo
;

62 
	tls_magic_t
;

68 (*
	tschedulög_°ack_f˙_t
Ë(
	t__cûkπs_w‹kî
 *
	tw
,

69 
	tfuŒ_‰ame
 *
	tff
,

70 
	t__cûkπs_°ack_‰ame
 *
	tsf
);

75 
	ecûk_w‹kî_ty≥


77 
WORKER_FREE
,

78 
WORKER_SYSTEM
,

79 
WORKER_USER


80 } 
	tcûk_w‹kî_ty≥
;

115 
	sloˇl_°©e


118 
	#WORKER_MAGIC_0
 ((
ls_magic_t
)0xe0831a4a940c60b8ULL)

	)

126 
ls_magic_t
 
w‹kî_magic_0
;

132 
muãx
 
lock
;

141 
do_nŸ_°ól
;

149 
muãx
 
°ól_lock
;

163 
fuŒ_‰ame
 *
‰ame_ff
;

175 
fuŒ_‰ame
 *
√xt_‰ame_ff
;

184 
__cûkπs_°ack_‰ame
 **
…q
;

190 
__cûkπs_°ack_ˇche
 
°ack_ˇche
;

200 
__cûkπs_≥digªe
* 
‹igöÆ_≥digªe_Àaf
;

207 
ønd_£ed
;

217 
cûk_w‹kî_ty≥
 
ty≥
;

225 
jmp_buf
 
ív
;

232 
schedulög_°ack_f˙_t
 
po°_su•íd
;

240 
__cûkπs_°ack_‰ame
 *
su•íded_°ack
;

255 
__cûkπs_°ack
* 
°ack_to_‰ì
;

263 
≥ndög_ex˚±i⁄_öfo
 *
≥ndög_ex˚±i⁄
;

271 *
sync_ªtu∫_addªss
;

278 
‰ì_li°
 *‰ì_li°[
FRAME_MALLOC_NBUCKETS
];

285 
size_t
 
buckë_pŸítül
[
FRAME_MALLOC_NBUCKETS
];

293 
°©i°ics
 
°©s
;

301 
°ól_Áûuª_cou¡
;

315 
__cûkπs_w‹kî
 *
ãam
;

329 
fuŒ_‰ame
 *
œ°_fuŒ_‰ame
;

339 *
scheduÀr_°ack
;

349 
u£r_thªad_imp‹ãd
;

359 
w‹k_°ﬁí
;

367 
buf
[64];

375 
sig«l_node_t
 *
sig«l_node
;

378 
	#WORKER_MAGIC_1
 ((
ls_magic_t
)0x16164afb0ó0dff9ULL)

	)

385 
ls_magic_t
 
w‹kî_magic_1
;

386 } 
	tloˇl_°©e
;

396 
	`run_schedulög_°ack_f˙
(
__cûkπs_w‹kî
 *
w
);

398 
__CILKRTS_END_EXTERN_C


	@metacall_impl.c

29 
	~"mëaˇŒ_im∂.h
"

31 
NOINLINE


32 
CILK_API_VOID


33 
	$__cûkπs_mëaˇŒ
(
toﬁ
, 
code
, *
d©a
)

38 
mëaˇŒ_d©a_t
 
d
 = { 
toﬁ
, 
code
, 
d©a
 };

40 #ifde‡
ENABLE_NOTIFY_ZC_INTRINSIC


45 
	`__nŸify_öåösic
("cûks¸ìn_mëaˇŒ", &
d
);

47 
	}
}

49 
	$__cûkπs_ru¬ög_undî_£quítül_±oﬁ
()

51 
ru¬ög_undî_£quítül_±oﬁ
 = -1;

52 vﬁ©ûê
c
 = ~0;

56 i‡(-1 =
ru¬ög_undî_£quítül_±oﬁ
)

64 
	`__cûkπs_mëaˇŒ
(
METACALL_TOOL_SYSTEM
,

65 
HYPER_ZERO_IF_SEQUENTIAL_PTOOL
, (*)&
c
);

67 
ru¬ög_undî_£quítül_±oﬁ
 = (0 =
c
);

70  
ru¬ög_undî_£quítül_±oﬁ
;

71 
	}
}

79 
	$__cûkπs_cûks¸ìn_e°ablish_c_°ack
(*
begö
, *
íd
)

81 *
limôs
[2] = {
begö
, 
íd
};

83 
	`__cûkπs_mëaˇŒ
(
METACALL_TOOL_SYSTEM
, 
HYPER_ESTABLISH_C_STACK
, 
limôs
);

84 
	}
}

86 #ifde‡
WORKSPAN


88 
	$__cûkvõw_w‹k•™_°¨t
() {

89 
	`__cûkπs_mëaˇŒ
(
HYPER_WORKSPAN_START
, 0);

90 
	}
}

92 
	$__cûkvõw_w‹k•™_°›
() {

93 
	`__cûkπs_mëaˇŒ
(
HYPER_WORKSPAN_STOP
, 0);

94 
	}
}

96 
	$__cûkvõw_w‹k•™_dump
(c⁄° *
°r
) {

97 
	`__cûkπs_mëaˇŒ
(
HYPER_WORKSPAN_DUMP
, (*)
°r
);

98 
	}
}

101 
	$__cûkvõw_w‹k•™_ª£t
() {

102 
	`__cûkπs_mëaˇŒ
(
HYPER_WORKSPAN_RESET
, 0);

103 
	}
}

106 
	$__cûkvõw_u£_deÁu…_gøö
() {

107 
	`__cûkπs_mëaˇŒ
(
HYPER_USE_DEFAULT_GRAIN
, 0);

108 
	}
}

110 
	$__cûkvõw_gë_w‹k•™_d©a
(*
vÆues
, 
size
)

112 *
d©a
[2];

117 
vÆues
[0] = 0;

119 
d©a
[0] = (*Ë
vÆues
;

120 
d©a
[1] = (*Ë&
size
;

121 
	`__cûkπs_mëaˇŒ
(
HYPER_WORKSPAN_QUERY
, &
d©a
);

122 
	}
}

124 
	$__cûkvõw_w‹k•™_c⁄√˘ed
 (*
Êag
) {

125 *
Êag
 = 0;

126 
	`__cûkπs_mëaˇŒ
(
HYPER_WORKSPAN_CONNECTED
, (*)
Êag
);

127 
	}
}

129 
	$__cûkvõw_w‹k•™_su•íd
() {

130 
	`__cûkπs_mëaˇŒ
(
HYPER_WORKSPAN_SUSPEND
, 0);

131 
	}
}

133 
	$__cûkvõw_w‹k•™_ªsume
() {

134 
	`__cûkπs_mëaˇŒ
(
HYPER_WORKSPAN_RESUME
, 0);

135 
	}
}

138 
	$__cûkomëî_w‹k•™_°¨t
() {

139 
	`__cûkπs_mëaˇŒ
(
HYPER_WORKSPAN_START
, 0);

140 
	}
}

142 
	$__cûkomëî_w‹k•™_°›
() {

143 
	`__cûkπs_mëaˇŒ
(
HYPER_WORKSPAN_STOP
, 0);

144 
	}
}

146 
	$__cûkomëî_w‹k•™_dump
(c⁄° *
°r
) {

147 
	`__cûkπs_mëaˇŒ
(
HYPER_WORKSPAN_DUMP
, (*)
°r
);

148 
	}
}

151 
	$__cûkomëî_w‹k•™_ª£t
() {

152 
	`__cûkπs_mëaˇŒ
(
HYPER_WORKSPAN_RESET
, 0);

153 
	}
}

	@metacall_impl.h

40 #i‚de‡
INCLUDED_CILKRTS_METACALL_H


41 
	#INCLUDED_CILKRTS_METACALL_H


	)

43 
	~"πs-comm⁄.h
"

44 
	~<öã∫Æ/mëaˇŒ.h
>

45 
	~<cûk/comm⁄.h
>

47 
__CILKRTS_BEGIN_EXTERN_C


59 
CILK_API_VOID


60 
__cûkπs_mëaˇŒ
(
toﬁ
, 
code
, *
d©a
);

65 
COMMON_PORTABLE


66 
__cûkπs_ru¬ög_undî_£quítül_±oﬁ
();

71 
	#__cûkπs_cûks¸ìn_dißbÀ_ö°rumíèti⁄
() \

72 
	`__cûkπs_mëaˇŒ
(
METACALL_TOOL_SYSTEM
, 
HYPER_DISABLE_INSTRUMENTATION
, 0)

	)

77 
	#__cûkπs_cûks¸ìn_íabÀ_ö°rumíèti⁄
() \

78 
	`__cûkπs_mëaˇŒ
(
METACALL_TOOL_SYSTEM
, 
HYPER_ENABLE_INSTRUMENTATION
, 0)

	)

88 
	#__cûkπs_cûks¸ìn_e°ablish_w‹kî
(
w
) \

89 
	`__cûkπs_mëaˇŒ
(
METACALL_TOOL_SYSTEM
, 
HYPER_ESTABLISH_WORKER
, 
w
)

	)

97 
__cûkπs_cûks¸ìn_e°ablish_c_°ack
(*
begö
, *
íd
);

103 
	#__cûkπs_cûks¸ìn_ign‹e_block
(
_begö
, 
_íd
) \

105 *
block
[2] = {
_begö
, 
_íd
}; \

106 
	`__cûkπs_mëaˇŒ
(
METACALL_TOOL_SYSTEM
, \

107 
HYPER_IGNORE_MEMORY_BLOCK
, \

108 
block
); \

109 }

	)

111 
	g__CILKRTS_END_EXTERN_C


	@os-unix.c

29 #ifde‡
__löux__


33 
	#_GNU_SOURCE


	)

36 
	~"os.h
"

37 
	~"bug.h
"

38 
	~"cûk_mÆloc.h
"

39 
	~<öã∫Æ/abi.h
>

41 #i‡
deföed
 
__löux__


42 
	~<sys/sysöfo.h
>

43 
	~<sys/sysˇŒ.h
>

44 #ñi‡
deföed
 
__APPLE__


45 
	~<sys/sys˘l.h
>

47 #ñi‡
deföed
 
__FªeBSD__


48 #ñi‡
deföed
 
__CYGWIN__


54 
	~<°d¨g.h
>

55 
	~<°ddef.h
>

56 
	~<°dio.h
>

57 
	~<°dlib.h
>

58 
	~<°rög.h
>

59 
	~<uni°d.h
>

60 
	~<±hªad.h
>

61 
	~<sys/ty≥s.h
>

75 #i‡!
deföed
 
CILK_WORKER_TLS


76 
	gcûk_keys_deföed
;

77 
±hªad_key_t
 
	gw‹kî_key
, 
	gªdu˚r_key
, 
	gtbb_öãr›_key
, 
	g≥digªe_Àaf_key
;

78 *
	g£rül_w‹kî
;

83 
	$__cûkπs_≥digªe_Àaf_de°ru˘‹
(* 
≥digªe_és_±r
)

85 
__cûkπs_≥digªe
* 
≥digªe_és


86 (
__cûkπs_≥digªe
*)
≥digªe_és_±r
;

87 i‡(
≥digªe_és
) {

91 
	`CILK_ASSERT
((!
≥digªe_és
->
∑ª¡
) ||

92 (
≥digªe_és
->
∑ª¡
 && (!pedigree_tls->parent->parent)));

93 
	`__cûkπs_‰ì
(
≥digªe_és
);

95 
	}
}

97 
	$__cûkπs_öô_és_v¨übÀs
()

99 
°©us
;

103 i‡(
cûk_keys_deföed
)

105 
°©us
 = 
	`±hªad_key_¸óã
(&
w‹kî_key
, 0);

106 
	`CILK_ASSERT
 (
°©us
 == 0);

107 
°©us
 = 
	`±hªad_key_¸óã
(&
ªdu˚r_key
, 0);

108 
	`CILK_ASSERT
 (
°©us
 == 0);

109 
°©us
 = 
	`±hªad_key_¸óã
(&
tbb_öãr›_key
, 0);

110 
	`CILK_ASSERT
 (
°©us
 == 0);

111 
°©us
 = 
	`±hªad_key_¸óã
(&
≥digªe_Àaf_key
,

112 
__cûkπs_≥digªe_Àaf_de°ru˘‹
);

113 
	`CILK_ASSERT
 (
°©us
 == 0);

114 
cûk_keys_deföed
 = 1;

116 
	}
}

118 
CILK_ABI_WORKER_PTR
 
	$__cûkπs_gë_és_w‹kî
()

120 i‡(
	`__buûtö_ex≥˘
(
cûk_keys_deföed
, 1))

121  (
__cûkπs_w‹kî
 *)
	`±hªad_gë•ecific
(
w‹kî_key
);

123  
£rül_w‹kî
;

125 
	}
}

127 
CILK_ABI_WORKER_PTR
 
	$__cûkπs_gë_és_w‹kî_Á°
()

129  (
__cûkπs_w‹kî
 *)
	`±hªad_gë•ecific
(
w‹kî_key
);

130 
	}
}

132 
COMMON_SYSDEP
 
cûkªd_m≠
 *
	$__cûkπs_gë_és_ªdu˚r
()

134 i‡(
	`__buûtö_ex≥˘
(
cûk_keys_deföed
, 1))

135  (
cûkªd_m≠
 *)
	`±hªad_gë•ecific
(
ªdu˚r_key
);

138 
	}
}

140 
COMMON_SYSDEP


141 
__cûk_tbb_°ack_›_thunk
 *
	$__cûkπs_gë_és_tbb_öãr›
()

143 i‡(
	`__buûtö_ex≥˘
(
cûk_keys_deföed
, 1))

144  (
__cûk_tbb_°ack_›_thunk
 *)

145 
	`±hªad_gë•ecific
(
tbb_öãr›_key
);

148 
	}
}

151 
	g__cûkπs_globÆ_≥digªe_és_cou¡î
 = -1;

153 
COMMON_SYSDEP


154 
__cûkπs_≥digªe
 *
	$__cûkπs_gë_és_≥digªe_Àaf
(
¸óã_√w
)

156 
__cûkπs_≥digªe
 *
≥digªe_és
;

157 i‡(
	`__buûtö_ex≥˘
(
cûk_keys_deföed
, 1)) {

158 
≥digªe_és
 =

159 (
__cûkπs_≥digªe
 *)
	`±hªad_gë•ecific
(
≥digªe_Àaf_key
);

165 i‡(!
≥digªe_és
 && 
¸óã_√w
) {

172 
≥digªe_és
 = (
__cûkπs_≥digªe
*)

173 
	`__cûkπs_mÆloc
(2 * (
__cûkπs_≥digªe
));

176 
	`__cûkπs_£t_és_≥digªe_Àaf
(
≥digªe_és
);

178 
≥digªe_és
[0].
ønk
 = 0;

179 
≥digªe_és
[0].
∑ª¡
 = &pedigree_tls[1];

182 
≥digªe_és
[1].
ønk
 =

183 
	`__sync_add_™d_„tch
(&
__cûkπs_globÆ_≥digªe_és_cou¡î
, 1);

185 
≥digªe_és
[1].
∑ª¡
 = 
NULL
;

186 
	`CILK_ASSERT
(
≥digªe_és
[1].
ønk
 != -1);

188  
≥digªe_és
;

189 
	}
}

191 
COMMON_SYSDEP


192 
	$__cûkπs_£t_és_w‹kî
(
__cûkπs_w‹kî
 *
w
)

194 i‡(
	`__buûtö_ex≥˘
(
cûk_keys_deföed
, 1)) {

195 
°©us
;

196 
°©us
 = 
	`±hªad_£t•ecific
(
w‹kî_key
, 
w
);

197 
	`CILK_ASSERT
 (
°©us
 == 0);

202 
£rül_w‹kî
 = 
w
;

204 
	}
}

206 
COMMON_SYSDEP
 
	$__cûkπs_£t_és_ªdu˚r
(
cûkªd_m≠
 *
r
)

208 i‡(
	`__buûtö_ex≥˘
(
cûk_keys_deföed
, 1)) {

209 
°©us
;

210 
°©us
 = 
	`±hªad_£t•ecific
(
ªdu˚r_key
, 
r
);

211 
	`CILK_ASSERT
 (
°©us
 == 0);

214 
	`ab‹t
();

215 
	}
}

217 
COMMON_SYSDEP


218 
	$__cûkπs_£t_és_tbb_öãr›
(
__cûk_tbb_°ack_›_thunk
 *
t
)

220 i‡(
	`__buûtö_ex≥˘
(
cûk_keys_deföed
, 1)) {

221 
°©us
;

222 
°©us
 = 
	`±hªad_£t•ecific
(
tbb_öãr›_key
, 
t
);

223 
	`CILK_ASSERT
 (
°©us
 == 0);

226 
	`ab‹t
();

227 
	}
}

230 
COMMON_SYSDEP


231 
	$__cûkπs_£t_és_≥digªe_Àaf
(
__cûkπs_≥digªe
* 
≥digªe_Àaf
)

233 i‡(
	`__buûtö_ex≥˘
(
cûk_keys_deföed
, 1)) {

234 
°©us
;

235 
°©us
 = 
	`±hªad_£t•ecific
(
≥digªe_Àaf_key
, 
≥digªe_Àaf
);

236 
	`CILK_ASSERT
 (
°©us
 == 0);

239 
	`ab‹t
();

240 
	}
}

243 
	$__cûkπs_öô_és_v¨übÀs
()

245 
	}
}

248 #i‡
deföed
 
__löux__


254 
pid_t
 
	$löux_gëtid
()

256  
	`sysˇŒ
(
SYS_gëtid
);

257 
	}
}

275 
	$löux_gë_afföôy_cou¡
 (
tid
)

277 
˝u_£t_t
 
¥o˚ss_mask
;

280 
îr
 = 
	`sched_gëafföôy
 (
tid
, (
¥o˚ss_mask
),&process_mask);

282 i‡(0 !
îr
)

292 
avaûabÀ_¥ocs
 = 0;

293 
i
;

294 
i
 = 0; i < 
CPU_SETSIZE
; i++)

296 i‡(
	`CPU_ISSET
(
i
, &
¥o˚ss_mask
))

298 
avaûabÀ_¥ocs
++;

302  
avaûabÀ_¥ocs
;

303 
	}
}

313 
COMMON_SYSDEP
 
	$__cûkπs_h¨dw¨e_˝u_cou¡
()

315 #i‡
deföed
 
__löux__


316 
afföôy_cou¡
 = 
	`löux_gë_afföôy_cou¡
(
	`löux_gëtid
());

318  (0 !
afföôy_cou¡
Ë?áfföôy_cou¡ : 
	`sysc⁄f
 (
_SC_NPROCESSORS_ONLN
);

319 #ñi‡
deföed
 
__APPLE__


320 
cou¡
 = 0;

321 
cmd
[2] = { 
CTL_HW
, 
HW_NCPU
 };

322 
size_t
 
Àn
 =  
cou¡
;

323 
°©us
 = 
	`sys˘l
(
cmd
, 2, &
cou¡
, &
Àn
, 0, 0);

324 
	`as£π
(
°©us
 >= 0);

325 
	`as£π
(()
cou¡
 == count);

327  
cou¡
;

328 #ñi‡
deföed
 
__FªeBSD__
 || deföed 
__CYGWIN__


329 
nc‹es
 = 
	`sysc⁄f
(
_SC_NPROCESSORS_ONLN
);

331  
nc‹es
;

337 
	}
}

340 
COMMON_SYSDEP
 
	$__cûkπs_gëticks
()

342 #i‡
deföed
 
__i386__
 || deföed 
__x86_64


343 
a
, 
d
;

344 
__asm__
 vﬁ©ûe("rdtsc" : "˜" (
a
), "=d" (
d
));

345  (()
a
Ë| ((()
d
) << 32);

350 
	}
}

352 
COMMON_SYSDEP
 
	$__cûkπs_sh‹t_∑u£
()

354 #i‡
__ICC
 >= 1110

355 #i‡
__MIC__
 || 
__MIC2__


356 
	`_mm_dñay_32
(16);

358 
	`_mm_∑u£
();

360 #ñi‡
deföed
 
__i386__
 || deföed 
__x86_64


361 
	`__asm__
("pause");

363 #w¨nög 
__cûkπs_sh‹t_∑u£
 
undeföed


365 
	}
}

367 
COMMON_SYSDEP
 
	$__cûkπs_xchg
(vﬁ©ûê*
±r
, 
x
)

369 #i‡
deföed
 
__i386__
 || deföed 
__x86_64


371 
	`__asm__
("xchg»%0,%a1" :"Ù" (
x
Ë: "r" (
±r
), "0" (x) :"memory");

373 
x
 = 
	`__sync_lock_ã°_™d_£t
(
±r
, x);

375  
x
;

376 
	}
}

378 
COMMON_SYSDEP
 
	$__cûkπs_¶ìp
()

380 
	`u¶ìp
(1);

381 
	}
}

383 
COMMON_SYSDEP
 
	$__cûkπs_yõld
()

385 #i‡
__APPLE__
 || 
__FªeBSD__


388 
	`sched_yõld
();

389 #ñi‡
	`deföed
(
__MIC__
)

395 
	`_mm_dñay_32
(1024);

399 
	`±hªad_yõld
();

401 
	}
}

403 
COMMON_SYSDEP
 
__STDNS
 
size_t
 
	$cûkos_gëív
(* 
vÆue
, 
__STDNS
 
size_t
 
vÆÀn
,

404 c⁄° * 
v¨«me
)

406 
	`CILK_ASSERT
(
vÆue
);

407 
	`CILK_ASSERT
(
v¨«me
);

409 c⁄° * 
ív°r
 = 
	`gëív
(
v¨«me
);

410 i‡(
ív°r
)

412 
size_t
 
Àn
 = 
	`°æí
(
ív°r
);

413 i‡(
Àn
 > 
vÆÀn
 - 1)

414  
Àn
 + 1;

416 
	`°r˝y
(
vÆue
, 
ív°r
);

417  
Àn
;

421 
vÆue
[0] = '\0';

424 
	}
}

429 
COMMON_SYSDEP
 
	$cûkos_îr‹
(c⁄° *
fmt
, ...)

431 
va_li°
 
l
;

432 
	`fÊush
(
NULL
);

433 
	`Ârötf
(
°dîr
, "CilkÉrror: ");

434 
	`va_°¨t
(
l
, 
fmt
);

435 
	`vÂrötf
(
°dîr
, 
fmt
, 
l
);

436 
	`va_íd
(
l
);

437 
	`Ârötf
(
°dîr
, "Exiting.\n");

438 
	`fÊush
(
°dîr
);

440 
	`ab‹t
();

441 
	}
}

446 
COMMON_SYSDEP
 
	$cûkos_w¨nög
(c⁄° *
fmt
, ...)

448 
va_li°
 
l
;

449 
	`fÊush
(
NULL
);

450 
	`Ârötf
(
°dîr
, "Cilk warning: ");

451 
	`va_°¨t
(
l
, 
fmt
);

452 
	`vÂrötf
(
°dîr
, 
fmt
, 
l
);

453 
	`va_íd
(
l
);

454 
	`fÊush
(
°dîr
);

455 
	}
}

457 
__©åibuã__
((
c⁄°ru˘‹
)Ë
	$öô_⁄˚
()

460 
	`__cûkπs_öô_és_v¨übÀs
();

461 
	}
}

464 
	#PAGE
 4096

	)

465 
	#CILK_MIN_STACK_SIZE
 (4*
PAGE
)

	)

467 
	#CILK_DEFAULT_STACK_SIZE
 0x100000

	)

473 
size_t
 
	$cûkos_vÆid©e_°ack_size
(
size_t
 
•ecifõd_°ack_size
) {

475 i‡(
•ecifõd_°ack_size
 == 0) {

476 
	`CILK_ASSERT
((
CILK_DEFAULT_STACK_SIZE
 % 
PAGE
) == 0);

477  
CILK_DEFAULT_STACK_SIZE
;

481 i‡(
•ecifõd_°ack_size
 <
CILK_MIN_STACK_SIZE
) {

482  
CILK_MIN_STACK_SIZE
;

484 i‡((
•ecifõd_°ack_size
 % 
PAGE
) > 0) {

486  (
PAGE
 * (1 + 
•ecifõd_°ack_size
 / PAGE));

488  
•ecifõd_°ack_size
;

489 
	}
}

	@os.h

36 #i‚de‡
INCLUDED_OS_DOT_H


37 
	#INCLUDED_OS_DOT_H


	)

39 
	~"πs-comm⁄.h
"

40 
	~<cûk/comm⁄.h
>

42 #ifde‡
__˝lu•lus


43 
	~<c°ddef
>

45 
	~<°ddef.h
>

53 
__cûk_tbb_°ack_›_thunk
 
	t__cûk_tbb_°ack_›_thunk
;

55 
	g__CILKRTS_BEGIN_EXTERN_C


57 #ifde‡
_WIN32


58 
	tcûkos_thªad_id_t
;

60 * 
	tcûkos_thªad_id_t
;

77 
__cûkπs_w‹kî
 
	t__cûkπs_w‹kî
;

78 
cûkªd_m≠
 
	tcûkªd_m≠
;

79 
__cûkπs_≥digªe
 
	t__cûkπs_≥digªe
;

81 
COMMON_SYSDEP
 
__cûkπs_öô_és_v¨übÀs
();

83 
COMMON_SYSDEP


84 
	$__cûkπs_£t_és_w‹kî
(
__cûkπs_w‹kî
 *
w
Ë
cûk_nŸhrow
;

87 
COMMON_SYSDEP
 
cûkªd_m≠
 *
	$__cûkπs_gë_és_ªdu˚r
(Ë
cûk_nŸhrow
;

89 
COMMON_SYSDEP
 
	$__cûkπs_£t_és_ªdu˚r
(
cûkªd_m≠
 *Ë
cûk_nŸhrow
;

92 
COMMON_SYSDEP


93 
__cûk_tbb_°ack_›_thunk
 *
	`__cûkπs_gë_és_tbb_öãr›
();

94 
COMMON_SYSDEP


95 
	`__cûkπs_£t_és_tbb_öãr›
(
__cûk_tbb_°ack_›_thunk
 *
t
);

101 
COMMON_SYSDEP


102 
__cûkπs_≥digªe
 * 
	`__cûkπs_gë_és_≥digªe_Àaf
(
¸óã_√w
);

111 
COMMON_SYSDEP


112 
	`__cûkπs_£t_és_≥digªe_Àaf
(
__cûkπs_≥digªe
* 
≥digªe_Àaf
);

116 
COMMON_SYSDEP
 
	`__cûkπs_h¨dw¨e_˝u_cou¡
();

119 
COMMON_SYSDEP
 
	`__cûkπs_gëticks
();

122 
COMMON_SYSDEP
 
	`__cûkπs_sh‹t_∑u£
();

123 
COMMON_SYSDEP
 
	`__cûkπs_xchg
(vﬁ©ûê*
±r
, 
x
);

126 #i‡(
__ICC
 >1110 && !(
__MIC__
 || 
__MIC2__
)) \

127 || (!
deföed
 
__ICC
 && 
__GNUC__
 * 10 + 
__GNUC_MINOR__
 > 43)

128 
	#HAVE_SYNC_INTRINSICS
 1

	)

143 #ifde‡
HAVE_SYNC_INTRINSICS


144 
	#__cûkπs_„n˚
(Ë
	`__sync_synchr⁄ize
()

	)

145 #ñi‡
deföed
 
__ICC
 || deföed 
__GNUC__


151 
	#__cûkπs_„n˚
(Ë
__asm__
 vﬁ©ûê("lockádd»$0,(%r•)")

	)

156 
COMMON_SYSDEP
 
	`__cûkπs_„n˚
();

159 
COMMON_SYSDEP
 
	`__cûkπs_¶ìp
();

160 
COMMON_SYSDEP
 
	`__cûkπs_yõld
();

170 
COMMON_SYSDEP
 
__STDNS
 
size_t
 
	`cûkos_gëív
(* 
vÆue
, __STDNS size_à
vÆÀn
,

171 c⁄° * 
v¨«me
);

176 
COMMON_SYSDEP
 
	`cûkos_îr‹
(c⁄° *
fmt
, ...);

181 
COMMON_SYSDEP
 
	`cûkos_w¨nög
(c⁄° *
fmt
, ...);

187 
COMMON_SYSDEP
 
size_t
 
	`cûkos_vÆid©e_°ack_size
(size_à
•ecifõd_°ack_size
);

189 #ifde‡
_WIN32


194 
_GROUP_AFFINITY
 
	tGROUP_AFFINITY
;

202 
	`wö_öô_¥o˚ss‹_groups
();

204 
	`wö_gë_a˘ive_¥o˚ss‹_cou¡
(
GroupNumbî
);

205 
	`wö_gë_a˘ive_¥o˚ss‹_group_cou¡
();

206 
	`wö_£t_thªad_group_afföôy
–* 
hThªad
,

207 c⁄° 
GROUP_AFFINITY
 *
GroupAfföôy
,

208 
GROUP_AFFINITY
* 
PªviousGroupAfföôy
);

217 
	`__cûkπs_≥r_thªad_és_˛ónup
();

222 
__CILKRTS_END_EXTERN_C


	@os_mutex-unix.c

29 
	~"os_muãx.h
"

30 
	~"bug.h
"

32 
	~<°dlib.h
>

33 
	~<î∫o.h
>

34 
	~<±hªad.h
>

37 
	~"cûk-ôäŸify.h
"

45 
	sos_muãx
 {

46 
±hªad_muãx_t
 
	mmuãx
;

55 
os_muãx
 *
	gglobÆ_os_muãx
 = 
NULL
;

59 
os_muãx
 
	g°©ic_muãx
;

60 
	g°©ic_muãx_u£d
;

62 
os_muãx
 *
	$__cûkπs_os_muãx_¸óã
()

64 
°©us
;

65 
os_muãx
 *
muãx
 = (os_muãx *)
	`mÆloc
((os_mutex));

66 
±hªad_muãx©å_t
 
©å
;

68 
	`ITT_SYNC_CREATE
(
muãx
, "OS Mutex");

70 i‡(!
muãx
) {

71 i‡(
°©ic_muãx_u£d
) {

72 
	`__cûkπs_bug
("Cilk RTSÜibrary initialization failed");

74 
°©ic_muãx_u£d
 = 1;

75 
muãx
 = &
°©ic_muãx
;

79 
°©us
 = 
	`±hªad_muãx©å_öô
(&
©å
);

80 
	`CILK_ASSERT
 (
°©us
 == 0);

81 #i‡
deföed
 
DEBUG
 || 
CILK_LIB_DEBUG


82 #ifde‡
PTHREAD_MUTEX_ERRORCHECK


83 
°©us
 = 
	`±hªad_muãx©å_£ây≥
(&
©å
, 
PTHREAD_MUTEX_ERRORCHECK
);

85 
°©us
 = 
	`±hªad_muãx©å_£ây≥
(&
©å
, 
PTHREAD_MUTEX_ERRORCHECK_NP
);

87 
	`CILK_ASSERT
 (
°©us
 == 0);

89 
°©us
 = 
	`±hªad_muãx_öô
 (&
muãx
->muãx, &
©å
);

90 
	`CILK_ASSERT
 (
°©us
 == 0);

91 
	`±hªad_muãx©å_de°roy
(&
©å
);

93  
muãx
;

94 
	}
}

96 
	$__cûkπs_os_muãx_lock
(
os_muãx
 *
p
)

98 
°©us
;

100 
°©us
 = 
	`±hªad_muãx_lock
 (&
p
->
muãx
);

101 
	`ITT_SYNC_ACQUIRED
(
p
);

102 i‡(
	`__buûtö_ex≥˘
(
°©us
, 0) == 0)

104 i‡(
°©us
 =
EDEADLK
)

105 
	`__cûkπs_bug
("CilkÑuntimeÉrror: deadlockácquiring mutex %p\n",

106 
p
);

108 
	`__cûkπs_bug
("CilkÑuntimeÉrror %dácquiring mutex %p\n",

109 
°©us
, 
p
);

110 
	}
}

113 
	$__cûkπs_os_muãx_åylock
(
os_muãx
 *
p
)

115 
°©us
;

117 
°©us
 = 
	`±hªad_muãx_åylock
 (&
p
->
muãx
);

118  (
°©us
 == 0);

119 
	}
}

122 
	$__cûkπs_os_muãx_u∆ock
(
os_muãx
 *
p
)

124 
°©us
;

126 
	`ITT_SYNC_RELEASING
(
p
);

127 
°©us
 = 
	`±hªad_muãx_u∆ock
 (&
p
->
muãx
);

128 
	`CILK_ASSERT
(
°©us
 == 0);

129 
	}
}

131 
	$__cûkπs_os_muãx_de°roy
(
os_muãx
 *
p
)

133 
	`±hªad_muãx_de°roy
 (&
p
->
muãx
);

134 i‡(
p
 =&
°©ic_muãx
) {

135 
°©ic_muãx_u£d
 = 0;

137 
	`‰ì
(
p
);

139 
	}
}

152 
	$¸óã_globÆ_os_muãx
()

154 
	`CILK_ASSERT
(
NULL
 =
globÆ_os_muãx
);

155 
globÆ_os_muãx
 = 
	`__cûkπs_os_muãx_¸óã
();

156 
	}
}

158 
	$globÆ_os_muãx_lock
()

162 
±hªad_⁄˚_t
 
globÆ_os_muãx_is_öôülized
 = 
PTHREAD_ONCE_INIT
;

167 
	`±hªad_⁄˚
(&
globÆ_os_muãx_is_öôülized
,

168 
¸óã_globÆ_os_muãx
);

171 
	`CILK_ASSERT
(
NULL
 !
globÆ_os_muãx
);

174 
	`__cûkπs_os_muãx_lock
(
globÆ_os_muãx
);

175 
	}
}

177 
	$globÆ_os_muãx_u∆ock
()

182 
	`CILK_ASSERT
(
NULL
 !
globÆ_os_muãx
);

185 
	`__cûkπs_os_muãx_u∆ock
(
globÆ_os_muãx
);

186 
	}
}

	@os_mutex.h

37 #i‚de‡
INCLUDED_OS_MUTEX_DOT_H


38 
	#INCLUDED_OS_MUTEX_DOT_H


	)

40 
	~<cûk/comm⁄.h
>

41 
	~"πs-comm⁄.h
"

43 
__CILKRTS_BEGIN_EXTERN_C


45 
os_muãx
 
	tos_muãx
;

51 
COMMON_SYSDEP
 
os_muãx
* 
__cûkπs_os_muãx_¸óã
();

58 
COMMON_SYSDEP
 
__cûkπs_os_muãx_lock
(
os_muãx
 *
m
);

67 
COMMON_SYSDEP
 
__cûkπs_os_muãx_u∆ock
(
os_muãx
 *
m
);

74 
COMMON_SYSDEP
 
__cûkπs_os_muãx_de°roy
(
os_muãx
 *
m
);

81 
COMMON_SYSDEP
 
globÆ_os_muãx_lock
();

87 
COMMON_SYSDEP
 
globÆ_os_muãx_u∆ock
();

90 #ifde‡
_MSC_VER


100 
NON_COMMON
 
globÆ_os_muãx_¸óã
();

110 
NON_COMMON
 
globÆ_os_muãx_de°roy
();

114 
	g__CILKRTS_END_EXTERN_C


	@pedigrees.c

30 
	~"≥digªes.h
"

31 
	~"loˇl_°©e.h
"

41 
COMMON_PORTABLE


42 
upd©e_≥digªe_⁄_Àave_‰ame
(
__cûkπs_w‹kî
 *
w
,

43 
__cûkπs_°ack_‰ame
 *
sf
);

45 
	$__cûkπs_£t_≥digªe_Àaf
(
__cûkπs_≥digªe
 *
Àaf
)

47 
	`__cûkπs_£t_és_≥digªe_Àaf
(
Àaf
);

48 
	}
}

50 
	$lﬂd_≥digªe_Àaf_öto_u£r_w‹kî
(
__cûkπs_w‹kî
 *
w
)

52 
__cûkπs_≥digªe
 *
≥digªe_Àaf
;

53 
	`CILK_ASSERT
(
w
->
l
->
ty≥
 =
WORKER_USER
);

54 
≥digªe_Àaf
 = 
	`__cûkπs_gë_és_≥digªe_Àaf
(1);

55 
w
->
≥digªe
 = *
≥digªe_Àaf
;

59 
	`CILK_ASSERT
(
w
->
l
->
‹igöÆ_≥digªe_Àaf
 =
NULL
);

60 
w
->
l
->
‹igöÆ_≥digªe_Àaf
 = 
≥digªe_Àaf
;

62 
	`__cûkπs_£t_és_≥digªe_Àaf
(&
w
->
≥digªe
);

65 
	`CILK_ASSERT
(
w
->
≥digªe
.
∑ª¡
);

66 
	`CILK_ASSERT
(
w
->
≥digªe
.
∑ª¡
->∑ª¡ =
NULL
);

67 
	}
}

69 
	$ßve_≥digªe_Àaf_‰om_u£r_w‹kî
(
__cûkπs_w‹kî
 *
w
)

71 
	`CILK_ASSERT
(
w
->
l
->
ty≥
 =
WORKER_USER
);

76 
	`CILK_ASSERT
(
w
->
l
->
‹igöÆ_≥digªe_Àaf
);

86 
w
->
l
->
‹igöÆ_≥digªe_Àaf
->
ønk
 = w->
≥digªe
.rank;

89 
	`__cûkπs_£t_és_≥digªe_Àaf
(
w
->
l
->
‹igöÆ_≥digªe_Àaf
);

91 
w
->
l
->
‹igöÆ_≥digªe_Àaf
 = 
NULL
;

92 
	}
}

	@pedigrees.h

29 #i‚de‡
INCLUDED_PEDIGREES_DOT_H


30 
	#INCLUDED_PEDIGREES_DOT_H


	)

33 
	~<cûk/comm⁄.h
>

34 
	~<öã∫Æ/abi.h
>

36 
	~"πs-comm⁄.h
"

37 
	~"globÆ_°©e.h
"

38 
	~"os.h
"

40 
__CILKRTS_BEGIN_EXTERN_C


61 
COMMON_PORTABLE


62 
__cûkπs_£t_≥digªe_Àaf
(
__cûkπs_≥digªe
* 
Àaf
);

75 
COMMON_PORTABLE


76 
lﬂd_≥digªe_Àaf_öto_u£r_w‹kî
(
__cûkπs_w‹kî
 *
w
);

88 
COMMON_PORTABLE


89 
ßve_≥digªe_Àaf_‰om_u£r_w‹kî
(
__cûkπs_w‹kî
 *
w
);

103 
COMMON_PORTABLE


104 
ölöe
 
	$upd©e_≥digªe_⁄_Àave_‰ame
(
__cûkπs_w‹kî
 *
w
,

105 
__cûkπs_°ack_‰ame
 *
sf
)

109 i‡(
	`CILK_FRAME_VERSION_VALUE
(
sf
->
Êags
) >= 1)

111 
w
->
≥digªe
.
ønk
 = 
sf
->
•awn_hñ≥r_≥digªe
.rank + 1;

112 
w
->
≥digªe
.
∑ª¡
 = 
sf
->
•awn_hñ≥r_≥digªe
.parent;

114 
	}
}

118 
	g__CILKRTS_END_EXTERN_C


	@queues/cache_aware_queue.c

36 
	#IVAR_DBG_PRINT_
(
lvl
, ...Ëif(
IVAR_DBG
 >=Üvl) { \

37 
±hªad_t
 
id
 = 
	`±hªad_£lf
(); 
buf
[512]; \

38 
	`•rötf
(
buf
, 
__VA_ARGS__
); \

39 vﬁ©ûê
__cûkπs_w‹kî
* 
tw
 = 
	`__cûkπs_gë_és_w‹kî
(); \

40 
	`Ârötf
(
°dîr
, "[tid/W %3d %2d/%p] %s", ()((()
id
)%1000), 
tw
 ?Åw->
£lf
 : -999999,Åw, 
buf
); }

	)

42 
	~"c⁄cuºít_cûk.h
"

45 
	s__cûkπs_°ack_∑ú
 {

46 
QUEUE_ELEMTY
* 
	md©a
;

47 
__cûkπs_°ack_∑ú
* 
	m√xt
;

50 
QUEUE_ELEMTY
* 
dequeue_∑u£d_°ack
(vﬁ©ûê
__cûkπs_°ack_queue
* 
q
);

53 
	$dñëe_°ack_queue
(
__cûkπs_°ack_queue
* 
q
) {

55  
	`dequeue_∑u£d_°ack
(
q
) ) { }

57 
	`__cûkπs_‰ì
(
q
);

58 
	}
}

63 
	#BLOCK_SIZE
 128

	)

64 
	#NULL2
 0x02

	)

65 
öô_queue
();

68 
	sblock_t
 {

69 
__cûkπs_°ack_∑ú
 *
	mnodes
[
BLOCK_SIZE
];

70 vﬁ©ûê
	mªfcou¡
;

71 
	mhód
;

72 
	mèû
;

73 
	mdñëed
;

74 
block_t
 *
	m√xt
;

77 
	s__cûkπs_°ack_queue_°ru˘
 {

79 
block_t
 *
	mthªadHódBlock
;

80 
block_t
 *
	mthªadTaûBlock
;

81 
	mthªadHód
;

82 
	mthªadTaû
;

85 
__cûkπs_°ack_queue_°ru˘
 
	t__cûkπs_°ack_queue
;

87 
block_t
 
	tblock_t
;

89 
__cûkπs_°ack_queue
 *
make_°ack_queue
();

90 
block_t
 *
dîef_lök
(block_à*vﬁ©ûê*
lök
);

91 
block_t
 *
√w_node
();

94 
block_t
 *vﬁ©ûê
	g‰ìLi°
;

97 
block_t
 *
	gglobÆHódBlock
;

98 
block_t
 *
	gglobÆTaûBlock
;

100 
__cûkπs_°ack_queue
 *
öô_thªad
();

102 
__cûkπs_°ack_queue
 *
	$make_°ack_queue
() {

103 if(
globÆTaûBlock
 =
NULL
Ë
	`öô_queue
();

104  
	`öô_thªad
();

105 
	}
}

107 
	$©omic_upd©e
(
block_t
 **
±r
, block_à*
vÆ
) {

108  
	`__sync_boﬁ_com∑ª_™d_sw≠
(
±r
,±r,
vÆ
);

109 
	}
}

111 
block_t
 *
	$√w_block
() {

112 
block_t
 *
block
 = 
	`√w_node
();

113 
block
->
√xt
 = 
NULL
;

114 
block
->
hód
 = 0;

115 
block
->
èû
 = 0;

116 
block
->
dñëed
 = 0;

117 
i
;

118 
i
=0;i<
BLOCK_SIZE
;i++Ë
block
->
nodes
[i]=
NULL
;

119  
block
;

120 
	}
}

122 
	$öô_queue
() {

123 
block_t
 *
block
 = 
	`√w_block
();

124 
globÆTaûBlock
 = 
block
;

125 
globÆHódBlock
 = 
block
;

126 
	}
}

128 
__cûkπs_°ack_queue
 *
	$öô_thªad
() {

129 
__cûkπs_°ack_queue
 *
l
 = (__cûkπs_°ack_queuê*Ë
	`ˇŒoc
(1,(__cilkrts_stack_queue));

131 
l
->
thªadHódBlock
 = 
	`dîef_lök
(&
globÆHódBlock
);

132 
l
->
thªadTaûBlock
 = 
	`dîef_lök
(&
globÆTaûBlock
);

133 
l
->
thªadHód
 =Ü->
thªadHódBlock
->
hód
;

134 
l
->
thªadTaû
 =Ü->
thªadTaûBlock
->
èû
;

135  
l
;

136 
	}
}

138 
	$íqueue_∑u£d_°ack
(
__cûkπs_°ack_queue
 *
l
, 
QUEUE_ELEMTY
 *
ôem
) {

140 
hód
 = 
l
->
thªadHód
;

141 
block_t
 *
block
 = 
l
->
thªadHódBlock
;

143 if(
hód
==
BLOCK_SIZE
) {

144 
block_t
 *
ﬁdBlock
 = 
block
;

145 
block
->
hód
 = head;

146 
block
 = 
	`dîef_lök
(&block->
√xt
);

147 if(
block
 =
NULL
) {

148 
block
 = (
block_t
 *Ë
	`√w_block
();

149 
globÆHódBlock
 !
ﬁdBlock
 && oldBlock->
√xt
==
NULL
) {

150 
block_t
 *
hódBlock
 = 
	`dîef_lök
(&
globÆHódBlock
);

151 if(
hódBlock
->
√xt
 !
ﬁdBlock
) ;

152 if(
	`__sync_boﬁ_com∑ª_™d_sw≠
(&
globÆHódBlock
,
hódBlock
,
ﬁdBlock
)) ;

154 if(
	`__sync_boﬁ_com∑ª_™d_sw≠
(&
ﬁdBlock
->
√xt
,
NULL
,
block
))

155 
	`__sync_boﬁ_com∑ª_™d_sw≠
(&
globÆHódBlock
,
ﬁdBlock
,
block
);

157 
	`ªÀa£_block
(
block
);

158 
block
 = 
	`dîef_lök
(&
ﬁdBlock
->
√xt
);

161 if(
block
->
hód
==
BLOCK_SIZE
 && block->
√xt
!=
NULL
)

162 
block
 = 
	`dîef_lök
(&
globÆHódBlock
);

163 
l
->
thªadHódBlock
 = 
block
;

164 
hód
 = 
block
->head;

166 if(
block
->
nodes
[
hód
]==
NULL
) {

167 if(
	`__sync_boﬁ_com∑ª_™d_sw≠
(&
block
->
nodes
[
hód
],
NULL
,
ôem
)) {

168 
l
->
thªadHód
 = 
hód
+1;

172 
hód
++;

174 
	}
}

176 
QUEUE_ELEMTY
 *
	$dequeue_∑u£d_°ack
(vﬁ©ûê
__cûkπs_°ack_queue
 *
l
) {

177 
èû
 = 
l
->
thªadTaû
;

178 
block_t
 *
block
 = 
l
->
thªadTaûBlock
;

180 if(
èû
==
BLOCK_SIZE
) {

181 
block_t
 *
ﬁdBlock
 = 
block
;

182 
block
->
èû
 =Åail;

183 
block
=
	`dîef_lök
(&block->
√xt
);

184 if(
block
 =
NULL
)

185  
NULL
;

187 if(!
ﬁdBlock
->
dñëed
) {

188 
globÆTaûBlock
 !
ﬁdBlock
 && !ﬁdBlock->
dñëed
) {

189 
block_t
 *
èûBlock

	`dîef_lök
(&
globÆTaûBlock
);

190 if(
èûBlock
->
√xt
 !
ﬁdBlock
) ;

191 if(
	`__sync_boﬁ_com∑ª_™d_sw≠
(&
globÆTaûBlock
,
èûBlock
,
ﬁdBlock
))

192 
	`ªÀa£_block
(
èûBlock
);

194 if(
	`__sync_boﬁ_com∑ª_™d_sw≠
(&
ﬁdBlock
->
dñëed
,0,1)) {

195 if(
	`__sync_boﬁ_com∑ª_™d_sw≠
(&
globÆTaûBlock
,
ﬁdBlock
,
block
))

196 
	`ªÀa£_block
(
ﬁdBlock
);

199 if(
block
->
dñëed
)

200 
block
=
	`dîef_lök
(&
globÆTaûBlock
);

202 
l
->
thªadTaûBlock
 = 
block
;

203 
èû
 = 
block
->tail;

206 *
d©a
 = 
block
->
nodes
[
èû
];

207 if(
d©a
=(*Ë
NULL2
)

208 
èû
++;

209 if(
d©a
==
NULL
 && 
	`__sync_boﬁ_com∑ª_™d_sw≠
(&
block
->
nodes
[
èû
],NULL,NULL)) {

210 
l
->
thªadTaû
 = 
èû
;

211  
NULL
;

213 if(
	`__sync_boﬁ_com∑ª_™d_sw≠
(&
block
->
nodes
[
èû
],
d©a
,
NULL2
)) {

214 
l
->
thªadTaû
 = 
èû
+1;

215  
d©a
;

219 
	}
}

222 
block_t
 *
	$√w_node
() {

224 
block_t
 *
p
 = 
‰ìLi°
;

225 if(!
p
Ë∞
	`ˇŒoc
(1, (
block_t
));

226 
	`__sync_„tch_™d_add
(&(
p
->
ªfcou¡
), 2);

227 if(
	`__sync_boﬁ_com∑ª_™d_sw≠
(&
‰ìLi°
,
p
,p->
√xt
)) {

228 
	`__sync_„tch_™d_add
(&(
p
->
ªfcou¡
),-1);

229  
p
;

231 
	`ªÀa£_block
(
p
);

233 
	}
}

235 
	$ªÀa£_block
(
block_t
 *
node
) {

236 
	`__sync_„tch_™d_add
(&(
node
->
ªfcou¡
),-2);

237 if(
	`__sync_boﬁ_com∑ª_™d_sw≠
(&
node
->
ªfcou¡
,0,1)) {

238 if(
node
->
√xt
Ë
	`ªÀa£_block
(node->next);

239 
block_t
 *
q
; do {

240 
q
 = 
‰ìLi°
;

241 
node
->
√xt
 = 
q
;

242 } !
	`__sync_boﬁ_com∑ª_™d_sw≠
(&
‰ìLi°
,
q
,
node
));

244 
	}
}

246 
block_t
 *
	$dîef_lök
(
block_t
 *vﬁ©ûê*
lök
) {

248 
block_t
 *
q
 = *
lök
;

249 if(
q
 =
NULL
)  q;

250 
	`__sync_„tch_™d_add
(&(
q
->
ªfcou¡
), 2);

251 if(
q
 =*
lök
)  q;

252 
	`ªÀa£_block
(
q
);

254 
	}
}

	@queues/lockfree_queue.c

36 
	~"lock‰ì_queue.h
"

37 
	~"../c⁄cuºít_cûk_öã∫Æ.h
"

38 
	~"../cûk_mÆloc.h
"

42 
queue_t
* 
	$make_°ack_queue
() {

44 
queue_t
* 
q
 =

45 (
queue_t
*)
	`__cûkπs_mÆloc
((queue_t));

48 
__cûkπs_°ack_∑ú
* 
√wp
 =

49 (
__cûkπs_°ack_∑ú
*)
	`__cûkπs_mÆloc
((__cilkrts_stack_pair));

50 
√wp
->
d©a
 = (
ELEMENT_TYPE
Ë
NULL
;

51 
√wp
->
√xt
 = 
NULL
;

52 
q
->
hód
 = 
√wp
;

53 
q
->
èû
 = 
√wp
;

54  
q
;

55 
	}
}

58 
	$íqueue
(
queue_t
* 
q
, 
ELEMENT_TYPE
 
vÆue
)

60 
__cûkπs_°ack_∑ú
 *
èû
, *
√xt
, *
√wp
;

61 #ifde‡
QUEUE_DEBUG


62 
	`IVAR_DBG_PRINT_
(3, " [c⁄cuºít-cûk,lock‰ì-Q] BegöÉnqueuêo‡°ack %∞ötÿqueuê%p\n", 
vÆue
, 
q
);

64 
√wp
 = (
__cûkπs_°ack_∑ú
*)
	`__cûkπs_mÆloc
((__cilkrts_stack_pair));

65 
√wp
->
d©a
 = 
vÆue
;

66 
√wp
->
√xt
 = 
NULL
;

68 
èû
 = 
q
->tail;

69 
√xt
 = 
q
->
èû
->next;

71 i‡(
èû
 =
q
->tail)

72 i‡(
√xt
 =
NULL
) {

73 i‡–
	`__sync_boﬁ_com∑ª_™d_sw≠
–&
èû
->
√xt
,Çext, 
√wp
) )

77 
	`__sync_boﬁ_com∑ª_™d_sw≠
–&
q
->
èû
,Åaû, 
√xt
 );

81 
	`__sync_boﬁ_com∑ª_™d_sw≠
–&
q
->
èû
,Åaû, 
√wp
 );

82 #ifde‡
QUEUE_DEBUG


83 
	`IVAR_DBG_PRINT_
(3, " [c⁄cuºít-cûk,lock‰ì-Q] Suc˚ssfuŒyÉnqueued sèŒed sèck %∞ö queuê%p\n", 
vÆue
, 
q
);

85  
SUCCESS
;

86 
	}
}

89 
	$dequeue
(
queue_t
* 
q
, 
ELEMENT_TYPE
 * 
vÆue
)

91 vﬁ©ûê
__cûkπs_°ack_∑ú
 *
hód
;

92 
__cûkπs_°ack_∑ú
 *
èû
, *
√xt
;

93 #ifde‡
QUEUE_DEBUG


94 
	`IVAR_DBG_PRINT_
(4, " [c⁄cuºít-cûk,lock‰ì-Q] Begö dequeuê‰om queuê%p\n", 
q
);

97 
hód
 = 
q
->head;

98 
èû
 = 
q
->tail;

99 
√xt
 = 
hód
->next;

100 i‡–
hód
 =
q
->head )

101 i‡–
hód
 =
èû
 ) {

102 i‡–
√xt
 =
NULL
 )

103  
QUEUE_EMPTY
;

105 
	`__sync_boﬁ_com∑ª_™d_sw≠
–&
q
->
èû
,Åaû, 
√xt
 );

107 *
vÆue
 = 
√xt
->
d©a
;

109 i‡(
	`__sync_boﬁ_com∑ª_™d_sw≠
(&
q
->
hód
, hód, 
√xt
) )

113 
	`__cûkπs_‰ì
((
queue_t
 *Ë
hód
);

114 #ifde‡
QUEUE_DEBUG


115 
	`IVAR_DBG_PRINT_
(3, " [c⁄cuºít-cûk,lock‰ì-Q] Suc˚ssfuŒy dequeued sèŒed sèck %∞‰om queuê%p\n", *
vÆue
, 
q
);

117  
SUCCESS
;

118 
	}
}

121 
	$dñëe_°ack_queue
(
queue_t
* 
q
)

124 
ELEMENT_TYPE
 
huk¨z
;

125 
	`dequeue
(
q
, &
huk¨z
));

127 
	`__cûkπs_‰ì
(
q
);

128 
	}
}

	@queues/lockfree_queue.h

2 #i‚de‡
__LOCKFREE_QUEUE_H


3 
	#__LOCKFREE_QUEUE_H


	)

5 
	~<cûk/comm⁄.h
>

6 
	~"../c⁄cuºít_cûk_öã∫Æ.h
"

8 
	g__CILKRTS_BEGIN_EXTERN_C


10 
	#ELEMENT_TYPE
 
uöt64_t


	)

11 
	#SUCCESS
 0

	)

12 
	#QUEUE_EMPTY
 -1

	)

15 
	s__cûkπs_°ack_∑ú
 {

16 
ELEMENT_TYPE
 
	md©a
;

17 
__cûkπs_°ack_∑ú
* 
	m√xt
;

21 
	squeue_t
 {

22 
__cûkπs_°ack_∑ú
* 
	mhód
;

23 
__cûkπs_°ack_∑ú
* 
	mèû
;

26 
queue_t
 
	tqueue_t
;

28 
queue_t
* 
make_°ack_queue
();

29 
dñëe_°ack_queue
(
queue_t
* 
q
);

30 
íqueue
(
queue_t
* 
q
, 
ELEMENT_TYPE
 
vÆue
);

31 
dequeue
(
queue_t
* 
q
, 
ELEMENT_TYPE
 *
vÆue
);

33 
	g__CILKRTS_END_EXTERN_C


	@queues/locking_queue.c

36 #ifde‡ 
TBB_QUEUE_VERSION


37 
	~"c⁄cuºít_queue_tbb.h
"

40 
	~<c⁄cuºít_cûk.h
>

46 
	s__cûkπs_°ack_∑ú
 {

47 
QUEUE_ELEMTY
* 
	md©a
;

48 
__cûkπs_°ack_∑ú
* 
	m√xt
;

51 
QUEUE_ELEMTY
* 
dequeue_∑u£d_°ack
(vﬁ©ûê
__cûkπs_°ack_queue
* 
q
);

54 
	$dñëe_°ack_queue
(
__cûkπs_°ack_queue
* 
q
) {

56  
	`dequeue_∑u£d_°ack
(
q
) ) { }

58 
	`__cûkπs_‰ì
(
q
);

59 
	}
}

62 
__cûkπs_°ack_∑ú
* 
	ghód
;

63 
__cûkπs_°ack_∑ú
* 
	gèû
;

64 
±hªad_muãx_t
 
	gmut
;

67 
__cûkπs_°ack_queue_°ru˘
 
	t__cûkπs_°ack_queue
;

69 
__cûkπs_°ack_queue
* 
	$make_°ack_queue
()

71 
__cûkπs_°ack_queue
* 
q
 =

72 (
__cûkπs_°ack_queue
*)
	`__cûkπs_mÆloc
((__cilkrts_stack_queue));

74 
	`±hªad_muãx_öô
–&
q
->
mut
, 
NULL
);

75 
q
->
hód
 = 
NULL
;

76 
q
->
èû
 = 
NULL
;

77  
q
;

78 
	}
}

80 
	$íqueue_∑u£d_°ack
(
__cûkπs_°ack_queue
* 
q
, 
QUEUE_ELEMTY
* 
°k
)

82 
__cûkπs_°ack_∑ú
 * 
√wp
 =

83 (
__cûkπs_°ack_∑ú
*)
	`__cûkπs_mÆloc
((__cilkrts_stack_pair));

85 
	`IVAR_DBG_PRINT_
(3, " [c⁄cuºít-cûk,muãx-queue] BegöÉnqueuêo‡°ack %∞ötÿqueuê%p\n", 
°k
, 
q
);

86 
√wp
->
d©a
 = 
°k
;

87 
√wp
->
√xt
 = 
NULL
;

88 
	`±hªad_muãx_lock
(&
q
->
mut
);

89 i‡(
q
->
èû
 =
NULL
)

90 
q
->
hód
 = q->
èû
 = 
√wp
;

92 
q
->
èû
->
√xt
 = 
√wp
;

93 
q
->
èû
 = 
√wp
;

95 
	`±hªad_muãx_u∆ock
(&
q
->
mut
);

96 
	`IVAR_DBG_PRINT_
(2, " [c⁄cuºít-cûk,muãx-queue] Suc˚ssfuŒyÉnqueued sèŒed sèck %∞ö queuê%p\n", 
°k
, 
q
);

97 
	}
}

100 
QUEUE_ELEMTY
* 
	$dequeue_∑u£d_°ack
(vﬁ©ûê
__cûkπs_°ack_queue
* 
q
)

102 
QUEUE_ELEMTY
* 
°k
;

103 
__cûkπs_°ack_∑ú
* 
¥
;

104 
	`IVAR_DBG_PRINT_
(4, " [c⁄cuºít-cûk,muãx-queue] Begö dequeuê‰om queuê%p\n", 
q
);

105 
	`±hªad_muãx_lock
((
±hªad_muãx_t
*Ë&
q
->
mut
);

106 i‡(
q
->
hód
 =
NULL
) {

107 
	`±hªad_muãx_u∆ock
((
±hªad_muãx_t
*Ë&
q
->
mut
);

108  
NULL
;

110 
¥
 = 
q
->
hód
;

111 
q
->
hód
 = q->hód->
√xt
;

112 i‡(
q
->
hód
 =
NULL
Ëq->
èû
 = NULL;

114 
	`±hªad_muãx_u∆ock
((
±hªad_muãx_t
*Ë&
q
->
mut
);

115 
°k
 = 
¥
->
d©a
;

116 
	`__cûkπs_‰ì
(
¥
);

117 
	`IVAR_DBG_PRINT_
(3," [c⁄cuºít-cûk,muãx-queue] Suc˚ssfuŒy dequeued sèŒed sèck %∞‰om queuê%p\n", 
°k
, 
q
);

118  
°k
;

119 
	}
}

	@reducer_impl.cpp

37 #ifde‡
_WIN32


38 #¥agm®
w¨nög
(
dißbÀ
: 1684)

41 
	~"ªdu˚r_im∂.h
"

42 
	~"scheduÀr.h
"

43 
	~"bug.h
"

44 
	~"globÆ_°©e.h
"

45 
	~"‰ame_mÆloc.h
"

47 
	~"cûk/hy≥robje˘_ba£.h
"

48 
	~"cûktoﬁs/cûks¸ìn.h
"

49 
	~"öã∫Æ/abi.h
"

51 #i‡
REDPAR_DEBUG
 > 0

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

57 
	#DBG
 if(0)

58 

	)

61 
ölöe
 
	$vîify_cuºít_wkr
(
__cûkπs_w‹kî
 *
w
)

63 #i‡
REDPAR_DEBUG
 >= 5

64 
__cûkπs_w‹kî
* 
tmp
 = 
	`__cûkπs_gë_és_w‹kî
();

65 i‡(
w
 !
tmp
) {

66 
	`Ârötf
(
°dîr
, "W=%d,áctual=%d... missingáÑefresh....\n",

67 
w
->
£lf
,

68 
tmp
->
£lf
);

70 
	`CILK_ASSERT
(
w
 =
tmp
);

72 
	}
}

76 
	sDißbÀCûks¸ìn


78 
DißbÀCûks¸ìn
 (Ë{ 
__cûks¸ìn_dißbÀ_checkög
(); }

79 ~
DißbÀCûks¸ìn
 (Ë{ 
__cûks¸ìn_íabÀ_checkög
(); }

83 
	sE«bÀCûks¸ìn


85 
E«bÀCûks¸ìn
 (Ë{ 
__cûks¸ìn_íabÀ_checkög
(); }

86 ~
E«bÀCûks¸ìn
 (Ë{ 
__cûks¸ìn_dißbÀ_checkög
(); }

90 
	sñem
 {

91 *
	mkey
;

92 
__cûkπs_hy≥robje˘_ba£
 *
	mhb
;

93 *
	mvÆ
;

95 
de°roy
();

99 
	sbuckë
 {

101 
size_t
 
	mnmax
;

109 
ñem
 
	mñ
[1];

116 
	scûkªd_m≠
 {

118 
globÆ_°©e_t
 *
	mg
;

121 
size_t
 
	m√Àm
;

124 
size_t
 
	mnbuckës
;

127 
buckë
 **
	mbuckës
;

130 
boﬁ
 
	mmîgög
;

133 
boﬁ
 
	mis_À·mo°
;

136 
ñem
 *
lookup
(*
key
);

140 
ñem
 *
ö£π_no_ªhash
(
__cûkπs_w‹kî
 *
w
,

141 *
key
,

142 
__cûkπs_hy≥robje˘_ba£
 *
hb
,

143 *
vÆue
);

147 
ölöe
 
ñem
 *
ªhash_™d_ö£π
(
__cûkπs_w‹kî
 *
w
,

148 *
key
,

149 
__cûkπs_hy≥robje˘_ba£
 *
hb
,

150 *
vÆue
);

153 
ñem
 *
grow
(
__cûkπs_w‹kî
 *
w
, 
buckë
 **
bp
);

156 
ªhash
(
__cûkπs_w‹kî
 *);

162 
ölöe
 
boﬁ
 
√ed_ªhash_p
() const;

165 
make_buckës
(
__cûkπs_w‹kî
 *
w
, 
size_t
 
nbuckës
);

171 
	emîge_köd


173 
	mMERGE_UNORDERED
,

174 
	mMERGE_INTO_LEFT
,

175 
	mMERGE_INTO_RIGHT


182 
__cûkπs_w‹kî
* 
mîge
(__cûkπs_w‹kî *
cuºít_wkr
,

183 
cûkªd_m≠
 *
Ÿhî_m≠
,

184 
mîge_köd
 
köd
);

187 
check
(
boﬁ
 
Ælow_nuŒ_vÆ
);

190 
boﬁ
 
is_em±y
(Ë{  
	m√Àm
 == 0; }

193 
ölöe
 
cûkªd_m≠
* 
	$ö°Æl_√w_ªdu˚r_m≠
(
__cûkπs_w‹kî
 *
w
) {

194 
cûkªd_m≠
 *
h
;

195 
h
 = 
	`__cûkπs_make_ªdu˚r_m≠
(
w
);

196 
w
->
ªdu˚r_m≠
 = 
h
;

197  
h
;

198 
	}
}

200 
size_t
 
	$sizeof_buckë
(
size_t
 
nmax
)

202 
buckë
 *
b
 = 0;

203  ((*
b
Ë+ 
nmax
 * (b->
ñ
[0]));

204 
	}
}

206 
buckë
 *
	$Æloc_buckë
(
__cûkπs_w‹kî
 *
w
, 
size_t
 
nmax
)

208 
buckë
 *
b
 = (bucket *)

209 
	`__cûkπs_‰ame_mÆloc
(
w
, 
	`sizeof_buckë
(
nmax
));

210 
b
->
nmax
 =Çmax;

211  
b
;

212 
	}
}

214 
	$‰ì_buckë
(
__cûkπs_w‹kî
 *
w
, 
buckë
 **
bp
)

216 
buckë
 *
b
 = *
bp
;

217 i‡(
b
) {

218 
	`__cûkπs_‰ame_‰ì
(
w
, 
b
, 
	`sizeof_buckë
(b->
nmax
));

219 *
bp
 = 0;

221 
	}
}

224 
size_t
 
	$roundup
(
size_t
 
nmax
)

226 
size_t
 
sz
 = 
	`sizeof_buckë
(
nmax
);

229 
sz
 = 
	`__cûkπs_‰ame_mÆloc_roundup
(sz);

232 
nmax
 = ((
sz
 - (
buckë
)Ë/ (
ñem
));

234  
nmax
;

235 
	}
}

237 
boﬁ
 
	$is_powî_of_2
(
size_t
 
n
)

239  (
n
 & (n - 1)) == 0;

240 
	}
}

242 
	gcûkªd_m≠
::
	$make_buckës
(
__cûkπs_w‹kî
 *
w
,

243 
size_t
 
√w_nbuckës
)

245 
nbuckës
 = 
√w_nbuckës
;

247 
	`CILK_ASSERT
(
	`is_powî_of_2
(
nbuckës
));

248 #i‡
deföed
 
__GNUC__
 && deföed 
__ICC


250 
buckë
 *vﬁ©ûe*
√w_buckës
 = (bucket *volatile*)

252 
buckë
 **
√w_buckës
 = (bucket **)

254 
	`__cûkπs_‰ame_mÆloc
(
w
, 
nbuckës
 * (*(
buckës
)));

256 #i‡
REDPAR_DEBUG
 >= 1

257 
	`Ârötf
(
°dîr
, "W=%d, desc=make_buckets,Çew_buckets=%p,Çew_nbuckets=%zd\n",

258 
w
->
£lf
, 
√w_buckës
, 
√w_nbuckës
);

261 
size_t
 
i
 = 0; i < 
√w_nbuckës
; ++i)

262 
√w_buckës
[
i
] = 0;

263 #i‡
deföed
 
__GNUC__
 && deföed 
__ICC


264 
buckës
 = (
buckë
 **)
√w_buckës
;

266 
buckës
 = 
√w_buckës
;

268 
√Àm
 = 0;

269 
	}
}

271 
	$‰ì_buckës
(
__cûkπs_w‹kî
 *
w
,

272 
buckë
 **
buckës
,

273 
size_t
 
nbuckës
)

275 
size_t
 
i
;

277 #i‡
REDPAR_DEBUG
 >= 1

278 
	`vîify_cuºít_wkr
(
w
);

279 
	`Ârötf
(
°dîr
, "W=%d, desc=free_buckets, buckets=%p, size=%zd\n",

280 
w
->
£lf
, 
buckës
,

281 
nbuckës
 * (*
buckës
));

284 
i
 = 0; i < 
nbuckës
; ++i)

285 
	`‰ì_buckë
(
w
, 
buckës
 + 
i
);

287 
	`__cûkπs_‰ame_‰ì
(
w
, 
buckës
, 
nbuckës
 * (*buckets));

288 
	}
}

290 
size_t
 
	$mösz
(
size_t
 
√Àm
)

292  1U + 
√Àm
 +Çelem / 8U;

293 
	}
}

295 
size_t
 
	$√xtsz
(
size_t
 
√Àm
)

297  2 * 
√Àm
;

298 
	}
}

300 
boﬁ
 
	gcûkªd_m≠
::
	$√ed_ªhash_p
() const

302  
	`mösz
(
√Àm
Ë> 
nbuckës
;

303 
	}
}

305 
ölöe
 
size_t
 
	$hashfun
(c⁄° 
cûkªd_m≠
 *
h
, *
key
)

307 
size_t
 
k
 = (size_tË
key
;

309 
k
 ^= k >> 21;

310 
k
 ^= k >> 8;

311 
k
 ^= k >> 3;

313  
k
 & (
h
->
nbuckës
 - 1);

314 
	}
}

318 
ölöe
 * 
	$gë_À·mo°_võw
(
__cûkπs_hy≥robje˘_ba£
 *
hb
)

320  
ªöãΩªt_ˇ°
<*>(
hb
Ë+ hb->
__võw_off£t
;

321 
	}
}

327 
ölöe
 * 
	$gë_À·mo°_võw
(*&
key
)

329  
key
;

330 
	}
}

333 
	gcûkªd_m≠
::
	$check
(
boﬁ
 
Ælow_nuŒ_vÆ
)

335 
size_t
 
cou¡
 = 0;

337 
	`CILK_ASSERT
(
buckës
);

338 
size_t
 
i
 = 0; i < 
nbuckës
; ++i) {

339 
buckë
 *
b
 = 
buckës
[
i
];

340 i‡(
b
)

341 
ñem
 *
ñ
 = 
b
->ñ;Él->
key
; ++el) {

342 
	`CILK_ASSERT
(
Ælow_nuŒ_vÆ
 || 
ñ
->
vÆ
);

343 ++
cou¡
;

346 
	`CILK_ASSERT
(
√Àm
 =
cou¡
);

348 
	}
}

351 
ñem
 *
	gcûkªd_m≠
::
	$grow
(
__cûkπs_w‹kî
 *
w
,

352 
buckë
 **
bp
)

354 
size_t
 
i
, 
nmax
, 
¬max
;

355 
buckë
 *
b
, *
nb
;

357 
b
 = *
bp
;

358 i‡(
b
) {

359 
nmax
 = 
b
->nmax;

361 
i
 = 0; i < 
nmax
; ++i)

362 i‡(
b
->
ñ
[
i
].
key
 == 0)

363  &(
b
->
ñ
[
i
]);

366 
nmax
 = 0;

369 
	`vîify_cuºít_wkr
(
w
);

371 
¬max
 = 
	`roundup
(2 * 
nmax
);

372 
nb
 = 
	`Æloc_buckë
(
w
, 
¬max
);

376 
i
 = 0; i < 
nmax
; ++i)

377 
nb
->
ñ
[
i
] = 
b
->el[i];

379 
	`‰ì_buckë
(
w
, 
bp
); *b∞
nb
;

382 ; 
i
 < 
¬max
; ++i)

383 
nb
->
ñ
[
i
].
key
 = 0;

386 
nb
->
ñ
[
i
].
key
 = 0;

388  &(
nb
->
ñ
[
nmax
]);

389 
	}
}

391 
ñem
 *
	gcûkªd_m≠
::
	$ö£π_no_ªhash
(
__cûkπs_w‹kî
 *
w
,

392 *
key
,

393 
__cûkπs_hy≥robje˘_ba£
 *
hb
,

394 *
vÆ
)

397 #i‡
REDPAR_DEBUG
 >= 2

398 
	`Ârötf
(
°dîr
, "[W=%d, desc=insert_no_rehash,Åhis_map=%p]\n",

399 
w
->
£lf
, 
this
);

400 
	`vîify_cuºít_wkr
(
w
);

403 
	`CILK_ASSERT
((
w
 =0 && 
g
 == 0) || w->g == g);

404 
	`CILK_ASSERT
(
key
 != 0);

405 
	`CILK_ASSERT
(
vÆ
 != 0);

407 
ñem
 *
ñ
 = 
	`grow
(
w
, &(
buckës
[
	`hashfun
(
this
, 
key
)]));

409 #i‡
REDPAR_DEBUG
 >= 3

410 
	`Ârötf
(
°dîr
, "[W=%d,Åhis=%p, inserting key=%p, val=%p,Él = %p]\n",

411 
w
->
£lf
, 
this
, 
key
, 
vÆ
, 
ñ
);

414 
ñ
->
key
 = key;

415 
ñ
->
hb
 = hb;

416 
ñ
->
vÆ
 = val;

417 ++
√Àm
;

419  
ñ
;

420 
	}
}

422 
	gcûkªd_m≠
::
	$ªhash
(
__cûkπs_w‹kî
 *
w
)

424 #i‡
REDPAR_DEBUG
 >= 1

425 
	`Ârötf
(
°dîr
, "[W=%d, desc=rehash,Åhis_map=%p, g=%p, w->g=%p]\n",

426 
w
->
£lf
, 
this
, 
g
, w->g);

427 
	`vîify_cuºít_wkr
(
w
);

429 
	`CILK_ASSERT
((
w
 =0 && 
g
 == 0) || w->g == g);

431 
size_t
 
⁄buckës
 = 
nbuckës
;

432 
size_t
 
⁄ñem
 = 
√Àm
;

433 
buckë
 **
obuckës
 = 
buckës
;

434 
size_t
 
i
;

435 
buckë
 *
b
;

437 
	`make_buckës
(
w
, 
	`√xtsz
(
nbuckës
));

439 
i
 = 0; i < 
⁄buckës
; ++i) {

440 
b
 = 
obuckës
[
i
];

441 i‡(
b
) {

442 
ñem
 *
€l
;

443 
€l
 = 
b
->
ñ
; oñ->
key
; ++oel)

444 
	`ö£π_no_ªhash
(
w
, 
€l
->
key
, oñ->
hb
, oñ->
vÆ
);

448 
	`CILK_ASSERT
(
√Àm
 =
⁄ñem
);

450 
	`‰ì_buckës
(
w
, 
obuckës
, 
⁄buckës
);

451 
	}
}

453 
ñem
 *
	gcûkªd_m≠
::
	$ªhash_™d_ö£π
(
__cûkπs_w‹kî
 *
w
,

454 *
key
,

455 
__cûkπs_hy≥robje˘_ba£
 *
hb
,

456 *
vÆ
)

459 #i‡
REDPAR_DEBUG
 >= 1

460 
	`Ârötf
(
°dîr
, "W=%d,Åhis_map =%p, inserting key=%p, val=%p\n",

461 
w
->
£lf
, 
this
, 
key
, 
vÆ
);

462 
	`vîify_cuºít_wkr
(
w
);

465 i‡(
	`√ed_ªhash_p
())

466 
	`ªhash
(
w
);

468  
	`ö£π_no_ªhash
(
w
, 
key
, 
hb
, 
vÆ
);

469 
	}
}

472 
ñem
 *
	gcûkªd_m≠
::
	$lookup
(*
key
)

474 
buckë
 *
b
 = 
buckës
[
	`hashfun
(
this
, 
key
)];

476 i‡(
b
) {

477 
ñem
 *
ñ
;

478 
ñ
 = 
b
->ñ;Él->
key
; ++el) {

479 i‡(
ñ
->
key
 == key) {

480 
	`CILK_ASSERT
(
ñ
->
vÆ
);

481  
ñ
;

487 
	}
}

489 
	gñem
::
	$de°roy
()

492 i‡(
vÆ
 !
key
)

494 
cûk_c_m⁄oid
 *
m⁄oid
 = &(
hb
->
__c_m⁄oid
);

495 
cûk_c_ªdu˚r_de°roy_‚_t
 
de°roy_‚
 = 
m⁄oid
->destroy_fn;

496 
cûk_c_ªdu˚r_dóŒoˇã_‚_t
 
dóŒoˇã_‚
 = 
m⁄oid
->deallocate_fn;

498 
	`de°roy_‚
((*)
hb
, 
vÆ
);

499 
	`dóŒoˇã_‚
((*)
hb
, 
vÆ
);

501 
vÆ
 = 0;

502 
	}
}

508 
CILK_EXPORT
 
__CILKRTS_STRAND_STALE
(

509 
	$__cûkπs_hy≥r_de°roy
(
__cûkπs_hy≥robje˘_ba£
 *
hb
))

514 
DißbÀCûks¸ìn
 
x
;

516 
__cûkπs_w‹kî
* 
w
 = 
	`__cûkπs_gë_és_w‹kî
();

517 i‡(! 
w
) {

524 
cûkªd_m≠
* 
h
 = 
w
->
ªdu˚r_m≠
;

525 
	`CILK_ASSERT
(
h
);

527 i‡(
h
->
mîgög
) {

528 
	`vîify_cuºít_wkr
(
w
);

529 
	`__cûkπs_bug
("UserÉrror: hyperobject used byánother hyperobject");

532 * 
key
 = 
	`gë_À·mo°_võw
(
hb
);

533 
ñem
 *
ñ
 = 
h
->
	`lookup
(
key
);

534 i‡(
ñ
) {

537 #i‡
REDPAR_DEBUG
 >= 3

538 
	`Ârötf
(
°dîr
, "[W=%d, key=%p,Üookup in map %p, foundÉl=%p,áboutÅo destroy]\n",

539 
w
->
£lf
, 
key
, 
h
, 
ñ
);

543 
ñ
->
	`de°roy
();

548 
ñ
[0] =Él[1];

549 ++
ñ
;

550 } 
ñ
->
key
);

551 --
h
->
√Àm
;

554 #i‡
REDPAR_DEBUG
 >= 2

555 
	`Ârötf
(
°dîr
, "[W=%d, desc=hyper_destroy_finish, key=%p, w->reducer_map=%p]\n",

556 
w
->
£lf
, 
key
, w->
ªdu˚r_m≠
);

558 
	}
}

561 
CILK_EXPORT


562 
	$__cûkπs_hy≥r_¸óã
(
__cûkπs_hy≥robje˘_ba£
 *
hb
)

567 
__cûkπs_w‹kî
 *
w
 = 
	`__cûkπs_gë_és_w‹kî
();

568 i‡(! 
w
) {

578 
DißbÀCûks¸ìn
 
x
;

580 * 
vÆ
 = 
	`gë_À·mo°_võw
(
hb
);

581 
cûkªd_m≠
 *
h
 = 
w
->
ªdu˚r_m≠
;

583 i‡(
	`__buûtö_ex≥˘
(!
h
, 0)) {

584 
h
 = 
	`ö°Æl_√w_ªdu˚r_m≠
(
w
);

585 #i‡
REDPAR_DEBUG
 >= 2

586 
	`Ârötf
(
°dîr
, "[W=%d, hb=%p, hyper_create, isntalledÇew map %p, val=%p]\n",

587 
w
->
£lf
, 
hb
, 
h
, 
vÆ
);

592 
	`CILK_ASSERT
(
h
->
	`lookup
(
vÆ
Ë=
NULL
);

594 #i‡
REDPAR_DEBUG
 >= 3

595 
	`vîify_cuºít_wkr
(
w
);

596 
	`Ârötf
(
°dîr
, "[W=%d, hb=%p,Üookup in map %p of val %p, should beÇull]\n",

597 
w
->
£lf
, 
hb
, 
h
, 
vÆ
);

598 
	`Ârötf
(
°dîr
, "W=%d, h=%p, inserting key %p, val%p\n",

599 
w
->
£lf
,

600 
h
,

601 &(
hb
->
__c_m⁄oid
),

602 
vÆ
);

605 i‡(
h
->
mîgög
)

606 
	`__cûkπs_bug
("UserÉrror: hyperobject used byánother hyperobject");

608 
	`CILK_ASSERT
(
w
->
ªdu˚r_m≠
 =
h
);

610 (Ë
h
->
	`ªhash_™d_ö£π
(
w
, 
vÆ
, 
hb
, val);

611 
	}
}

614 
CILK_EXPORT
 * 
__CILKRTS_STRAND_PURE
(

615 
	$__cûkπs_hy≥r_lookup
(
__cûkπs_hy≥robje˘_ba£
 *
hb
))

617 
__cûkπs_w‹kî
* 
w
 = 
	`__cûkπs_gë_és_w‹kî_Á°
();

618 * 
key
 = 
	`gë_À·mo°_võw
(
hb
);

619 i‡(! 
w
)

620  
	`gë_À·mo°_võw
(
key
);

624 
DißbÀCûks¸ìn
 
dgu¨d
;

626 i‡(
	`__buûtö_ex≥˘
(
w
->
g
->
f‹˚_ªdu˚
, 0))

627 
	`__cûkπs_¥omŸe_own_deque
(
w
);

628 
cûkªd_m≠
* 
h
 = 
w
->
ªdu˚r_m≠
;

630 i‡(
	`__buûtö_ex≥˘
(!
h
, 0)) {

631 
h
 = 
	`ö°Æl_√w_ªdu˚r_m≠
(
w
);

634 i‡(
h
->
mîgög
)

635 
	`__cûkπs_bug
("UserÉrror: hyperobject used byánother hyperobject");

636 
ñem
* 
ñ
 = 
h
->
	`lookup
(
key
);

637 i‡(! 
ñ
) {

639 *
ªp
;

643 
E«bÀCûks¸ìn
 
egu¨d
;

644 i‡(
h
->
is_À·mo°
)

649 
ªp
 = 
	`gë_À·mo°_võw
(
key
);

653 
ªp
 = 
hb
->
__c_m⁄oid
.
	`Æloˇã_‚
((*)hb,

654 
hb
->
__võw_size
);

656 
hb
->
__c_m⁄oid
.
	`idítôy_‚
((*)hb, 
ªp
);

660 #i‡
REDPAR_DEBUG
 >= 3

661 
	`Ârötf
(
°dîr
, "W=%d, h=%p, inserting key %p, val%p\n",

662 
w
->
£lf
,

663 
h
,

664 &(
hb
->
__c_m⁄oid
),

665 
ªp
);

666 
	`CILK_ASSERT
(
w
->
ªdu˚r_m≠
 =
h
);

668 
ñ
 = 
h
->
	`ªhash_™d_ö£π
(
w
, 
key
, 
hb
, 
ªp
);

671  
ñ
->
vÆ
;

672 
	}
}

674 "C" 
CILK_EXPORT


675 * 
	$__cûkπs_hy≥robje˘_Æloc
(* 
ign‹e
, 
°d
::
size_t
 
byãs
)

677  
°d
::
	`mÆloc
(
byãs
);

678 
	}
}

680 "C" 
CILK_EXPORT


681 
	$__cûkπs_hy≥robje˘_dóŒoc
(* 
ign‹e
, * 
võw
)

683 
°d
::
	`‰ì
(
võw
);

684 
	}
}

687 "C" 
CILK_EXPORT


688 
	$__cûkπs_hy≥robje˘_no›_de°roy
(* 
ign‹e
, * 
ign‹e2
)

690 
	}
}

692 
cûkªd_m≠
 *
	$__cûkπs_make_ªdu˚r_m≠
(
__cûkπs_w‹kî
 *
w
)

694 
	`CILK_ASSERT
(
w
);

696 
cûkªd_m≠
 *
h
;

697 
size_t
 
nbuckës
 = 1;

699 
h
 = (
cûkªd_m≠
 *)
	`__cûkπs_‰ame_mÆloc
(
w
, (*h));

700 #i‡
REDPAR_DEBUG
 >= 1

701 
	`Ârötf
(
°dîr
, "[W=%d, desc=make_reducer_frame_malloc_reducer_map, h=%p]\n",

702 
w
->
£lf
, 
h
);

705 
h
->
g
 = 
w
 ? w->g : 0;

706 
h
->
	`make_buckës
(
w
, 
nbuckës
);

707 
h
->
mîgög
 = 
Ál£
;

708 
h
->
is_À·mo°
 = 
Ál£
;

710  
h
;

711 
	}
}

716 
	$__cûkπs_de°roy_ªdu˚r_m≠
(
__cûkπs_w‹kî
 *
w
, 
cûkªd_m≠
 *
h
)

718 
	`CILK_ASSERT
((
w
 =0 && 
h
->
g
 == 0) || w->g == h->g);

719 
	`vîify_cuºít_wkr
(
w
);

724 
DBG
 
h
->
	`check
–
åue
);

726 
buckë
 *
b
;

727 
size_t
 
i
;

729 
i
 = 0; i < 
h
->
nbuckës
; ++i) {

730 
b
 = 
h
->
buckës
[
i
];

731 i‡(
b
) {

732 
ñem
 *
ñ
;

733 
ñ
 = 
b
->ñ;Él->
key
; ++el) {

734 i‡(
ñ
->
vÆ
)

735 
ñ
->
	`de°roy
();

740 
	`‰ì_buckës
(
w
, 
h
->
buckës
, h->
nbuckës
);

742 #i‡
REDPAR_DEBUG
 >= 1

743 
	`Ârötf
(
°dîr
, "W=%d, destroy_red_map, freeing map h=%p, size=%zd\n",

744 
w
->
£lf
, 
h
, (*h));

747 
	`__cûkπs_‰ame_‰ì
(
w
, 
h
, (*h));

748 
	}
}

752 
	$__cûkπs_£t_À·mo°_ªdu˚r_m≠
(
cûkªd_m≠
 *
h
, 
is_À·mo°
)

754 
h
->
is_À·mo°
 = is_leftmost;

755 
	}
}

758 
__cûkπs_w‹kî
* 
cûkªd_m≠
::
	$mîge
(
__cûkπs_w‹kî
 *
w
,

759 
cûkªd_m≠
 *
Ÿhî_m≠
,

760 
mîge_köd
 
köd
)

768 
DißbÀCûks¸ìn
 
gu¨d
;

770 #i‡
REDPAR_DEBUG
 >= 2

771 
	`Ârötf
(
°dîr
, "[W=%d, desc=merge,Åhis_map=%p, other_map=%p]\n",

772 
w
->
£lf
,

773 
this
, 
Ÿhî_m≠
);

776 
__cûkπs_°ack_‰ame
 *
cuºít_sf
 = 
w
->
cuºít_°ack_‰ame
;

777 
mîgög
 = 
åue
;

778 
Ÿhî_m≠
->
mîgög
 = 
åue
;

782 
	`CILK_ASSERT
(!
Ÿhî_m≠
->
is_À·mo°
 );

783 
boﬁ
 
mîge_to_À·mo°
 = (
this
->
is_À·mo°


786 
DBG
 
	`check
–
Ál£
);

787 
DBG
 
Ÿhî_m≠
->
	`check
–
Ál£
);

789 
size_t
 
i
 = 0; i < 
Ÿhî_m≠
->
nbuckës
; ++i) {

790 
buckë
 *
b
 = 
Ÿhî_m≠
->
buckës
[
i
];

791 i‡(
b
) {

792 
ñem
 *
Ÿhî_ñ
 = 
b
->
ñ
; othî_ñ->
key
; ++other_el) {

795 *
Ÿhî_vÆ
 = 
Ÿhî_ñ
->
vÆ
;

796 
	`CILK_ASSERT
(
Ÿhî_vÆ
);

798 *
key
 = 
Ÿhî_ñ
->key;

799 
__cûkπs_hy≥robje˘_ba£
 *
hb
 = 
Ÿhî_ñ
->hb;

800 
ñem
 *
this_ñ
 = 
	`lookup
(
key
);

802 i‡(
this_ñ
 =0 && 
mîge_to_À·mo°
) {

804 * 
À·mo°
 = 
	`gë_À·mo°_võw
(
key
);

817 i‡(
À·mo°
 !
Ÿhî_vÆ
)

818 
this_ñ
 = 
	`ªhash_™d_ö£π
(
w
, 
key
, 
hb
, 
À·mo°
);

821 i‡(
this_ñ
 == 0) {

823 
	`ªhash_™d_ö£π
(
w
, 
key
, 
hb
, 
Ÿhî_vÆ
);

824 
Ÿhî_ñ
->
vÆ
 = 0;

830 
köd
)

832 
MERGE_UNORDERED
:

833 
	`__cûkπs_bug
("TLS ReducerÑace");

835 
MERGE_INTO_RIGHT
:

838 
Ÿhî_ñ
->
vÆ
 = 
this_ñ
->val;

839 
this_ñ
->
vÆ
 = 
Ÿhî_vÆ
;

841 
MERGE_INTO_LEFT
: {

845 #i‡
DISABLE_PARALLEL_REDUCERS


846 
__cûkπs_°ack_‰ame
 * vﬁ©ûê*
ßved_¥Ÿe˘ed_èû
;

847 
ßved_¥Ÿe˘ed_èû
 = 
	`__cûkπs_dißŒow_°ólög
(
w
, 
NULL
);

851 
	`CILK_ASSERT
(
cuºít_sf
->
w‹kî
 =
w
);

852 
	`CILK_ASSERT
(
w
->
cuºít_°ack_‰ame
 =
cuºít_sf
);

856 
hb
->
__c_m⁄oid
.
	`ªdu˚_‚
((*)hb,

857 
this_ñ
->
vÆ
,

858 
Ÿhî_ñ
->
vÆ
);

859 
w
 = 
cuºít_sf
->
w‹kî
;

861 #i‡
REDPAR_DEBUG
 >= 2

862 
	`vîify_cuºít_wkr
(
w
);

863 
	`CILK_ASSERT
(
w
->
cuºít_°ack_‰ame
 =
cuºít_sf
);

867 #i‡
DISABLE_PARALLEL_REDUCERS


869 
	`__cûkπs_ª°‹e_°ólög
(
w
, 
ßved_¥Ÿe˘ed_èû
);

877 
this
->
is_À·mo°
 =Åhis->is_À·mo° || 
Ÿhî_m≠
->is_leftmost;

878 
mîgög
 = 
Ál£
;

879 
Ÿhî_m≠
->
mîgög
 = 
Ál£
;

880 
	`vîify_cuºít_wkr
(
w
);

881 
	`__cûkπs_de°roy_ªdu˚r_m≠
(
w
, 
Ÿhî_m≠
);

882  
w
;

883 
	}
}

890 
ölöe


891 
	$debug_m≠_mîge
(
__cûkπs_w‹kî
 *
w
,

892 
cûkªd_m≠
 *
À·_m≠
,

893 
cûkªd_m≠
 *
right_m≠
,

894 
__cûkπs_w‹kî
 **
föÆ_wkr
)

896 #i‡
REDPAR_DEBUG
 >= 2

897 
	`Ârötf
(
°dîr
, "[W=%d, desc=finish_merge,Üeft_map=%p,Ñight_map=%p, w->reducer_map=%p,Ñight_ans=%p, final_wkr=%d]\n",

898 
w
->
£lf
, 
À·_m≠
, 
right_m≠
, w->
ªdu˚r_m≠
,Ñight_m≠, (*
föÆ_wkr
)->self);

900 
	}
}

910 
cûkªd_m≠
*

911 
	$mîge_ªdu˚r_m≠s
(
__cûkπs_w‹kî
 **
w_±r
,

912 
cûkªd_m≠
 *
À·_m≠
,

913 
cûkªd_m≠
 *
right_m≠
)

915 
__cûkπs_w‹kî
 *
w
 = *
w_±r
;

916 i‡(!
À·_m≠
) {

917 
	`debug_m≠_mîge
(
w
, 
À·_m≠
, 
right_m≠
, 
w_±r
);

918  
right_m≠
;

921 i‡(!
right_m≠
) {

922 
	`debug_m≠_mîge
(
w
, 
À·_m≠
, 
right_m≠
, 
w_±r
);

923  
À·_m≠
;

928 i‡(
À·_m≠
->
is_À·mo°
 ||Üe·_m≠->
√Àm
 > 
right_m≠
->nelem) {

929 *
w_±r
 = 
À·_m≠
->
	`mîge
(
w
, 
right_m≠
, 
cûkªd_m≠
::
MERGE_INTO_LEFT
);

930 
	`debug_m≠_mîge
(*
w_±r
, 
À·_m≠
, 
right_m≠
, w_ptr);

931  
À·_m≠
;

933 *
w_±r
 = 
right_m≠
->
	`mîge
(
w
, 
À·_m≠
, 
cûkªd_m≠
::
MERGE_INTO_RIGHT
);

934 
	`debug_m≠_mîge
(*
w_±r
, 
À·_m≠
, 
right_m≠
, w_ptr);

935  
right_m≠
;

937 
	}
}

945 
cûkªd_m≠
*

946 
	$ª≥©ed_mîge_ªdu˚r_m≠s
(
__cûkπs_w‹kî
 **
w_±r
,

947 
cûkªd_m≠
 *
À·_m≠
,

948 
cûkªd_m≠
 *
right_m≠
)

953 
À·_m≠
 = 
	`mîge_ªdu˚r_m≠s
(
w_±r
,Üe·_m≠, 
right_m≠
);

954 
	`vîify_cuºít_wkr
(*
w_±r
);

957 
right_m≠
 = (*
w_±r
)->
ªdu˚r_m≠
;

958 (*
w_±r
)->
ªdu˚r_m≠
 = 
NULL
;

959 } 
right_m≠
);

960  
À·_m≠
;

961 
	}
}

	@reducer_impl.h

35 #i‚de‡
INCLUDED_REDUCER_IMPL_DOT_H


36 
	#INCLUDED_REDUCER_IMPL_DOT_H


	)

38 
	~<cûk/comm⁄.h
>

39 
	~<öã∫Æ/abi.h
>

40 
	~"πs-comm⁄.h
"

42 
__CILKRTS_BEGIN_EXTERN_C


44 
cûkªd_m≠
 
	tcûkªd_m≠
;

55 
COMMON_SYSDEP


56 
cûkªd_m≠
 *
__cûkπs_make_ªdu˚r_m≠
(
__cûkπs_w‹kî
 *
w
);

65 
COMMON_SYSDEP


66 
__cûkπs_de°roy_ªdu˚r_m≠
(
__cûkπs_w‹kî
 *
w
,

67 
cûkªd_m≠
 *
h
);

76 
COMMON_SYSDEP


77 
__cûkπs_£t_À·mo°_ªdu˚r_m≠
(
cûkªd_m≠
 *
h
,

78 
is_À·mo°
);

103 
cûkªd_m≠
 *
mîge_ªdu˚r_m≠s
(
__cûkπs_w‹kî
 **
w_±r
,

104 
cûkªd_m≠
 *
À·_m≠
,

105 
cûkªd_m≠
 *
right_m≠
);

114 
cûkªd_m≠
 *
ª≥©ed_mîge_ªdu˚r_m≠s
(
__cûkπs_w‹kî
 **
w_±r
,

115 
cûkªd_m≠
 *
À·_m≠
,

116 
cûkªd_m≠
 *
right_m≠
);

118 
	g__CILKRTS_END_EXTERN_C


	@rts-common.h

29 #i‚de‡
INCLUDED_RTS_COMMON_DOT_H


30 
	#INCLUDED_RTS_COMMON_DOT_H


	)

36 
	#CILK_API_VOID
 
	`CILK_API
()

	)

37 
	#CILK_API_VOID_PTR
 
	`CILK_API
(*)

	)

38 
	#CILK_API_INT
 
	`CILK_API
()

	)

39 
	#CILK_API_SIZET
 
	`CILK_API
(
size_t
)

	)

40 
	#CILK_API_TBB_RETCODE
 
	`CILK_API
(
__cûk_tbb_ªtcode
)

	)

41 
	#CILK_API_PEDIGREE
 
	`CILK_API
(
__cûkπs_≥digªe
)

	)

47 
	#CILK_ABI_VOID
 
	`CILK_ABI
()

	)

48 
	#CILK_ABI_WORKER_PTR
 
	`CILK_ABI
(
__cûkπs_w‹kî_±r
)

	)

49 
	#CILK_ABI_THROWS_VOID
 
	`CILK_ABI_THROWS
()

	)

53 
	#COMMON_PORTABLE


	)

54 
	#COMMON_SYSDEP


	)

55 
	#NON_COMMON


	)

57 #i‡!(
deföed
 
__GNUC__
 || deföed 
__ICC
)

58 
	#__buûtö_ex≥˘
(
a_
, 
b_
Ë
	)
a_

61 #ifde‡
__˝lu•lus


62 
	#cûk_nŸhrow
 
	`throw
()

	)

64 
	#cûk_nŸhrow


	)

67 #ifde‡
__GNUC__


68 
	#NORETURN
 
	`__©åibuã__
((
n‹ëu∫
))

	)

70 
	#NORETURN
 
	`__de˛•ec
(
n‹ëu∫
)

	)

73 #ifde‡
__GNUC__


74 
	#NOINLINE
 
	`__©åibuã__
((
noölöe
))

	)

76 
	#NOINLINE
 
	`__de˛•ec
(
noölöe
)

	)

79 #i‚de‡
__GNUC__


80 
	#__©åibuã__
(
X
)

	)

87 #i‡
deföed
(
_MSC_VER
Ë&& ! deföed(
__INTEL_COMPILER
)

88 #îr‹ 
deföe
 
ölöe


89 
	#ölöe
 
__ölöe


	)

95 
	#ENABLE_NOTIFY_ZC_INTRINSIC


	)

	@scheduler.c

34 
	~"scheduÀr.h
"

35 
	~"bug.h
"

36 
	~"os.h
"

37 
	~"os_muãx.h
"

38 
	~"loˇl_°©e.h
"

39 
	~"sig«l_node.h
"

40 
	~"fuŒ_‰ame.h
"

41 
	~"°acks.h
"

42 
	~"sysdï.h
"

43 
	~"ex˚±.h
"

44 
	~"cûk_mÆloc.h
"

45 
	~"≥digªes.h
"

47 
	~<°rög.h
>

48 
	~<°dio.h
>

49 
	~<°dlib.h
>

51 #ifde‡
_WIN32


52 #¥agm®
w¨nög
(
dißbÀ
:1786)

53 
	~"sysdï-wö.h
"

59 #ifde‡
CILK_IVARS


60 
	~<cûk/comm⁄.h
>

61 
	~"c⁄cuºít_cûk_öã∫Æ.h
"

62 
	~<cûk/c⁄cuºít_queue.h
>

67 #ifde‡
_WIN32


68 #¥agm®
w¨nög
(
dißbÀ
: 1684)

71 
	~"cûk/cûk_≠i.h
"

72 
	~"‰ame_mÆloc.h
"

73 
	~"mëaˇŒ_im∂.h
"

74 
	~"ªdu˚r_im∂.h
"

75 
	~"cûk-tbb-öãr›.h
"

76 
	~"cûk-ôäŸify.h
"

77 
	~"°©s.h
"

81 #ifde‡
_WIN32


82 #¥agm®
w¨nög
(
dißbÀ
: 2259)

85 #i‚de‡
_WIN32


86 
	~<uni°d.h
>

90 #ifde‡
DEBUG_LOCKS


92 
	#ASSERT_WORKER_LOCK_OWNED
(
w
) \

94 
__cûkπs_w‹kî
 *
és_w‹kî
 = 
	`__cûkπs_gë_és_w‹kî
(); \

95 
	`CILK_ASSERT
((
w
)->
l
->
lock
.
ow√r
 =
és_w‹kî
); \

96 }

	)

98 
	#ASSERT_WORKER_LOCK_OWNED
(
w
)

	)

102 
	escheduÀ_t
 { 
	mSCHEDULE_RUN
,

103 
	mSCHEDULE_WAIT
,

104 
	mSCHEDULE_EXIT
 };

109 
ölöe
 
	$vîify_cuºít_wkr
(
__cûkπs_w‹kî
 *
w
)

111 #i‡
REDPAR_DEBUG
 >= 3

113 
__cûkπs_w‹kî
* 
tmp
 = 
	`__cûkπs_gë_és_w‹kî
();

114 i‡(
w
 !
tmp
) {

115 
	`Ârötf
(
°dîr
, "Error. W=%d,áctual worker =%d...\n",

116 
w
->
£lf
,

117 
tmp
->
£lf
);

119 
	`CILK_ASSERT
(
w
 =
tmp
);

121 
	}
}

123 
scheduÀ_t
 
w‹kî_ru¬abÀ
(
__cûkπs_w‹kî
 *
w
);

126 
do_ªtu∫_‰om_•awn
 (
__cûkπs_w‹kî
 *
w
,

127 
fuŒ_‰ame
 *
ff
,

128 
__cûkπs_°ack_‰ame
 *
sf
);

129 
do_sync
 (
__cûkπs_w‹kî
 *
w
,

130 
fuŒ_‰ame
 *
ff
,

131 
__cûkπs_°ack_‰ame
 *
sf
);

133 #i‚de‡
_WIN32


135 
	#max
(
a
, 
b
Ë(◊Ë< (bË? (bË: (a))

	)

138 
	$__cûkπs_dump_°©s_to_°dîr
(
globÆ_°©e_t
 *
g
)

140 #ifde‡
CILK_PROFILE


141 
i
;

142 
i
 = 0; i < 
g
->
tŸÆ_w‹kîs
; ++i)

143 
	`__cûkπs_accum_°©s
(&
g
->
°©s
, &g->
w‹kîs
[
i
]->
l
->stats);

144 
	`dump_°©s_to_fûe
(
°dîr
, &
g
->
°©s
);

146 
	`Ârötf
(
°dîr
,

148 
g
->
P
,

149 
g
->
Q
);

150 
	`Ârötf
(
°dîr
,

152 ()
g
->
‰ame_mÆloc
.
Æloˇãd_‰om_os
);

153 #ifde‡
CILK_PROFILE


154 i‡(
g
->
°©s
.
°ack_hwm
)

155 
	`Ârötf
(
°dîr
, ", %ld sècks", 
g
->
°©s
.
°ack_hwm
);

157 
	`Âutc
('\n', 
°dîr
);

158 
	}
}

160 
	$vÆid©e_w‹kî
(
__cûkπs_w‹kî
 *
w
)

163 i‡(
w
->
l
->
w‹kî_magic_0
 !
WORKER_MAGIC_0
 ||

164 
w
->
l
->
w‹kî_magic_1
 !
WORKER_MAGIC_1
)

165 
	`ab‹t_beˇu£_πs_is_c‹ru±ed
();

166 
	}
}

168 
	$doubÀ_lök
(
fuŒ_‰ame
 *
À·_ff
, fuŒ_‰amê*
right_ff
)

170 i‡(
À·_ff
)

171 
À·_ff
->
right_siblög
 = 
right_ff
;

172 i‡(
right_ff
)

173 
right_ff
->
À·_siblög
 = 
À·_ff
;

174 
	}
}

177 
	$push_chûd
(
fuŒ_‰ame
 *
∑ª¡_ff
, fuŒ_‰amê*
chûd_ff
)

179 
	`doubÀ_lök
(
∑ª¡_ff
->
rightmo°_chûd
, 
chûd_ff
);

180 
	`doubÀ_lök
(
chûd_ff
, 0);

181 
∑ª¡_ff
->
rightmo°_chûd
 = 
chûd_ff
;

182 
	}
}

185 
	$u∆ök_chûd
(
fuŒ_‰ame
 *
∑ª¡_ff
, fuŒ_‰amê*
chûd_ff
)

187 
	`doubÀ_lök
(
chûd_ff
->
À·_siblög
, chûd_ff->
right_siblög
);

189 i‡(!
chûd_ff
->
right_siblög
) {

191 
	`CILK_ASSERT
(
∑ª¡_ff
->
rightmo°_chûd
 =
chûd_ff
);

192 
∑ª¡_ff
->
rightmo°_chûd
 = 
chûd_ff
->
À·_siblög
;

194 
chûd_ff
->
À·_siblög
 = chûd_ff->
right_siblög
 = 0;

195 
	}
}

197 
	$öcjoö
(
fuŒ_‰ame
 *
ff
)

199 ++
ff
->
joö_cou¡î
;

200 
	}
}

202 
	$decjoö
(
fuŒ_‰ame
 *
ff
)

204 
	`CILK_ASSERT
(
ff
->
joö_cou¡î
 > 0);

205  (--
ff
->
joö_cou¡î
);

206 
	}
}

216 c⁄° 
	gRNGMOD
 = ((1ULL << 32) - 5);

217 c⁄° 
	gRNGMUL
 = 69070U;

219 
	$myønd
(
__cûkπs_w‹kî
 *
w
)

221 
°©e
 = 
w
->
l
->
ønd_£ed
;

222 
°©e
 = ()((
RNGMUL
 * ()°©eË% 
RNGMOD
);

223 
w
->
l
->
ønd_£ed
 = 
°©e
;

224  
°©e
;

225 
	}
}

227 
	$my§™d
(
__cûkπs_w‹kî
 *
w
, 
£ed
)

229 
£ed
 %
RNGMOD
;

230 
£ed
 += (seed == 0);

232 
w
->
l
->
ønd_£ed
 = 
£ed
;

233 
	}
}

236 
	$__cûkπs_w‹kî_lock
(
__cûkπs_w‹kî
 *
w
)

238 
	`vÆid©e_w‹kî
(
w
);

239 
	`CILK_ASSERT
(
w
->
l
->
do_nŸ_°ól
 == 0);

242 
w
->
l
->
do_nŸ_°ól
 = 1;

243 
	`__cûkπs_„n˚
();

245 
	`__cûkπs_muãx_lock
(
w
, &w->
l
->
lock
);

246 
	}
}

248 
	$__cûkπs_w‹kî_u∆ock
(
__cûkπs_w‹kî
 *
w
)

250 
	`__cûkπs_muãx_u∆ock
(
w
, &w->
l
->
lock
);

251 
	`CILK_ASSERT
(
w
->
l
->
do_nŸ_°ól
 == 1);

255 #i‡
deföed
 
__GNUC__
 && (__GNUC__ * 10 + 
__GNUC_MINOR__
 > 43 || 
__ICC
 >= 1110)

256 
	`__sync_lock_ªÀa£
(&
w
->
l
->
do_nŸ_°ól
);

258 
w
->
l
->
do_nŸ_°ól
 = 0;

259 
	`__cûkπs_„n˚
();

261 
	}
}

264 
	$w‹kî_åylock_Ÿhî
(
__cûkπs_w‹kî
 *
w
,

265 
__cûkπs_w‹kî
 *
Ÿhî
)

267 
°©us
 = 0;

269 
	`vÆid©e_w‹kî
(
Ÿhî
);

281 i‡(
	`__cûkπs_muãx_åylock
(
w
, &
Ÿhî
->
l
->
°ól_lock
)) {

282 i‡(
Ÿhî
->
l
->
do_nŸ_°ól
) {

285 
°©us
 = 
	`__cûkπs_muãx_åylock
(
w
, &
Ÿhî
->
l
->
lock
);

287 
	`__cûkπs_muãx_u∆ock
(
w
, &
Ÿhî
->
l
->
°ól_lock
);

291  
°©us
;

292 
	}
}

294 
	$w‹kî_u∆ock_Ÿhî
(
__cûkπs_w‹kî
 *
w
,

295 
__cûkπs_w‹kî
 *
Ÿhî
)

297 
	`__cûkπs_muãx_u∆ock
(
w
, &
Ÿhî
->
l
->
lock
);

298 
	}
}

311 
	#BEGIN_WITH_WORKER_LOCK
(
w
Ë
	`__cûkπs_w‹kî_lock
(w); do

	)

312 
	#END_WITH_WORKER_LOCK
(
w
Ë
	`__cûkπs_w‹kî_u∆ock
(w), 0)

	)

320 #ifde‡
REMOVE_POSSIBLY_OPTIONAL_LOCKS


321 
	#BEGIN_WITH_WORKER_LOCK_OPTIONAL
(
w
Ëdo

	)

322 
	#END_WITH_WORKER_LOCK_OPTIONAL
(
w
Ë0)

	)

324 
	#BEGIN_WITH_WORKER_LOCK_OPTIONAL
(
w
Ë
	`__cûkπs_w‹kî_lock
(w); do

	)

325 
	#END_WITH_WORKER_LOCK_OPTIONAL
(
w
Ë
	`__cûkπs_w‹kî_u∆ock
(w), 0)

	)

329 
	#BEGIN_WITH_FRAME_LOCK
(
w
, 
ff
) \

330 dÿ{ 
fuŒ_‰ame
 *
_locked_ff
 = 
ff
; 
	`__cûkπs_‰ame_lock
(
w
, _locked_ff); do

	)

332 
	#END_WITH_FRAME_LOCK
(
w
, 
ff
) \

333 
	`__cûkπs_‰ame_u∆ock
(
w
, 
_locked_ff
), 0); } 0)

	)

336 
	$make_ru¬abÀ
(
__cûkπs_w‹kî
 *
w
, 
fuŒ_‰ame
 *
ff
)

338 
w
->
l
->
‰ame_ff
 = 
ff
;

341 
ff
->
ˇŒ_°ack
 = 0;

342 
	}
}

347 
	$make_uƒu¬abÀ
(
__cûkπs_w‹kî
 *
w
,

348 
fuŒ_‰ame
 *
ff
,

349 
__cûkπs_°ack_‰ame
 *
sf
,

350 
°©e_vÆid
,

351 c⁄° *
why
)

354 
ff
->
ˇŒ_°ack
 = 
sf
;

356 i‡(
sf
) {

357 #i‡
CILK_LIB_DEBUG


358 i‡(
	`__buûtö_ex≥˘
(
sf
->
Êags
 & 
CILK_FRAME_EXITING
, 0))

359 
	`__cûkπs_bug
("W%d su•ídögÉxôög fømê%p/%p\n", 
w
->
£lf
, 
ff
, 
sf
);

361 
sf
->
Êags
 |
CILK_FRAME_STOLEN
 | 
CILK_FRAME_SUSPENDED
;

362 
sf
->
w‹kî
 = 0;

364 i‡(
°©e_vÆid
)

365 
	`__cûkπs_put_°ack
(
ff
, 
sf
);

369 
	`__cûkπs_make_uƒu¬abÀ_sysdï
(
w
, 
ff
, 
sf
, 
°©e_vÆid
, 
why
);

371 
	}
}

382 
	$__cûkπs_push_√xt_‰ame
(
__cûkπs_w‹kî
 *
w
, 
fuŒ_‰ame
 *
ff
)

384 
	`CILK_ASSERT
(
ff
);

385 
	`CILK_ASSERT
(!
w
->
l
->
√xt_‰ame_ff
);

386 
	`öcjoö
(
ff
);

387 
w
->
l
->
√xt_‰ame_ff
 = 
ff
;

388 
	}
}

394 
fuŒ_‰ame
 *
	$p›_√xt_‰ame
(
__cûkπs_w‹kî
 *
w
)

396 
fuŒ_‰ame
 *
ff
;

397 
ff
 = 
w
->
l
->
√xt_‰ame_ff
;

410 i‡(
NULL
 !
ff
) {

411 
w
->
l
->
√xt_‰ame_ff
 = 
NULL
;

413  
ff
;

414 
	}
}

425 
	$£t_sync_ma°î
(
__cûkπs_w‹kî
 *
w
, 
fuŒ_‰ame
 *
ff
)

427 
w
->
l
->
œ°_fuŒ_‰ame
 = 
ff
;

428 
ff
->
sync_ma°î
 = 
w
;

429 
	}
}

440 
	$un£t_sync_ma°î
(
__cûkπs_w‹kî
 *
w
, 
fuŒ_‰ame
 *
ff
)

442 
	`CILK_ASSERT
(
WORKER_USER
 =
w
->
l
->
ty≥
);

443 
	`CILK_ASSERT
(
ff
->
sync_ma°î
 =
w
);

444 
ff
->
sync_ma°î
 = 
NULL
;

445 
w
->
l
->
œ°_fuŒ_‰ame
 = 
NULL
;

446 
	}
}

478 
	#EXC_INFINITY
 ((
__cûkπs_°ack_‰ame
 **Ë(-1))

	)

480 
	$ö¸emít_E
(
__cûkπs_w‹kî
 *
vi˘im
)

482 
__cûkπs_°ack_‰ame
 *vﬁ©ûê*
tmp
;

486 
	`ASSERT_WORKER_LOCK_OWNED
(
vi˘im
);

488 
tmp
 = 
vi˘im
->
exc
;

489 i‡(
tmp
 !
EXC_INFINITY
) {

493 
vi˘im
->
exc
 = 
tmp
 + 1;

494 
	`__cûkπs_„n˚
();

496 
	}
}

498 
	$de¸emít_E
(
__cûkπs_w‹kî
 *
vi˘im
)

500 
__cûkπs_°ack_‰ame
 *vﬁ©ûê*
tmp
;

504 
	`ASSERT_WORKER_LOCK_OWNED
(
vi˘im
);

506 
tmp
 = 
vi˘im
->
exc
;

507 i‡(
tmp
 !
EXC_INFINITY
) {

511 
vi˘im
->
exc
 = 
tmp
 - 1;

512 
	`__cûkπs_„n˚
();

514 
	}
}

518 
	$sig«l_THE_ex˚±i⁄
(
__cûkπs_w‹kî
 *
w∑ª¡
)

520 
w∑ª¡
->
exc
 = 
EXC_INFINITY
;

521 
	`__cûkπs_„n˚
();

522 
	}
}

525 
	$ª£t_THE_ex˚±i⁄
(
__cûkπs_w‹kî
 *
w
)

529 
	`ASSERT_WORKER_LOCK_OWNED
(
w
);

531 
w
->
exc
 = w->
hód
;

532 
	`__cûkπs_„n˚
();

533 
	}
}

537 
	$ˇn_°ól_‰om
(
__cûkπs_w‹kî
 *
vi˘im
)

539  ((
vi˘im
->
hód
 < vi˘im->
èû
) &&

540 (
vi˘im
->
hód
 < vi˘im->
¥Ÿe˘ed_èû
));

541 
	}
}

544 
	$dekkî_¥Ÿocﬁ
(
__cûkπs_w‹kî
 *
vi˘im
)

549 
	`ASSERT_WORKER_LOCK_OWNED
(
vi˘im
);

553 
	`ö¸emít_E
(
vi˘im
);

556 i‡(
	`ˇn_°ól_‰om
(
vi˘im
)) {

562 
	`de¸emít_E
(
vi˘im
);

565 
	}
}

568 
fuŒ_‰ame
 *
	$make_chûd
(
__cûkπs_w‹kî
 *
w
,

569 
fuŒ_‰ame
 *
∑ª¡_ff
,

570 
__cûkπs_°ack_‰ame
 *
chûd_sf
,

571 
__cûkπs_°ack
 *
sd
)

573 
fuŒ_‰ame
 *
chûd_ff
 = 
	`__cûkπs_make_fuŒ_‰ame
(
w
, 
chûd_sf
);

575 
chûd_ff
->
∑ª¡
 = 
∑ª¡_ff
;

576 
	`push_chûd
(
∑ª¡_ff
, 
chûd_ff
);

585 
	`CILK_ASSERT
(
∑ª¡_ff
->
ˇŒ_°ack
);

586 
chûd_ff
->
is_ˇŒ_chûd
 = (
sd
 =
NULL
);

591 i‡(
sd
 =
PLACEHOLDER_STACK
)

592 
sd
 = 
NULL
;

600 
chûd_ff
->
°ack_£lf
 = 
∑ª¡_ff
->stack_self;

601 
chûd_ff
->
sync_ma°î
 = 
NULL
;

603 i‡(
chûd_ff
->
is_ˇŒ_chûd
) {

606 
∑ª¡_ff
->
°ack_£lf
 = 0;

608 
∑ª¡_ff
->
°ack_£lf
 = 
sd
;

609 
	`__cûkπs_böd_°ack
(
∑ª¡_ff
,

610 
	`__cûkπs_°ack_to_poöãr
(
∑ª¡_ff
->
°ack_£lf
, 
chûd_sf
),

611 
chûd_ff
->
°ack_£lf
,

612 
chûd_ff
->
sync_ma°î
);

615 
	`öcjoö
(
∑ª¡_ff
);

616  
chûd_ff
;

617 
	}
}

619 
ölöe
 
__cûkπs_°ack_‰ame
 *
	$__cûkπs_adv™˚_‰ame
(
__cûkπs_°ack_‰ame
 *
sf
)

621 
__cûkπs_°ack_‰ame
 *
p
 = 
sf
->
ˇŒ_∑ª¡
;

622 
sf
->
ˇŒ_∑ª¡
 = 0;

623  
p
;

624 
	}
}

643 
fuŒ_‰ame
 *
	$uƒﬁl_ˇŒ_°ack
(
__cûkπs_w‹kî
 *
w
,

644 
fuŒ_‰ame
 *
ff
,

645 
__cûkπs_°ack_‰ame
 *c⁄° 
loŸ_sf
)

647 
__cûkπs_°ack_‰ame
 *
sf
 = 
loŸ_sf
;

648 
__cûkπs_°ack_‰ame
 *
ªv_sf
 = 0;

649 
__cûkπs_°ack_‰ame
 *
t_sf
;

651 
	`CILK_ASSERT
(
sf
);

655 i‡(
sf
->
w‹kî
 !
w
)

656 
sf
->
Êags
 |
CILK_FRAME_UNSYNCHED
;

662 
t_sf
 = (
sf
->
Êags
 & (
CILK_FRAME_DETACHED
|
CILK_FRAME_STOLEN
|
CILK_FRAME_LAST
))? 0 : sf->
ˇŒ_∑ª¡
;

663 
sf
->
ˇŒ_∑ª¡
 = 
ªv_sf
;

664 
ªv_sf
 = 
sf
;

665 
sf
 = 
t_sf
;

666 } 
sf
);

667 
sf
 = 
ªv_sf
;

671 
	`make_uƒu¬abÀ
(
w
, 
ff
, 
sf
, s‡=
loŸ_sf
, "steal 1");

673 
t_sf
 = 
	`__cûkπs_adv™˚_‰ame
(
sf
);Å_sf;

674 
sf
 = 
t_sf
,Å_s‡
	`__cûkπs_adv™˚_‰ame
(sf)) {

675 
ff
 = 
	`make_chûd
(
w
, ff, 
t_sf
, 
NULL
);

676 
	`make_uƒu¬abÀ
(
w
, 
ff
, 
t_sf
,Å_s‡=
loŸ_sf
, "steal 2");

683 
	`CILK_ASSERT
(!
sf
->
ˇŒ_∑ª¡
);

684  
ff
;

685 
	}
}

689 
	$dëach_f‹_°ól
(
__cûkπs_w‹kî
 *
w
,

690 
__cûkπs_w‹kî
 *
vi˘im
,

691 
__cûkπs_°ack
 *
sd
)

695 
fuŒ_‰ame
 *
∑ª¡_ff
, *
chûd_ff
, *
loŸ_ff
;

696 
__cûkπs_°ack_‰ame
 *vﬁ©ûê*
h
;

697 
__cûkπs_°ack_‰ame
 *
sf
;

699 
w
->
l
->
ãam
 = 
vi˘im
->l->team;

701 
	`CILK_ASSERT
(
w
->
l
->
‰ame_ff
 =0 || w =
vi˘im
);

703 
h
 = 
vi˘im
->
hód
;

705 
	`CILK_ASSERT
(*
h
);

707 
vi˘im
->
hód
 = 
h
 + 1;

709 
∑ª¡_ff
 = 
vi˘im
->
l
->
‰ame_ff
;

710 
	`BEGIN_WITH_FRAME_LOCK
(
w
, 
∑ª¡_ff
) {

712 
	`decjoö
(
∑ª¡_ff
);

715 
sf
 = *
h
;

724 
loŸ_ff
 = 
	`uƒﬁl_ˇŒ_°ack
(
w
, 
∑ª¡_ff
, 
sf
);

726 
	`Ârötf
(
°dîr
, "[W=%d, victim=%d, desc=detach,Öarent_ff=%p,Üoot=%p]\n",

727 
w
->
£lf
, 
vi˘im
->self,

728 
∑ª¡_ff
, 
loŸ_ff
);

729 #i‡
REDPAR_DEBUG
 >= 3

730 
	`Ârötf
(
°dîr
, "[W=%d, victim=%d, desc=detach,Öarent_ff=%p,Üoot=%p]\n",

731 
w
->
£lf
, 
vi˘im
->self,

732 
∑ª¡_ff
, 
loŸ_ff
);

735 i‡(
WORKER_USER
 =
vi˘im
->
l
->
ty≥
 &&

736 
NULL
 =
vi˘im
->
l
->
œ°_fuŒ_‰ame
) {

742 
	`£t_sync_ma°î
(
vi˘im
, 
loŸ_ff
);

749 i‡(
w
 =
vi˘im
) {

751 
loŸ_ff
->
ˇŒ_°ack
->
Êags
 |
CILK_FRAME_UNSYNCHED
;

752 
loŸ_ff
->
simuœãd_°ﬁí
 = 1;

755 
	`__cûkπs_push_√xt_‰ame
(
w
, 
loŸ_ff
);

758 
chûd_ff
 = 
	`make_chûd
(
w
, 
loŸ_ff
, 0, 
sd
);

760 
	`BEGIN_WITH_FRAME_LOCK
(
w
, 
chûd_ff
) {

764 
	`öcjoö
(
chûd_ff
);

776 
	`make_ru¬abÀ
(
vi˘im
, 
chûd_ff
);

777 } 
	`END_WITH_FRAME_LOCK
(
w
, 
chûd_ff
);

778 } 
	`END_WITH_FRAME_LOCK
(
w
, 
∑ª¡_ff
);

779 
	}
}

781 
	$øndom_°ól
(
__cûkπs_w‹kî
 *
w
)

783 
__cûkπs_w‹kî
 *
vi˘im
;

784 
__cûkπs_°ack
 *
sd
;

785 
n
;

786 
suc˚ss
 = 0;

790 
w
->
l
->
w‹k_°ﬁí
 = 0;

793 i‡(
	`__buûtö_ex≥˘
(
w
->
g
->
°ólög_dißbÀd
, 0))

796 
	`CILK_ASSERT
(
w
->
l
->
ty≥
 =
WORKER_SYSTEM
 || w->l->
ãam
 == w);

800 
	`CILK_ASSERT
(
w
->
g
->
tŸÆ_w‹kîs
 > 1);

803 
sd
 = 
	`__cûkπs_gë_°ack
(
w
);

804 i‡(
NULL
 =
sd
) {

809 
n
 = 
	`myønd
(
w
Ë% (w->
g
->
tŸÆ_w‹kîs
 - 1); i‡“ >w->
£lf
) ++n;

810 
vi˘im
 = 
w
->
g
->
w‹kîs
[
n
];

813 
	`CILK_ASSERT
 (
vi˘im
 !
w
);

817 i‡(!
	`ˇn_°ól_‰om
(
vi˘im
)) {

818 
	`NOTE_INTERVAL
(
w
, 
INTERVAL_STEAL_FAIL_EMPTYQ
);

819 
	`__cûkπs_ªÀa£_°ack
(
w
, 
sd
);

824 i‡(
	`w‹kî_åylock_Ÿhî
(
w
, 
vi˘im
)) {

825 i‡(
w
->
l
->
ty≥
 =
WORKER_USER
 && 
vi˘im
->l->
ãam
 != w) {

838 
	`NOTE_INTERVAL
(
w
, 
INTERVAL_STEAL_FAIL_USER_WORKER
);

840 } i‡(
vi˘im
->
l
->
‰ame_ff
) {

844 i‡(
	`dekkî_¥Ÿocﬁ
(
vi˘im
)) {

845 
	`START_INTERVAL
(
w
, 
INTERVAL_STEAL_SUCCESS
) {

846 
suc˚ss
 = 1;

847 
	`dëach_f‹_°ól
(
w
, 
vi˘im
, 
sd
);

848 #i‡
REDPAR_DEBUG
 >= 1

849 
	`Ârötf
(
°dîr
, "Wkr %d stole from victim %d, sd = %p\n",

850 
w
->
£lf
, 
vi˘im
->£lf, 
sd
);

857 
	`DBGPRINTF
 ("%d-%p: Stealing work from worker %d\n"

859 
w
->
£lf
, 
	`GëCuºítFibî
(), 
vi˘im
->self,

860 
w
->
l
->
√xt_‰ame_ff
->
ˇŒ_°ack
,

861 
w
->
l
->
√xt_‰ame_ff
->
ˇŒ_°ack
->
ˇŒ_∑ª¡
);

862 } 
	`STOP_INTERVAL
(
w
, 
INTERVAL_STEAL_SUCCESS
);

864 
	`NOTE_INTERVAL
(
w
, 
INTERVAL_STEAL_FAIL_DEKKER
);

867 
	`NOTE_INTERVAL
(
w
, 
INTERVAL_STEAL_FAIL_EMPTYQ
);

869 
	`w‹kî_u∆ock_Ÿhî
(
w
, 
vi˘im
);

871 
	`NOTE_INTERVAL
(
w
, 
INTERVAL_STEAL_FAIL_LOCK
);

876 
w
->
l
->
w‹k_°ﬁí
 = 
suc˚ss
;

878 i‡(0 =
suc˚ss
) {

880 
	`__cûkπs_ªÀa£_°ack
(
w
, 
sd
);

882 
	}
}

898 
ölöe
 
	$¥ovably_good_°ól_ªdu˚rs
(
__cûkπs_w‹kî
 *
w
,

899 
fuŒ_‰ame
 *
ff
)

902 
	}
}

906 
	$¥ovably_good_°ól_ex˚±i⁄s
(
__cûkπs_w‹kî
 *
w
,

907 
fuŒ_‰ame
 *
ff
)

910 
ff
->
≥ndög_ex˚±i⁄
 =

911 
	`__cûkπs_mîge_≥ndög_ex˚±i⁄s
(
w
,

912 
ff
->
chûd_≥ndög_ex˚±i⁄
,

913 
ff
->
≥ndög_ex˚±i⁄
);

914 
ff
->
chûd_≥ndög_ex˚±i⁄
 = 
NULL
;

915 
	}
}

918 
	$¥ovably_good_°ól_°acks
(
__cûkπs_w‹kî
 *
w
, 
fuŒ_‰ame
 *
ff
)

920 
__cûkπs_°ack
 *
s
;

921 
s
 = 
ff
->
°ack_£lf
;

922 
ff
->
°ack_£lf
 = ff->
°ack_chûd
;

923 
ff
->
°ack_chûd
 = 
NULL
;

924 i‡(
s
) {

925 
	`__cûkπs_ªÀa£_°ack
(
w
, 
s
);

930 
	`__cûkπs_böd_°ack
(
ff
, ff->
sync_•
, 
BIND_PROVABLY_GOOD_STACK
, 
NULL
);

931 
	}
}

933 
	$__cûkπs_m¨k_synched
(
fuŒ_‰ame
 *
ff
)

935 
ff
->
ˇŒ_°ack
->
Êags
 &~
CILK_FRAME_UNSYNCHED
;

936 
ff
->
simuœãd_°ﬁí
 = 0;

937 
	}
}

939 
	$¥ovably_good_°ól
(
__cûkπs_w‹kî
 *
w
, 
fuŒ_‰ame
 *
ff
)

943 
ab™d⁄ed
 = 1;

947 
	`START_INTERVAL
(
w
, 
INTERVAL_PROVABLY_GOOD_STEAL
) {

948 i‡(
	`decjoö
(
ff
) == 0) {

949 
	`¥ovably_good_°ól_ªdu˚rs
(
w
, 
ff
);

950 
	`¥ovably_good_°ól_ex˚±i⁄s
(
w
, 
ff
);

951 
	`¥ovably_good_°ól_°acks
(
w
, 
ff
);

952 
	`__cûkπs_m¨k_synched
(
ff
);

956 i‡(
NULL
 !
ff
->
sync_ma°î
) {

964 
	`un£t_sync_ma°î
(
w
->
l
->
ãam
, 
ff
);

965 
	`__cûkπs_push_√xt_‰ame
(
w
->
l
->
ãam
, 
ff
);

968 i‡(
w
 =w->
l
->
ãam
)

969 
ab™d⁄ed
 = 0;

971 
	`__cûkπs_push_√xt_‰ame
(
w
, 
ff
);

972 
ab™d⁄ed
 = 0;

979 } 
	`STOP_INTERVAL
(
w
, 
INTERVAL_PROVABLY_GOOD_STEAL
);

981  
ab™d⁄ed
;

982 
	}
}

984 
	$unc⁄dôi⁄Æ_°ól
(
__cûkπs_w‹kî
 *
w
,

985 
fuŒ_‰ame
 *
ff
)

989 
	`START_INTERVAL
(
w
, 
INTERVAL_UNCONDITIONAL_STEAL
) {

990 
	`decjoö
(
ff
);

991 
	`__cûkπs_push_√xt_‰ame
(
w
, 
ff
);

992 } 
	`STOP_INTERVAL
(
w
, 
INTERVAL_UNCONDITIONAL_STEAL
);

993 
	}
}

998 
ölöe
 
	$•li˚_ex˚±i⁄s_f‹_ˇŒ
(
__cûkπs_w‹kî
 *
w
,

999 
fuŒ_‰ame
 *
∑ª¡_ff
,

1000 
fuŒ_‰ame
 *
chûd_ff
)

1003 
	`CILK_ASSERT
(
chûd_ff
->
is_ˇŒ_chûd
);

1004 
	`CILK_ASSERT
(
NULL
 =
chûd_ff
->
right_≥ndög_ex˚±i⁄
);

1005 
	`CILK_ASSERT
(
NULL
 =
∑ª¡_ff
->
≥ndög_ex˚±i⁄
);

1007 
∑ª¡_ff
->
≥ndög_ex˚±i⁄
 = 
chûd_ff
->pending_exception;

1008 
chûd_ff
->
≥ndög_ex˚±i⁄
 = 
NULL
;

1009 
	}
}

1018 
ölöe


1019 
	$•li˚_ex˚±i⁄s_f‹_•awn
(
__cûkπs_w‹kî
 *
w
,

1020 
fuŒ_‰ame
 *
ff
,

1021 
≥ndög_ex˚±i⁄_öfo
 **
À·_ex˚±i⁄_±r
)

1028 *
À·_ex˚±i⁄_±r
 =

1029 
	`__cûkπs_mîge_≥ndög_ex˚±i⁄s
(
w
,

1030 *
À·_ex˚±i⁄_±r
,

1031 
ff
->
≥ndög_ex˚±i⁄
);

1032 
ff
->
≥ndög_ex˚±i⁄
 = 
NULL
;

1037 *
À·_ex˚±i⁄_±r
 =

1038 
	`__cûkπs_mîge_≥ndög_ex˚±i⁄s
(
w
,

1039 *
À·_ex˚±i⁄_±r
,

1040 
ff
->
right_≥ndög_ex˚±i⁄
);

1041 
ff
->
right_≥ndög_ex˚±i⁄
 = 
NULL
;

1042 
	}
}

1045 
ölöe
 
	$•li˚_°acks_f‹_ˇŒ
(
__cûkπs_w‹kî
 *
w
,

1046 
fuŒ_‰ame
 *
∑ª¡_ff
,

1047 
fuŒ_‰ame
 *
chûd_ff
)

1049 #i‡
CILK_LIB_DEBUG


1050 i‡(
∑ª¡_ff
->
ˇŒ_°ack
)

1051 
	`CILK_ASSERT
(!(
∑ª¡_ff
->
ˇŒ_°ack
->
Êags
 & 
CILK_FRAME_MBZ
));

1055 
	`CILK_ASSERT
(!
chûd_ff
->
°ack_chûd
);

1056 
	`CILK_ASSERT
(
chûd_ff
->
is_ˇŒ_chûd
);

1061 #i‚de‡
CILK_IVARS


1062 
	`CILK_ASSERT
(!
∑ª¡_ff
->
°ack_£lf
);

1064 
∑ª¡_ff
->
°ack_£lf
 = 
chûd_ff
->stack_self;

1065 
chûd_ff
->
°ack_£lf
 = 
NULL
;

1066 
	}
}

1068 
	$föÆize_chûd_f‹_ˇŒ
(
__cûkπs_w‹kî
 *
w
,

1069 
fuŒ_‰ame
 *
∑ª¡_ff
,

1070 
fuŒ_‰ame
 *
chûd_ff
)

1074 
	`START_INTERVAL
(
w
, 
INTERVAL_FINALIZE_CHILD
) {

1075 
	`CILK_ASSERT
(
chûd_ff
->
is_ˇŒ_chûd
);

1076 
	`CILK_ASSERT
(
chûd_ff
->
joö_cou¡î
 == 0);

1077 
	`CILK_ASSERT
(!
chûd_ff
->
rightmo°_chûd
);

1078 
	`CILK_ASSERT
(
chûd_ff
 =
∑ª¡_ff
->
rightmo°_chûd
);

1086 
	`CILK_ASSERT
(
NULL
 =
chûd_ff
->
chûdªn_ªdu˚r_m≠
);

1087 
	`CILK_ASSERT
(
NULL
 =
chûd_ff
->
right_ªdu˚r_m≠
);

1089 
	`•li˚_ex˚±i⁄s_f‹_ˇŒ
(
w
, 
∑ª¡_ff
, 
chûd_ff
);

1091 
	`•li˚_°acks_f‹_ˇŒ
(
w
, 
∑ª¡_ff
, 
chûd_ff
);

1094 
	`u∆ök_chûd
(
∑ª¡_ff
, 
chûd_ff
);

1097 
	`unc⁄dôi⁄Æ_°ól
(
w
, 
∑ª¡_ff
);

1098 
	`__cûkπs_de°roy_fuŒ_‰ame
(
w
, 
chûd_ff
);

1099 } 
	`STOP_INTERVAL
(
w
, 
INTERVAL_FINALIZE_CHILD
);

1100 
	}
}

1138 
	$£tup_f‹_executi⁄_ªdu˚rs
(
__cûkπs_w‹kî
 *
w
,

1139 
fuŒ_‰ame
 *
ff
)

1145 
__cûkπs_°ack_‰ame
 *
sf
 = 
ff
->
ˇŒ_°ack
;

1146 #ifde‡
CILK_IVARS


1148 i‡(!(
sf
->
Êags
 & 
CILK_FRAME_UNSYNCHED
Ë&& ! (sf->Êag†& 
CILK_FRAME_SELF_STEAL
)) {

1150 i‡(!(
sf
->
Êags
 & 
CILK_FRAME_UNSYNCHED
)) {

1153 
	`CILK_ASSERT
(!
ff
->
rightmo°_chûd
);

1159 i‡(
ff
->
chûdªn_ªdu˚r_m≠
) {

1161 
	`CILK_ASSERT
(!
w
->
ªdu˚r_m≠
);

1162 
w
->
ªdu˚r_m≠
 = 
ff
->
chûdªn_ªdu˚r_m≠
;

1163 
ff
->
chûdªn_ªdu˚r_m≠
 = 
NULL
;

1166 
	}
}

1168 
	$£tup_f‹_executi⁄_ex˚±i⁄s
(
__cûkπs_w‹kî
 *
w
,

1169 
fuŒ_‰ame
 *
ff
)

1171 
	`CILK_ASSERT
(
NULL
 =
w
->
l
->
≥ndög_ex˚±i⁄
);

1172 
w
->
l
->
≥ndög_ex˚±i⁄
 = 
ff
->pending_exception;

1173 
ff
->
≥ndög_ex˚±i⁄
 = 
NULL
;

1174 
	}
}

1177 
	$£tup_f‹_executi⁄_°ack
(
__cûkπs_w‹kî
 *
w
,

1178 
fuŒ_‰ame
 *
ff
)

1180 
	}
}

1190 
	$£tup_f‹_executi⁄_≥digªe
(
__cûkπs_w‹kî
 *
w
)

1192 
≥digªe_unsynched
;

1193 
__cûkπs_°ack_‰ame
 *
sf
 = 
w
->
cuºít_°ack_‰ame
;

1195 
	`CILK_ASSERT
(
NULL
 !
sf
);

1198 i‡(0 =
	`CILK_FRAME_VERSION_VALUE
(
sf
->
Êags
))

1203 
≥digªe_unsynched
 = 
sf
->
Êags
 & 
CILK_FRAME_SF_PEDIGREE_UNSYNCHED
;

1204 
sf
->
Êags
 &~
CILK_FRAME_SF_PEDIGREE_UNSYNCHED
;

1208 i‡(
w
->
l
->
w‹k_°ﬁí
 || 
≥digªe_unsynched
)

1210 i‡(
w
->
l
->
w‹k_°ﬁí
)

1211 
w
->
≥digªe
.
ønk
 = 
sf
->
∑ª¡_≥digªe
.rank + 1;

1213 
w
->
≥digªe
.
ønk
 = 
sf
->
∑ª¡_≥digªe
.rank;

1216 
w
->
≥digªe
.
∑ª¡
 = 
sf
->
∑ª¡_≥digªe
.parent;

1217 
w
->
l
->
w‹k_°ﬁí
 = 0;

1218 
	}
}

1220 
	$£tup_f‹_executi⁄
(
__cûkπs_w‹kî
 *
w
,

1221 
fuŒ_‰ame
 *
ff
,

1222 
is_ªtu∫_‰om_ˇŒ
)

1226 
	`£tup_f‹_executi⁄_ªdu˚rs
(
w
, 
ff
);

1227 
	`£tup_f‹_executi⁄_ex˚±i⁄s
(
w
, 
ff
);

1230 
ff
->
ˇŒ_°ack
->
w‹kî
 = 
w
;

1231 
w
->
cuºít_°ack_‰ame
 = 
ff
->
ˇŒ_°ack
;

1234 i‡(! 
is_ªtu∫_‰om_ˇŒ
)

1235 
	`£tup_f‹_executi⁄_≥digªe
(
w
);

1237 
	`__cûkπs_£tup_f‹_executi⁄_sysdï
(
w
, 
ff
);

1239 
w
->
hód
 = w->
èû
 = w->
l
->
…q
;

1240 
	`ª£t_THE_ex˚±i⁄
(
w
);

1242 
	`make_ru¬abÀ
(
w
, 
ff
);

1243 
	}
}

1251 
NORETURN
 
	$l⁄gjmp_öto_ru¡ime
(
__cûkπs_w‹kî
 *
w
,

1252 
schedulög_°ack_f˙_t
 
f˙
,

1253 
__cûkπs_°ack_‰ame
 *
sf
)

1255 
fuŒ_‰ame
 *
ff
, *
ff2
;

1257 
	`CILK_ASSERT
(!
w
->
l
->
po°_su•íd
);

1258 
ff
 = 
w
->
l
->
‰ame_ff
;

1265 #ifde‡
CILK_IVARS


1266 i‡(1 =
w
->
g
->
P
 && w->
c⁄cuºít_w‹kî_°©e
 =
CILK_WORKER_UNBLOCKED
) {

1268 i‡(1 =
w
->
g
->
P
) {

1270 
	`f˙
(
w
, 
ff
, 
sf
);

1276 
ff2
 = 
	`p›_√xt_‰ame
(
w
);

1278 
	`£tup_f‹_executi⁄
(
w
, 
ff2
, 0);

1279 
	`__cûkπs_ªsume
(
w
, 
ff2
, w->
cuºít_°ack_‰ame
);

1280 
	`CILK_ASSERT
(("returned from __cilkrts_resume", 0));

1283 
w
->
l
->
po°_su•íd
 = 
f˙
;

1284 
w
->
l
->
su•íded_°ack
 = 
sf
;

1286 
	`ITT_SYNC_RELEASING
(
w
);

1287 
	`ITT_SYNC_PREPARE
(
w
);

1293 i‡((
WORKER_USER
 =
w
->
l
->
ty≥
Ë&& (0 =w->l->
u£r_thªad_imp‹ãd
))

1296 
w
->
l
->
u£r_thªad_imp‹ãd
 = 1;

1297 
	`__cûkπs_sysdï_imp‹t_u£r_thªad
(
w
);

1298 
	`CILK_ASSERT
(0);

1302 #i‚de‡
_WIN32


1305 
	`l⁄gjmp
(
w
->
l
->
ív
, 1);

1307 
	`DBGPRINTF
 ("%d-%p:Üongjmp_into_runtime - "

1310 
w
->
£lf
, 
	`GëW‹kîFibî
(w), w->
sysdï
->
schedulög_fibî
,

1311 
f˙
, 
sf
);

1312 #ifde‡
_DEBUG


1313 
	`SëW‹kîThªadName
(
w
, 
NULL
);

1315 
	`SwôchToFibî
(
w
->
sysdï
->
schedulög_fibî
);

1324 
	`__cûkπs_ªsume_a·î_l⁄gjmp_öto_ru¡ime
();

1326 
	}
}

1331 
	$nŸify_chûdªn
(
__cûkπs_w‹kî
 *
w
, 
msg
)

1333 
chûd_num
;

1334 
__cûkπs_w‹kî
 *
chûd
;

1335 
num_sys_w‹kîs
 = 
w
->
g
->
P
 - 1;

1338 
chûd_num
 = (
w
->
£lf
 << 1) + 1;

1339 i‡(
chûd_num
 < 
num_sys_w‹kîs
) {

1340 
chûd
 = 
w
->
g
->
w‹kîs
[
chûd_num
];

1341 
	`CILK_ASSERT
(
chûd
->
l
->
sig«l_node
);

1342 
	`sig«l_node_msg
(
chûd
->
l
->
sig«l_node
, 
msg
);

1343 
chûd_num
++;

1344 i‡(
chûd_num
 < 
num_sys_w‹kîs
) {

1345 
chûd
 = 
w
->
g
->
w‹kîs
[
chûd_num
];

1346 
	`CILK_ASSERT
(
chûd
->
l
->
sig«l_node
);

1347 
	`sig«l_node_msg
(
chûd
->
l
->
sig«l_node
, 
msg
);

1350 
	}
}

1355 
	$nŸify_chûdªn_waô
(
__cûkπs_w‹kî
 *
w
)

1357 
	`nŸify_chûdªn
(
w
, 0);

1358 
	}
}

1363 
	$nŸify_chûdªn_run
(
__cûkπs_w‹kî
 *
w
)

1365 
	`nŸify_chûdªn
(
w
, 1);

1366 
	}
}

1373 
	$do_w‹k
(
__cûkπs_w‹kî
 *
w
, 
fuŒ_‰ame
 *
ff
)

1375 
__cûkπs_°ack_‰ame
 *
sf
;

1376 vﬁ©ûê
ªgs_ª°‹ed
 = 0;

1378 #i‚de‡
_WIN32


1379 
	`cûkbug_as£π_no_unˇught_ex˚±i⁄
();

1382 
	`BEGIN_WITH_WORKER_LOCK
(
w
) {

1383 
	`CILK_ASSERT
(!
w
->
l
->
‰ame_ff
);

1384 
	`BEGIN_WITH_FRAME_LOCK
(
w
, 
ff
) {

1385 
sf
 = 
ff
->
ˇŒ_°ack
;

1386 #i‚de‡
CILK_IVARS


1387 
	`CILK_ASSERT
(
sf
 && !sf->
ˇŒ_∑ª¡
);

1389 
	`£tup_f‹_executi⁄
(
w
, 
ff
, 0);

1390 } 
	`END_WITH_FRAME_LOCK
(
w
, 
ff
);

1391 } 
	`END_WITH_WORKER_LOCK
(
w
);

1393 #i‡
CILK_LIB_DEBUG


1394 i‡(!(
sf
->
Êags
 & 
CILK_FRAME_UNSYNCHED
))

1395 
	`CILK_ASSERT
(!
ff
->
°ack_chûd
);

1396 i‡(
sf
->
Êags
 & 
CILK_FRAME_EXITING
) {

1397 
	`__cûkπs_bug
("W%d:Ñesuming frame %p/%p suspended inÉxit\n",

1398 
w
->
£lf
, 
ff
, 
sf
);

1403 i‡(
	`£tjmp
(
w
->
l
->
ív
) == 0) {

1404 
	`__cûkπs_ªsume
(
w
, 
ff
, 
sf
);

1407 
	`CILK_ASSERT
(0);

1422 
	`¥ötf
("hey! my continuation got called. inÜongejumpedáfterÑesume\n");

1423 
	`run_schedulög_°ack_f˙
(
w
);

1428 
w
->
ªdu˚r_m≠
 = 0;

1430 #i‚de‡
_WIN32


1431 
	`cûkbug_as£π_no_unˇught_ex˚±i⁄
();

1433 
	}
}

1435 #ifde‡
CILK_IVARS


1437 
	$£lf_°ól
(
__cûkπs_w‹kî
 *
w
)

1439 
fuŒ_‰ame
 *
chûd_ff
, *
∑ª¡_ff
 = 
w
->
∑u£d_ff
;

1440 
__cûkπs_°ack_‰ame
 *
sf
;

1441 
__cûkπs_°ack
 *
sd
;

1442 *
•
;

1444 
	`if_f
(!
	`ˇn_°ól_‰om
(
w
)) ;

1446 
	`CILK_ASSERT
(
w
->
l
->
‰ame_ff
 == 0);

1448 
sd
 = 
	`__cûkπs_gë_°ack
(
w
);

1449 
	`if_f
(
NULL
 =
sd
) ;

1451 
sf
 = 
	`__cûkπs_p›_èû
(
w
);

1452 
	`if_f
(
NULL
 =
sf
) ;

1454 
sf
->
Êags
 |
CILK_FRAME_SF_PEDIGREE_UNSYNCHED
;

1455 
chûd_ff
 = 
	`__cûkπs_make_fuŒ_‰ame
(
w
, 
sf
);

1456 
chûd_ff
->
∑ª¡
 = 
∑ª¡_ff
;

1457 
chûd_ff
->
°ack_£lf
 = 
sd
;

1458 
chûd_ff
->
sync_ma°î
 = 
w
;

1459 
chûd_ff
->
is_ˇŒ_chûd
 = 0;

1461 
∑ª¡_ff
->
ˇŒ_°ack
->
Êags
 |
CILK_FRAME_STOLEN
;

1462 
	`push_chûd
(
∑ª¡_ff
, 
chûd_ff
);

1463 
•
 = 
	`__cûkπs_°ack_to_poöãr
(
sd
, 
sf
);

1466 
	`__cûkπs_böd_°ack
(
chûd_ff
, 
•
, 
NULL
, NULL);

1468 
sf
->
Êags
 |
CILK_FRAME_SELF_STEAL
;

1469 
sf
->
ˇŒ_∑ª¡
 = 
∑ª¡_ff
->
ˇŒ_°ack
;

1470 
	`make_uƒu¬abÀ
(
w
, 
chûd_ff
, 
sf
, 1, "self_steal");

1471 
sf
->
Êags
 &~
CILK_FRAME_STOLEN
;

1472 
	`__cûkπs_push_√xt_‰ame
(
w
,
chûd_ff
);

1473 
	}
}

1479 
	$scheduÀ_w‹k
(
__cûkπs_w‹kî
 *
w
)

1481 
fuŒ_‰ame
 *
ff
;

1484 
ff
 = 
	`p›_√xt_‰ame
(
w
);

1487 i‡(
NULL
 =
ff
) {

1495 
	`START_INTERVAL
(
w
, 
INTERVAL_STEALING
) {

1496 i‡(
w
->
l
->
ty≥
 !
WORKER_USER
 && w->l->
ãam
 !
NULL
) {

1500 
	`__cûkπs_w‹kî_lock
(
w
);

1501 
w
->
l
->
ãam
 = 
NULL
;

1502 
	`__cûkπs_w‹kî_u∆ock
(
w
);

1505 #ifde‡
CILK_IVARS


1506 if(
	`ˇn_°ól_‰om
(
w
)) {

1507 
	`£lf_°ól
(
w
);

1509 
	`øndom_°ól
(
w
);

1512 
	`øndom_°ól
(
w
);

1515 } 
	`STOP_INTERVAL
(
w
, 
INTERVAL_STEALING
);

1519 
ff
 = 
	`p›_√xt_‰ame
(
w
);

1520 i‡(
NULL
 =
ff
) {

1523 
	`__cûkπs_yõld
();

1524 
w
->
l
->
°ól_Áûuª_cou¡
++;

1529 
w
->
l
->
°ól_Áûuª_cou¡
 = 0;

1532 
	`CILK_ASSERT
(
ff
);

1535 
	`START_INTERVAL
(
w
, 
INTERVAL_WORKING
) {

1536 
	`do_w‹k
(
w
, 
ff
);

1537 
	`ITT_SYNC_SET_NAME_AND_PREPARE
(
w
, w->
l
->
sync_ªtu∫_addªss
);

1538 } 
	`STOP_INTERVAL
(
w
, 
INTERVAL_WORKING
);

1539 
	}
}

1541 
	$__cûkπs_scheduÀr
(
__cûkπs_w‹kî
 *
w
)

1543 
	`ITT_SYNC_PREPARE
(
w
);

1545 
	`START_INTERVAL
(
w
, 
INTERVAL_IN_SCHEDULER
) {

1549 
	`__cûkπs_£t_és_w‹kî
(
w
);

1554 i‡(! 
w
->
g
->
undî_±oﬁ
)

1555 
	`__cûkπs_cûks¸ìn_e°ablish_w‹kî
(
w
);

1557 
	`my§™d
(
w
, (w->
£lf
 + 1));

1559 i‡(
WORKER_SYSTEM
 =
w
->
l
->
ty≥
) {

1562 
	`sig«l_node_waô
(
w
->
l
->
sig«l_node
);

1565 
	`nŸify_chûdªn_run
(
w
);

1566 
w
->
l
->
°ól_Áûuª_cou¡
 = 0;

1569 !
w
->
g
->
w‹k_d⁄e
) {

1571 
	`w‹kî_ru¬abÀ
(
w
))

1573 
SCHEDULE_RUN
:

1574 
	`scheduÀ_w‹k
(
w
);

1577 
SCHEDULE_WAIT
:

1578 
	`CILK_ASSERT
(
WORKER_SYSTEM
 =
w
->
l
->
ty≥
);

1579 
	`nŸify_chûdªn_waô
(
w
);

1580 
	`sig«l_node_waô
(
w
->
l
->
sig«l_node
);

1583 
	`nŸify_chûdªn_run
(
w
);

1584 
w
->
l
->
°ól_Áûuª_cou¡
 = 0;

1587 
SCHEDULE_EXIT
:

1588 
	`CILK_ASSERT
(
WORKER_USER
 !
w
->
l
->
ty≥
);

1592 
	`CILK_ASSERT
(0);

1593 
	`ab‹t
();

1598 } 
	`STOP_INTERVAL
(
w
, 
INTERVAL_IN_SCHEDULER
);

1600 
	`CILK_ASSERT
(
WORKER_SYSTEM
 =
w
->
l
->
ty≥
);

1601 
	}
}

1608 
__cûkπs_w‹kî
*

1609 
execuã_ªdu˘i⁄s_f‹_sync
(
__cûkπs_w‹kî
 *
w
,

1610 
fuŒ_‰ame
 *
ff
,

1611 
__cûkπs_°ack_‰ame
 *
sf_©_sync
);

1613 
__cûkπs_w‹kî
*

1614 
execuã_ªdu˘i⁄s_f‹_•awn_ªtu∫
(
__cûkπs_w‹kî
 *
w
,

1615 
fuŒ_‰ame
 *
ff
,

1616 
__cûkπs_°ack_‰ame
 *
ªtu∫ög_sf
);

1623 
fuŒ_‰ame
 *
	$disown
(
__cûkπs_w‹kî
 *
w
,

1624 
fuŒ_‰ame
 *
ff
,

1625 
__cûkπs_°ack_‰ame
 *
sf
,

1626 c⁄° *
why
)

1628 
	`CILK_ASSERT
(
ff
);

1629 
	`make_uƒu¬abÀ
(
w
, 
ff
, 
sf
, s‡!0, 
why
);

1630 
w
->
l
->
‰ame_ff
 = 0;

1631  
ff
->
∑ª¡
;

1632 
	}
}

1661 
ölöe


1662 
	$ª°‹e_‰ame_f‹_•awn_ªtu∫_ªdu˘i⁄
(
__cûkπs_w‹kî
 *
w
,

1663 
fuŒ_‰ame
 *
ff
,

1664 
__cûkπs_°ack_‰ame
 *
ªtu∫ög_sf
) {

1665 #i‡
REDPAR_DEBUG
 >= 2

1666 
	`CILK_ASSERT
(
ªtu∫ög_sf
);

1667 
	`CILK_ASSERT
(
ªtu∫ög_sf
->
w‹kî
 =
w
);

1683 
w
->
cuºít_°ack_‰ame
 = 
ªtu∫ög_sf
;

1687 
	`make_ru¬abÀ
(
w
, 
ff
);

1688 
	}
}

1691 
NORETURN
 
	$__cûkπs_c_sync
(
__cûkπs_w‹kî
 *
w
,

1692 
__cûkπs_°ack_‰ame
 *
sf_©_sync
)

1694 
fuŒ_‰ame
 *
ff
;

1701 
ff
 = 
w
->
l
->
‰ame_ff
;

1702 #ifde‡
_WIN32


1703 
	`__cûkπs_ßve_ex˚±i⁄_°©e
(
w
, 
ff
);

1706 
	`CILK_ASSERT
(
NULL
 =
ff
->
≥ndög_ex˚±i⁄
);

1707 
ff
->
≥ndög_ex˚±i⁄
 = 
w
->
l
->pending_exception;

1708 
w
->
l
->
≥ndög_ex˚±i⁄
 = 
NULL
;

1711 
w
 = 
	`execuã_ªdu˘i⁄s_f‹_sync
(w, 
ff
, 
sf_©_sync
);

1713 
	`l⁄gjmp_öto_ru¡ime
(
w
, 
do_sync
, 
sf_©_sync
);

1714 
	}
}

1716 
	$do_sync
(
__cûkπs_w‹kî
 *
w
, 
fuŒ_‰ame
 *
ff
,

1717 
__cûkπs_°ack_‰ame
 *
sf
)

1719 
ab™d⁄ed
 = 1;

1720 
	`START_INTERVAL
(
w
, 
INTERVAL_SYNC_CHECK
) {

1721 
	`BEGIN_WITH_WORKER_LOCK_OPTIONAL
(
w
) {

1722 
ff
 = 
w
->
l
->
‰ame_ff
;

1723 
w
->
l
->
‰ame_ff
 = 
NULL
;

1729 
	`CILK_ASSERT
(
ff
);

1730 
	`BEGIN_WITH_FRAME_LOCK
(
w
, 
ff
) {

1731 
	`CILK_ASSERT
(
sf
->
ˇŒ_∑ª¡
 == 0);

1732 
	`CILK_ASSERT
(
sf
->
Êags
 & 
CILK_FRAME_UNSYNCHED
);

1737 
	`CILK_ASSERT
(
ff
->
°ack_£lf
 || ff->
simuœãd_°ﬁí
);

1741 
	`__cûkπs_övoke_°ack_›
(
w
, 
CILK_TBB_STACK_ORPHAN
, 
ff
->
°ack_£lf
);

1744 
__cûkπs_°ack
 *
s
 = 
ff
->
°ack_£lf
;

1745 
ff
->
°ack_£lf
 = 
NULL
;

1746 
	`__cûkπs_ªÀa£_°ack
(
w
, 
s
);

1751 i‡(
	`CILK_FRAME_VERSION_VALUE
(
sf
->
Êags
) >= 1)

1753 
sf
->
∑ª¡_≥digªe
.
ønk
 = 
w
->
≥digªe
.rank;

1754 
sf
->
∑ª¡_≥digªe
.
∑ª¡
 = 
w
->
≥digªe
.parent;

1758 
sf
->
Êags
 |
CILK_FRAME_SF_PEDIGREE_UNSYNCHED
;

1762 
ab™d⁄ed
 = 
	`¥ovably_good_°ól
(
w
, 
ff
);

1764 } 
	`END_WITH_FRAME_LOCK
(
w
, 
ff
);

1765 } 
	`END_WITH_WORKER_LOCK_OPTIONAL
(
w
);

1766 } 
	`STOP_INTERVAL
(
w
, 
INTERVAL_SYNC_CHECK
);

1768 #ifde‡
ENABLE_NOTIFY_ZC_INTRINSIC


1771 i‡(
ab™d⁄ed
)

1773 
	`__nŸify_zc_öåösic
("cilk_sync_abandon", 0);

1778 
	}
}

1784 
	$__cûkπs_¥omŸe_own_deque
(
__cûkπs_w‹kî
 *
w
)

1786 
	`BEGIN_WITH_WORKER_LOCK
(
w
) {

1787 
	`dekkî_¥Ÿocﬁ
(
w
)) {

1791 
	`dëach_f‹_°ól
(
w
, w, 
PLACEHOLDER_STACK
);

1794 } 
	`END_WITH_WORKER_LOCK
(
w
);

1795 
	}
}

1807 
	$__cûkπs_c_THE_ex˚±i⁄_check
(
__cûkπs_w‹kî
 *
w
,

1808 
__cûkπs_°ack_‰ame
 *
ªtu∫ög_sf
)

1810 
fuŒ_‰ame
 *
ff
;

1811 
°ﬁí_p
;

1812 
__cûkπs_°ack_‰ame
 *
ßved_sf
 = 
NULL
;

1813 
	`START_INTERVAL
(
w
, 
INTERVAL_THE_EXCEPTION_CHECK
);

1815 
	`BEGIN_WITH_WORKER_LOCK
(
w
) {

1816 
ff
 = 
w
->
l
->
‰ame_ff
;

1817 
	`CILK_ASSERT
(
ff
);

1821 
	`CILK_ASSERT
(!
w
->
l
->
≥ndög_ex˚±i⁄
);

1823 
	`ª£t_THE_ex˚±i⁄
(
w
);

1824 
°ﬁí_p
 = !(
w
->
hód
 < (w->
èû
 + 1));

1829 i‡(
°ﬁí_p
) {

1831 
	`__cûkπs_ßve_ex˚±i⁄_°©e
(
w
, 
ff
);

1834 
ßved_sf
 = 
w
->
cuºít_°ack_‰ame
;

1843 
w
->
èû
++;

1844 #i‡
REDPAR_DEBUG
 > 1

1846 
	`CILK_ASSERT
(
w
->
hód
 =w->
èû
);

1849 } 
	`END_WITH_WORKER_LOCK
(
w
);

1851 
	`STOP_INTERVAL
(
w
, 
INTERVAL_THE_EXCEPTION_CHECK
);

1854 i‡(
°ﬁí_p
)

1856 
w
 = 
	`execuã_ªdu˘i⁄s_f‹_•awn_ªtu∫
(w, 
ff
, 
ªtu∫ög_sf
);

1860 
	`upd©e_≥digªe_⁄_Àave_‰ame
(
w
, 
ªtu∫ög_sf
);

1862 #ifde‡
ENABLE_NOTIFY_ZC_INTRINSIC


1866 
	`__nŸify_zc_öåösic
("cûk_Àave_°ﬁí", 
ßved_sf
);

1869 
	`DBGPRINTF
 ("%d-%p:Ü⁄gjmp_öto_ru¡imê‰om __cûkπs_c_THE_ex˚±i⁄_check\n", 
w
->
£lf
, 
	`GëW‹kîFibî
(w));

1870 
	`l⁄gjmp_öto_ru¡ime
(
w
, 
do_ªtu∫_‰om_•awn
, 0);

1871 
	`DBGPRINTF
 ("%d-%p:Ñëu∫ed fromÜ⁄gjmp_öto_ru¡imê‰om __cûkπs_c_THE_ex˚±i⁄_check?!\n", 
w
->
£lf
, 
	`GëW‹kîFibî
(w));

1875 
	`NOTE_INTERVAL
(
w
, 
INTERVAL_THE_EXCEPTION_CHECK_USELESS
);

1878 
	}
}

1881 
NORETURN
 
	$__cûkπs_ex˚±i⁄_‰om_•awn
(
__cûkπs_w‹kî
 *
w
,

1882 
__cûkπs_°ack_‰ame
 *
ªtu∫ög_sf
)

1884 
fuŒ_‰ame
 *
ff
 = 
w
->
l
->
‰ame_ff
;

1888 
	`CILK_ASSERT
(
w
->
hód
 =w->
èû
);

1889 
w
 = 
	`execuã_ªdu˘i⁄s_f‹_•awn_ªtu∫
(w, 
ff
, 
ªtu∫ög_sf
);

1891 
	`l⁄gjmp_öto_ru¡ime
(
w
, 
do_ªtu∫_‰om_•awn
, 0);

1892 
	`CILK_ASSERT
(0);

1893 
	}
}

1895 
	$do_ªtu∫_‰om_•awn
(
__cûkπs_w‹kî
 *
w
,

1896 
fuŒ_‰ame
 *
ff
,

1897 
__cûkπs_°ack_‰ame
 *
sf
)

1899 
fuŒ_‰ame
 *
∑ª¡_ff
;

1900 
	`BEGIN_WITH_WORKER_LOCK_OPTIONAL
(
w
) {

1901 
	`CILK_ASSERT
(
ff
);

1902 
	`CILK_ASSERT
(!
ff
->
is_ˇŒ_chûd
);

1903 
	`CILK_ASSERT
(
ff
 =
w
->
l
->
‰ame_ff
);

1904 
	`CILK_ASSERT
(
sf
 =
NULL
);

1905 
∑ª¡_ff
 = 
ff
->
∑ª¡
;

1908 
	`BEGIN_WITH_FRAME_LOCK
(
w
, 
ff
) {

1909 if–
ff
->
°ack_£lf
 )

1913 
	`__cûkπs_övoke_°ack_›
(
w
, 
CILK_TBB_STACK_ORPHAN
,

1914 
ff
->
°ack_£lf
);

1916 
	`decjoö
(
ff
);

1917 } 
	`END_WITH_FRAME_LOCK
(
w
, 
ff
);

1919 
	`BEGIN_WITH_FRAME_LOCK
(
w
, 
∑ª¡_ff
) {

1920 
__cûkπs_°ack
* 
°ack_to_‰ì
 = 
w
->
l
->stack_to_free;

1921 
w
->
l
->
°ack_to_‰ì
 = 
NULL
;

1922 
w
->
l
->
‰ame_ff
 = 
NULL
;

1924 i‡(
°ack_to_‰ì
) {

1925 
	`__cûkπs_ªÀa£_°ack
(
w
, 
°ack_to_‰ì
);

1927 
ff
->
°ack_£lf
 = 
NULL
;

1929 i‡(
∑ª¡_ff
->
simuœãd_°ﬁí
) {

1930 
	`unc⁄dôi⁄Æ_°ól
(
w
, 
∑ª¡_ff
);

1933 
	`¥ovably_good_°ól
(
w
, 
∑ª¡_ff
);

1935 } 
	`END_WITH_FRAME_LOCK
(
w
, 
∑ª¡_ff
);

1937 } 
	`END_WITH_WORKER_LOCK_OPTIONAL
(
w
);

1940 
	`__cûkπs_de°roy_fuŒ_‰ame
(
w
, 
ff
);

1942 
	}
}

1944 #ifde‡
_WIN32


1950 
	$__cûkπs_migøã_ex˚±i⁄
(
__cûkπs_°ack_‰ame
 *
sf
) {

1952 
__cûkπs_w‹kî
 *
w
 = 
sf
->
w‹kî
;

1953 
fuŒ_‰ame
 *
ff
;

1955 
	`BEGIN_WITH_WORKER_LOCK
(
w
) {

1956 
ff
 = 
w
->
l
->
‰ame_ff
;

1957 
	`ª£t_THE_ex˚±i⁄
(
w
);

1960 
	`__cûkπs_ßve_ex˚±i⁄_°©e
(
w
, 
ff
);

1962 
	`CILK_ASSERT
(
w
->
hód
 =w->
èû
);

1963 } 
	`END_WITH_WORKER_LOCK
(
w
);

1968 
w
 = 
	`execuã_ªdu˘i⁄s_f‹_•awn_ªtu∫
(w, 
ff
, 
sf
);

1971 
	`l⁄gjmp_öto_ru¡ime
(
w
, 
do_ªtu∫_‰om_•awn
, 0);

1972 
	`CILK_ASSERT
(! "Shouldn't be here...");

1973 
	}
}

1979 
__cûkπs_°ack_‰ame
 *
	$__cûkπs_p›_èû
(
__cûkπs_w‹kî
 *
w
)

1981 
__cûkπs_°ack_‰ame
 *
sf
;

1982 
	`BEGIN_WITH_WORKER_LOCK
(
w
) {

1983 
__cûkπs_°ack_‰ame
 *vﬁ©ûê*
èû
 = 
w
->tail;

1984 i‡(
w
->
hód
 < 
èû
) {

1985 --
èû
;

1986 
sf
 = *
èû
;

1987 
w
->
èû
 =Åail;

1989 
sf
 = 0;

1991 } 
	`END_WITH_WORKER_LOCK
(
w
);

1992  
sf
;

1993 
	}
}

1996 
	$__cûkπs_ªtu∫
(
__cûkπs_w‹kî
 *
w
)

1998 
fuŒ_‰ame
 *
ff
, *
∑ª¡_ff
;

1999 
	`START_INTERVAL
(
w
, 
INTERVAL_RETURNING
);

2001 
	`BEGIN_WITH_WORKER_LOCK_OPTIONAL
(
w
) {

2002 
ff
 = 
w
->
l
->
‰ame_ff
;

2003 
	`CILK_ASSERT
(
ff
);

2004 
	`CILK_ASSERT
(
ff
->
joö_cou¡î
 == 1);

2006 
	`CILK_ASSERT
(
ff
->
is_ˇŒ_chûd
);

2008 
	`BEGIN_WITH_FRAME_LOCK
(
w
, 
ff
) {

2012 
∑ª¡_ff
 = 
	`disown
(
w
, 
ff
, 0, "return");

2013 
	`decjoö
(
ff
);

2015 #ifde‡
_WIN32


2016 
	`__cûkπs_ßve_ex˚±i⁄_°©e
(
w
, 
ff
);

2021 
	`CILK_ASSERT
(
NULL
 =
ff
->
≥ndög_ex˚±i⁄
);

2022 
ff
->
≥ndög_ex˚±i⁄
 = 
w
->
l
->pending_exception;

2023 
w
->
l
->
≥ndög_ex˚±i⁄
 = 
NULL
;

2026 } 
	`END_WITH_FRAME_LOCK
(
w
, 
ff
);

2028 
	`__cûkπs_„n˚
();

2030 
	`CILK_ASSERT
(
∑ª¡_ff
);

2032 
	`BEGIN_WITH_FRAME_LOCK
(
w
, 
∑ª¡_ff
) {

2033 
	`föÆize_chûd_f‹_ˇŒ
(
w
, 
∑ª¡_ff
, 
ff
);

2034 } 
	`END_WITH_FRAME_LOCK
(
w
, 
∑ª¡_ff
);

2036 
ff
 = 
	`p›_√xt_‰ame
(
w
);

2041 
	`CILK_ASSERT
(!
w
->
l
->
‰ame_ff
);

2042 i‡(
ff
) {

2043 
	`BEGIN_WITH_FRAME_LOCK
(
w
, 
ff
) {

2044 
__cûkπs_°ack_‰ame
 *
sf
 = 
ff
->
ˇŒ_°ack
;

2045 
	`CILK_ASSERT
(
sf
 && !sf->
ˇŒ_∑ª¡
);

2046 
	`£tup_f‹_executi⁄
(
w
, 
ff
, 1);

2047 } 
	`END_WITH_FRAME_LOCK
(
w
, 
ff
);

2049 } 
	`END_WITH_WORKER_LOCK_OPTIONAL
(
w
);

2051 
	`STOP_INTERVAL
(
w
, 
INTERVAL_RETURNING
);

2052 
	}
}

2054 
	$__cûkπs_unböd_thªad
()

2056 
°›_cûks¸ìn
 = 0;

2057 
globÆ_°©e_t
 *
g
;

2060 
	`globÆ_os_muãx_lock
();

2062 i‡(
	`cûkg_is_published
()) {

2063 
__cûkπs_w‹kî
 *
w
 = 
	`__cûkπs_gë_és_w‹kî
();

2064 i‡(
w
) {

2065 
g
 = 
w
->g;

2069 i‡(
g
->
P
 > 1)

2071 
	`STOP_INTERVAL
(
w
, 
INTERVAL_WORKING
);

2072 
	`STOP_INTERVAL
(
w
, 
INTERVAL_IN_SCHEDULER
);

2075 
	`__cûkπs_sysdï_unböd_thªad
(
w
);

2076 
	`__cûkπs_£t_és_w‹kî
(0);

2078 i‡(
w
->
£lf
 == -1) {

2081 
	`de°roy_w‹kî
(
w
);

2082 
	`__cûkπs_‰ì
(
w
);

2086 
w
->
l
->
ty≥
 = 
WORKER_FREE
;

2087 
	`__cûkπs_Àave_cûk
(
g
);

2090 
°›_cûks¸ìn
 = (0 =
g
->
Q
);

2093 
	`globÆ_os_muãx_u∆ock
();

2097 i‡(
°›_cûks¸ìn
)

2098 
	`__cûkπs_cûks¸ìn_dißbÀ_ö°rumíèti⁄
();

2099 
	}
}

2103 
	$__cûkπs_c_ªtu∫_‰om_öôül
(
__cûkπs_w‹kî
 *
w
)

2105 
cûkªd_m≠
 *
rm
;

2108 
	`CILK_ASSERT
(
w
->
l
->
ty≥
 =
WORKER_USER
);

2110 #i‡
REDPAR_DEBUG
 >= 3

2111 
	`Ârötf
(
°dîr
, "[W=%d, desc=cilkrts_c_return_from_initial, ff=%p]\n",

2112 
w
->
£lf
, w->
l
->
‰ame_ff
);

2115 
	`BEGIN_WITH_WORKER_LOCK_OPTIONAL
(
w
) {

2116 
fuŒ_‰ame
 *
ff
 = 
w
->
l
->
‰ame_ff
;

2117 
	`CILK_ASSERT
(
ff
);

2118 
	`¥ötf
("ff->joö_cou¡î %d\n", 
ff
->
joö_cou¡î
);

2119 
	`CILK_ASSERT
(
ff
->
joö_cou¡î
 == 1);

2120 
w
->
l
->
‰ame_ff
 = 0;

2122 
	`CILK_ASSERT
(
ff
->
°ack_£lf
);

2124 
	`tbb_öãr›_ßve_öfo_‰om_°ack
(
ff
->
°ack_£lf
);

2125 
	`sysdï_de°roy_u£r_°ack
(
ff
->
°ack_£lf
);

2128 
rm
 = 
w
->
ªdu˚r_m≠
;

2129 
w
->
ªdu˚r_m≠
 = 
NULL
;

2131 #i‡
REDPAR_DEBUG
 >= 3

2132 
	`Ârötf
(
°dîr
, "W=%d,Ñeducer_map_to_delete=%p, was in ff=%p\n",

2133 
w
->
£lf
,

2134 
rm
,

2135 
ff
);

2137 
	`__cûkπs_de°roy_fuŒ_‰ame
(
w
, 
ff
);

2141 } 
	`END_WITH_WORKER_LOCK_OPTIONAL
(
w
);

2144 
	`ßve_≥digªe_Àaf_‰om_u£r_w‹kî
(
w
);

2147 i‡(
rm
) {

2148 
	`__cûkπs_de°roy_ªdu˚r_m≠
(
w
, 
rm
);

2151 
w
 = 
NULL
;

2152 
	`__cûkπs_unböd_thªad
();

2157 
	}
}

2168 
	$__cûkπs_ª°‹e_°ólög
(

2169 
__cûkπs_w‹kî
 *
w
,

2170 
__cûkπs_°ack_‰ame
 *vﬁ©ûê*
ßved_¥Ÿe˘ed_èû
)

2175 
w
->
¥Ÿe˘ed_èû
 = 
ßved_¥Ÿe˘ed_èû
;

2176 
	`__cûkπs_„n˚
();

2177 
	}
}

2188 
__cûkπs_°ack_‰ame
 *vﬁ©ûê*
	$__cûkπs_dißŒow_°ólög
(

2189 
__cûkπs_w‹kî
 *
w
,

2190 
__cûkπs_°ack_‰ame
 *vﬁ©ûê*
√w_¥Ÿe˘ed_èû
)

2192 
__cûkπs_°ack_‰ame
 *vﬁ©ûê*
ßved_¥Ÿe˘ed_èû
 = 
w
->
¥Ÿe˘ed_èû
;

2194 i‡(!
√w_¥Ÿe˘ed_èû
)

2195 
√w_¥Ÿe˘ed_èû
 = 
w
->
l
->
…q
;

2197 i‡(
w
->
¥Ÿe˘ed_èû
 > 
√w_¥Ÿe˘ed_èû
) {

2198 
w
->
¥Ÿe˘ed_èû
 = 
√w_¥Ÿe˘ed_èû
;

2202 #i‡
deföed
 
__GNUC__
 && 
__ICC
 >1200 && !(
__MIC__
 ||
__MIC2__
)

2203 
	`_mm_s„n˚
();

2205 
	`__cûkπs_„n˚
();

2209  
ßved_¥Ÿe˘ed_èû
;

2210 
	}
}

2216 
__cûkπs_w‹kî
 *
	$make_w‹kî
(
globÆ_°©e_t
 *
g
,

2217 
£lf
, 
__cûkπs_w‹kî
 *
w
)

2219 
w
->
£lf
 = self;

2220 
w
->
g
 = g;

2222 
w
->
≥digªe
.
ønk
 = 0;

2223 
w
->
≥digªe
.
∑ª¡
 = 
NULL
;

2225 
w
->
l
 = (
loˇl_°©e
 *)
	`__cûkπs_mÆloc
((*w->l));

2227 
	`__cûkπs_öô_°©s
(&
w
->
l
->
°©s
);

2229 
	`__cûkπs_‰ame_mÆloc_≥r_w‹kî_öô
(
w
);

2231 
w
->
l
->
w‹kî_magic_0
 = 
WORKER_MAGIC_0
;

2232 
	`__cûkπs_muãx_öô
(&
w
->
l
->
lock
);

2233 
	`__cûkπs_muãx_öô
(&
w
->
l
->
°ól_lock
);

2234 
w
->
l
->
do_nŸ_°ól
 = 0;

2235 
w
->
l
->
‰ame_ff
 = 0;

2236 
w
->
l
->
…q
 = (
__cûkπs_°ack_‰ame
 **)

2237 
	`__cûkπs_mÆloc
(
g
->
…qsize
 * (*
w
->
l
->
…q
));

2238 
w
->
…q_limô
 = w->
l
->
…q
 + 
g
->
…qsize
;

2240 
w
->
l
->
‹igöÆ_≥digªe_Àaf
 = 
NULL
;

2242 
w
->
l
->
ønd_£ed
 = 0;

2243 
w
->
l
->
√xt_‰ame_ff
 = 0;

2244 
	`__cûkπs_öô_°ack_ˇche
(
w
, &w->
l
->
°ack_ˇche
, 
g
->
°ack_ˇche_size
);

2246 
w
->
hód
 = w->
èû
 = w->
l
->
…q
;

2248 
w
->
ªdu˚r_m≠
 = 
NULL
;

2250 
w
->
cuºít_°ack_‰ame
 = 
NULL
;

2252 
w
->
l
->
≥ndög_ex˚±i⁄
 = 
NULL
;

2253 
w
->
l
->
w‹kî_magic_1
 = 
WORKER_MAGIC_1
;

2255 
w
->
l
->
po°_su•íd
 = 0;

2256 
w
->
l
->
su•íded_°ack
 = 0;

2257 
w
->
l
->
°ack_to_‰ì
 = 
NULL
;

2259 
w
->
l
->
°ól_Áûuª_cou¡
 = 0;

2261 
w
->
l
->
ãam
 = 
NULL
;

2262 
w
->
l
->
œ°_fuŒ_‰ame
 = 
NULL
;

2264 
w
->
l
->
scheduÀr_°ack
 = 
NULL
;

2266 
w
->
l
->
sig«l_node
 = 
NULL
;

2268 
w
->
ª£rved
 = 
NULL
;

2272 
	`__cûkπs_ª°‹e_°ólög
(
w
, w->
…q_limô
);

2274 
w
->
l
->
ty≥
 = 
WORKER_FREE
;

2275 
w
->
l
->
u£r_thªad_imp‹ãd
 = 0;

2278 
w
->
l
->
w‹k_°ﬁí
 = 0;

2280 
	`__cûkπs_öô_w‹kî_sysdï
(
w
);

2282 
	`ª£t_THE_ex˚±i⁄
(
w
);

2284 #ifde‡
CILK_IVARS


2285 
w
->
c⁄cuºít_w‹kî_°©e
 = 
CILK_WORKER_UNBLOCKED
;

2286 
w
->
ªady_queue
 = (
queue_t
 *Ë
	`make_°ack_queue
();

2287 
w
->
∑u£d_ff
 = 
NULL
;

2288 
	`mem£t
(&
w
->
unblocked_˘x
, 0, (
jmp_buf
));

2291  
w
;

2292 
	}
}

2294 
	$de°roy_w‹kî
(
__cûkπs_w‹kî
 *
w
)

2296 
	`CILK_ASSERT
 (
NULL
 =
w
->
l
->
≥ndög_ex˚±i⁄
);

2299 
	`__cûkπs_de°roy_°ack_ˇche
(
w
, w->
g
, &w->
l
->
°ack_ˇche
);

2301 i‡(
w
->
l
->
scheduÀr_°ack
) {

2302 
	`sysdï_de°roy_töy_°ack
(
w
->
l
->
scheduÀr_°ack
);

2303 
w
->
l
->
scheduÀr_°ack
 = 
NULL
;

2305 
	`__cûkπs_de°roy_w‹kî_sysdï
(
w
);

2307 i‡(
w
->
l
->
sig«l_node
) {

2308 
	`CILK_ASSERT
(
WORKER_SYSTEM
 =
w
->
l
->
ty≥
);

2309 
	`sig«l_node_de°roy
(
w
->
l
->
sig«l_node
);

2312 
	`__cûkπs_‰ì
(
w
->
l
->
…q
);

2313 
	`__cûkπs_muãx_de°roy
(0, &
w
->
l
->
lock
);

2314 
	`__cûkπs_muãx_de°roy
(0, &
w
->
l
->
°ól_lock
);

2315 
	`__cûkπs_‰ame_mÆloc_≥r_w‹kî_˛ónup
(
w
);

2316 
	`__cûkπs_‰ì
(
w
->
l
);

2319 
	}
}

2324 
	$make_w‹kî_sy°em
(
__cûkπs_w‹kî
 *
w
) {

2325 
	`CILK_ASSERT
(
WORKER_FREE
 =
w
->
l
->
ty≥
);

2326 
w
->
l
->
ty≥
 = 
WORKER_SYSTEM
;

2327 
w
->
l
->
sig«l_node
 = 
	`sig«l_node_¸óã
();

2328 
	}
}

2330 
	$__cûkπs_deöô_öã∫Æ
(
globÆ_°©e_t
 *
g
)

2332 
i
;

2333 
__cûkπs_w‹kî
 *
w
;

2336 i‡(
NULL
 =
g
)

2339 #ifde‡
CILK_PROFILE


2340 
	`__cûkπs_dump_°©s_to_°dîr
(
g
);

2343 
w
 = 
g
->
w‹kîs
[0];

2344 i‡(
w
->
l
->
‰ame_ff
) {

2345 
	`__cûkπs_de°roy_fuŒ_‰ame
(
w
, w->
l
->
‰ame_ff
);

2346 
w
->
l
->
‰ame_ff
 = 0;

2350 
	`__cûkπs_de°roy_globÆ_sysdï
(
g
);

2352 
i
 = 0; i < 
g
->
tŸÆ_w‹kîs
; ++i)

2353 
	`de°roy_w‹kî
(
g
->
w‹kîs
[
i
]);

2356 
	`__cûkπs_‰ì
(
g
->
w‹kîs
[0]);

2358 
	`__cûkπs_‰ì
(
g
->
w‹kîs
);

2359 
	`__cûkπs_de°roy_°ack_ˇche
(0, 
g
, &g->
°ack_ˇche
);

2360 
	`__cûkπs_‰ame_mÆloc_globÆ_˛ónup
(
g
);

2361 
	`cûkg_deöô_globÆ_°©e
();

2362 
	}
}

2368 
	$wake_ru¡ime
(
globÆ_°©e_t
 *
g
)

2370 
__cûkπs_w‹kî
 *
roŸ
;

2371 i‡(
g
->
P
 > 1) {

2373 
roŸ
 = 
g
->
w‹kîs
[0];

2374 
	`CILK_ASSERT
(
roŸ
->
l
->
sig«l_node
);

2375 
	`sig«l_node_msg
(
roŸ
->
l
->
sig«l_node
, 1);

2377 
	}
}

2384 
	$¶ìp_ru¡ime
(
globÆ_°©e_t
 *
g
)

2386 
__cûkπs_w‹kî
 *
roŸ
;

2387 i‡(
g
->
P
 > 1) {

2389 
roŸ
 = 
g
->
w‹kîs
[0];

2390 
	`CILK_ASSERT
(
roŸ
->
l
->
sig«l_node
);

2391 
	`sig«l_node_msg
(
roŸ
->
l
->
sig«l_node
, 0);

2393 
	}
}

2397 
	$__cûkπs_íãr_cûk
(
globÆ_°©e_t
 *
g
)

2399 i‡(
g
->
Q
++ == 0) {

2402 
	`wake_ru¡ime
(
g
);

2404 
	}
}

2408 
	$__cûkπs_Àave_cûk
(
globÆ_°©e_t
 *
g
)

2410 i‡(--
g
->
Q
 == 0) {

2412 
	`¶ìp_ru¡ime
(
g
);

2414 
	}
}

2422 
NOINLINE


2423 
scheduÀ_t
 
	$w‹kî_ru¬abÀ
(
__cûkπs_w‹kî
 *
w
)

2425 
globÆ_°©e_t
 *
g
 = 
w
->g;

2429 i‡(
w
->
l
->
√xt_‰ame_ff
)

2430  
SCHEDULE_RUN
;

2434 i‡(
g
->
w‹k_d⁄e
)

2435  
SCHEDULE_EXIT
;

2437 i‡(0 =
w
->
£lf
) {

2440 i‡(
w
->
l
->
°ól_Áûuª_cou¡
 > 
g
->
max_°ól_Áûuªs
) {

2441 i‡(
	`sig«l_node_should_waô
(
w
->
l
->
sig«l_node
)) {

2442  
SCHEDULE_WAIT
;

2446 
w
->
l
->
°ól_Áûuª_cou¡
 = 0;

2449 } i‡(
WORKER_SYSTEM
 =
w
->
l
->
ty≥
 &&

2450 
	`sig«l_node_should_waô
(
w
->
l
->
sig«l_node
)) {

2453  
SCHEDULE_WAIT
;

2456  
SCHEDULE_RUN
;

2457 
	}
}

2460 
	$öô_w‹kîs
(
globÆ_°©e_t
 *
g
)

2462 
tŸÆ_w‹kîs
 = 
g
->total_workers;

2463 
i
;

2464 
	`CILK_ALIGNAS
(256Ë
buf„ªd_w‹kî
 {

2465 
__cûkπs_w‹kî
 
w
;

2466 
buf
[64];

2467 } *
w‹kîs_mem‹y
;

2470 
	`__cûkπs_öô_°ack_ˇche
(0, &
g
->
°ack_ˇche
,

2471 2*
tŸÆ_w‹kîs
 * 
g
->
globÆ_°ack_ˇche_size
);

2473 
g
->
w‹kîs
 = (
__cûkπs_w‹kî
 **)

2474 
	`__cûkπs_mÆloc
(
tŸÆ_w‹kîs
 * (*
g
->
w‹kîs
));

2479 
w‹kîs_mem‹y
 = (
buf„ªd_w‹kî
*)

2480 
	`__cûkπs_mÆloc
((*
w‹kîs_mem‹y
Ë* 
tŸÆ_w‹kîs
);

2484 
	`__cûkπs_cûks¸ìn_ign‹e_block
(&
w‹kîs_mem‹y
[0],

2485 &
w‹kîs_mem‹y
[
tŸÆ_w‹kîs
]);

2488 
i
 = 0; i < 
tŸÆ_w‹kîs
; ++i) {

2489 
g
->
w‹kîs
[
i
] = 
	`make_w‹kî
(g, i, &
w‹kîs_mem‹y
[i].
w
);

2494 
i
 = 0; i < 
g
->
sy°em_w‹kîs
; ++i) {

2495 
	`make_w‹kî_sy°em
(
g
->
w‹kîs
[
i
]);

2497 
	}
}

2499 
	$__cûkπs_öô_öã∫Æ
(
°¨t
)

2501 
i
;

2502 
globÆ_°©e_t
 *
g
 = 
NULL
;

2504 i‡(
	`cûkg_is_published
()) {

2505 
g
 = 
	`cûkg_öô_globÆ_°©e
();

2511 
	`globÆ_os_muãx_lock
();

2513 i‡(
	`cûkg_is_published
()) {

2515 
g
 = 
	`cûkg_öô_globÆ_°©e
();

2519 
g
 = 
	`cûkg_öô_globÆ_°©e
();

2522 
g
->
scheduÀr
 = &
__cûkπs_scheduÀr
;

2527 i‡(
g
->
undî_±oﬁ
)

2528 
	`__cûkπs_e°ablish_c_°ack
();

2529 
	`öô_w‹kîs
(
g
);

2532 
	`__cûkπs_öô_globÆ_sysdï
(
g
);

2534 
	`cûkg_publish_globÆ_°©e
(
g
);

2537 
	`globÆ_os_muãx_u∆ock
();

2540 
	`CILK_ASSERT
(
g
);

2542 i‡(
°¨t
 && !
g
->
w‹kîs_ru¬ög
)

2545 
	`globÆ_os_muãx_lock
();

2546 i‡(!
g
->
w‹kîs_ru¬ög
)

2549 
	`__cûkπs_°¨t_w‹kîs
(
g
, g->
P
 - 1);

2550 
	`globÆ_os_muãx_u∆ock
();

2552 
	}
}

2686 
cûkªd_m≠
 **
	mm≠_±r
;

2689 
≥ndög_ex˚±i⁄_öfo
 **
	mex˚±i⁄_±r
;

2690 } 
	t•li˚_À·_±rs
;

2700 
ölöe


2701 
•li˚_À·_±rs
 
	$compuã_À·_±rs_f‹_•awn_ªtu∫
(
__cûkπs_w‹kî
 *
w
,

2702 
fuŒ_‰ame
 *
ff
)

2706 
•li˚_À·_±rs
 
À·_±rs
;

2707 i‡(
ff
->
À·_siblög
) {

2708 
À·_±rs
.
m≠_±r
 = &
ff
->
À·_siblög
->
right_ªdu˚r_m≠
;

2709 
À·_±rs
.
ex˚±i⁄_±r
 = &
ff
->
À·_siblög
->
right_≥ndög_ex˚±i⁄
;

2712 
fuŒ_‰ame
 *
∑ª¡_ff
 = 
ff
->
∑ª¡
;

2713 
À·_±rs
.
m≠_±r
 = &
∑ª¡_ff
->
chûdªn_ªdu˚r_m≠
;

2714 
À·_±rs
.
ex˚±i⁄_±r
 = &
∑ª¡_ff
->
chûd_≥ndög_ex˚±i⁄
;

2716  
À·_±rs
;

2717 
	}
}

2727 
ölöe


2728 
•li˚_À·_±rs
 
	$compuã_À·_±rs_f‹_sync
(
__cûkπs_w‹kî
 *
w
,

2729 
fuŒ_‰ame
 *
ff
)

2732 
•li˚_À·_±rs
 
À·_±rs
;

2735 i‡(
ff
->
rightmo°_chûd
) {

2736 
	`CILK_ASSERT
(
ff
->
rightmo°_chûd
->
∑ª¡
 == ff);

2737 
À·_±rs
.
m≠_±r
 = &(
ff
->
rightmo°_chûd
->
right_ªdu˚r_m≠
);

2738 
À·_±rs
.
ex˚±i⁄_±r
 = &(
ff
->
rightmo°_chûd
->
right_≥ndög_ex˚±i⁄
);

2743 
À·_±rs
.
m≠_±r
 = &(
ff
->
chûdªn_ªdu˚r_m≠
);

2744 
À·_±rs
.
ex˚±i⁄_±r
 = &(
ff
->
chûd_≥ndög_ex˚±i⁄
);

2746  
À·_±rs
;

2747 
	}
}

2765 
ölöe


2766 
	$föish_•awn_ªtu∫_⁄_u£r_°ack
(
__cûkπs_w‹kî
 *
w
,

2767 
fuŒ_‰ame
 *
∑ª¡_ff
,

2768 
fuŒ_‰ame
 *
chûd_ff
)

2770 
	`CILK_ASSERT
(
w
->
l
->
°ack_to_‰ì
 =
NULL
);

2773 i‡(
chûd_ff
->
À·_siblög
 || 
∑ª¡_ff
->
°ack_chûd
) {

2775 
	`CILK_ASSERT
(
∑ª¡_ff
->
°ack_chûd
 !
chûd_ff
->
°ack_£lf
);

2780 
w
->
l
->
°ack_to_‰ì
 = 
chûd_ff
->
°ack_£lf
;

2785 
∑ª¡_ff
->
°ack_chûd
 = 
chûd_ff
->
°ack_£lf
;

2786 
w
->
l
->
°ack_to_‰ì
 = 
NULL
;

2794 
	`u∆ök_chûd
(
∑ª¡_ff
, 
chûd_ff
);

2795 
	}
}

2828 
cûkªd_m≠
**

2829 
	$Á°_∑th_ªdu˘i⁄s_f‹_•awn_ªtu∫
(
__cûkπs_w‹kî
 *
w
,

2830 
fuŒ_‰ame
 *
ff
)

2833 
fuŒ_‰ame
 *
∑ª¡_ff
 = 
ff
->
∑ª¡
;

2834 
•li˚_À·_±rs
 
À·_±rs
;

2836 
	`CILK_ASSERT
(
NULL
 =
w
->
l
->
≥ndög_ex˚±i⁄
);

2840 
À·_±rs
 = 
	`compuã_À·_±rs_f‹_•awn_ªtu∫
(
w
, 
ff
);

2843 
	`•li˚_ex˚±i⁄s_f‹_•awn
(
w
, 
ff
, 
À·_±rs
.
ex˚±i⁄_±r
);

2865 
ˇ£_vÆue
 = (*(
À·_±rs
.
m≠_±r
Ë!
NULL
);

2866 
ˇ£_vÆue
 +((
w
->
ªdu˚r_m≠
 !
NULL
) << 1);

2867 
ˇ£_vÆue
 +((
ff
->
right_ªdu˚r_m≠
 !
NULL
) << 2);

2870 i‡(
ˇ£_vÆue
 >=2) {

2871 
ˇ£_vÆue
) {

2873 *(
À·_±rs
.
m≠_±r
Ë
w
->
ªdu˚r_m≠
;

2874 
w
->
ªdu˚r_m≠
 = 
NULL
;

2875  
NULL
;

2878 *(
À·_±rs
.
m≠_±r
Ë
ff
->
right_ªdu˚r_m≠
;

2879 
ff
->
right_ªdu˚r_m≠
 = 
NULL
;

2880  
NULL
;

2885  
À·_±rs
.
m≠_±r
;

2890  
NULL
;

2891 
	}
}

2929 
__cûkπs_w‹kî
*

2930 
	$¶ow_∑th_ªdu˘i⁄s_f‹_•awn_ªtu∫
(
__cûkπs_w‹kî
 *
w
,

2931 
fuŒ_‰ame
 *
ff
,

2932 
cûkªd_m≠
 **
À·_m≠_±r
)

2936 #i‡
REDPAR_DEBUG
 > 0

2937 
	`CILK_ASSERT
(!
ff
->
rightmo°_chûd
);

2938 
	`CILK_ASSERT
(!
ff
->
is_ˇŒ_chûd
);

2950 i‡(!(*
À·_m≠_±r
)) {

2951 *
À·_m≠_±r
 = 
w
->
ªdu˚r_m≠
;

2952 
w
->
ªdu˚r_m≠
 = 
NULL
;

2955 i‡(!
w
->
ªdu˚r_m≠
) {

2956 
w
->
ªdu˚r_m≠
 = 
ff
->
right_ªdu˚r_m≠
;

2957 
ff
->
right_ªdu˚r_m≠
 = 
NULL
;

2962 i‡(!
w
->
ªdu˚r_m≠
) {

2963 
	`vîify_cuºít_wkr
(
w
);

2964  
w
;

2967 
cûkªd_m≠
* 
À·_m≠
;

2968 
cûkªd_m≠
* 
middÀ_m≠
;

2969 
cûkªd_m≠
* 
right_m≠
;

2974 
À·_m≠
 = *
À·_m≠_±r
;

2975 *
À·_m≠_±r
 = 
NULL
;

2976 
middÀ_m≠
 = 
w
->
ªdu˚r_m≠
;

2977 
w
->
ªdu˚r_m≠
 = 
NULL
;

2978 
right_m≠
 = 
ff
->
right_ªdu˚r_m≠
;

2979 
ff
->
right_ªdu˚r_m≠
 = 
NULL
;

2983 
	`__cûkπs_‰ame_u∆ock
(
w
, 
ff
->
∑ª¡
);

2986 
À·_m≠
 = 
	`ª≥©ed_mîge_ªdu˚r_m≠s
(&
w
,

2987 
À·_m≠
,

2988 
middÀ_m≠
);

2989 
	`vîify_cuºít_wkr
(
w
);

2990 
À·_m≠
 = 
	`ª≥©ed_mîge_ªdu˚r_m≠s
(&
w
,

2991 
À·_m≠
,

2992 
right_m≠
);

2993 
	`vîify_cuºít_wkr
(
w
);

2994 
	`CILK_ASSERT
(
NULL
 =
w
->
ªdu˚r_m≠
);

2996 
w
->
ªdu˚r_m≠
 = 
À·_m≠
;

3001 
	`CILK_ASSERT
(
NULL
 =
ff
->
≥ndög_ex˚±i⁄
);

3002 
ff
->
≥ndög_ex˚±i⁄
 = 
w
->
l
->pending_exception;

3003 
w
->
l
->
≥ndög_ex˚±i⁄
 = 
NULL
;

3006 
	`__cûkπs_‰ame_lock
(
w
, 
ff
->
∑ª¡
);

3010 
•li˚_À·_±rs
 
À·_±rs
;

3011 
À·_±rs
 = 
	`compuã_À·_±rs_f‹_•awn_ªtu∫
(
w
, 
ff
);

3014 
À·_m≠_±r
 = 
À·_±rs
.
m≠_±r
;

3016 
	`•li˚_ex˚±i⁄s_f‹_•awn
(
w
, 
ff
, 
À·_±rs
.
ex˚±i⁄_±r
);

3021 
	`CILK_ASSERT
(0);

3022  
NULL
;

3023 
	}
}

3039 
__cûkπs_w‹kî
*

3040 
	$execuã_ªdu˘i⁄s_f‹_•awn_ªtu∫
(
__cûkπs_w‹kî
 *
w
,

3041 
fuŒ_‰ame
 *
ff
,

3042 
__cûkπs_°ack_‰ame
 *
ªtu∫ög_sf
)

3049 
	`ª°‹e_‰ame_f‹_•awn_ªtu∫_ªdu˘i⁄
(
w
, 
ff
, 
ªtu∫ög_sf
);

3052 
	`BEGIN_WITH_FRAME_LOCK
(
w
, 
ff
->
∑ª¡
) {

3053 
cûkªd_m≠
 **
À·_m≠_±r
;

3054 
À·_m≠_±r
 = 
	`Á°_∑th_ªdu˘i⁄s_f‹_•awn_ªtu∫
(
w
, 
ff
);

3058 i‡(
À·_m≠_±r
) {

3064 
w
 = 
	`¶ow_∑th_ªdu˘i⁄s_f‹_•awn_ªtu∫
(w,

3065 
ff
,

3066 
À·_m≠_±r
);

3067 
	`vîify_cuºít_wkr
(
w
);

3070 
	`föish_•awn_ªtu∫_⁄_u£r_°ack
(
w
, 
ff
->
∑ª¡
, ff);

3073 } 
	`END_WITH_FRAME_LOCK
(
w
, 
ff
->
∑ª¡
);

3074  
w
;

3075 
	}
}

3087 
ölöe


3088 
	$Á°_∑th_ªdu˘i⁄s_f‹_sync
(
__cûkπs_w‹kî
 *
w
,

3089 
fuŒ_‰ame
 *
ff
) {

3091  !(
w
->
ªdu˚r_m≠
 || 
ff
->
≥ndög_ex˚±i⁄
);

3092 
	}
}

3113 
__cûkπs_w‹kî
*

3114 
	$¶ow_∑th_ªdu˘i⁄s_f‹_sync
(
__cûkπs_w‹kî
 *
w
,

3115 
fuŒ_‰ame
 *
ff
)

3117 
cûkªd_m≠
 *
À·_m≠
;

3118 
cûkªd_m≠
 *
middÀ_m≠
;

3120 #i‡(
REDPAR_DEBUG
 > 0)

3121 
	`CILK_ASSERT
(
ff
);

3122 
	`CILK_ASSERT
(
w
->
hód
 =w->
èû
);

3125 
middÀ_m≠
 = 
w
->
ªdu˚r_m≠
;

3126 
w
->
ªdu˚r_m≠
 = 
NULL
;

3132 
	`BEGIN_WITH_FRAME_LOCK
(
w
, 
ff
) {

3133 
•li˚_À·_±rs
 
À·_±rs
 = 
	`compuã_À·_±rs_f‹_sync
(
w
, 
ff
);

3136 
À·_m≠
 = *(
À·_±rs
.
m≠_±r
);

3137 *(
À·_±rs
.
m≠_±r
Ë
NULL
;

3140 i‡(!
À·_m≠
) {

3141 
À·_m≠
 = 
middÀ_m≠
;

3142 
middÀ_m≠
 = 
NULL
;

3145 *(
À·_±rs
.
ex˚±i⁄_±r
) =

3146 
	`__cûkπs_mîge_≥ndög_ex˚±i⁄s
(
w
,

3147 *
À·_±rs
.
ex˚±i⁄_±r
,

3148 
ff
->
≥ndög_ex˚±i⁄
);

3149 
ff
->
≥ndög_ex˚±i⁄
 = 
NULL
;

3153 i‡(!
middÀ_m≠
) {

3154 *(
À·_±rs
).
m≠_±r
 = 
À·_m≠
;

3155 #i‡(
REDPAR_DEBUG
 > 0)

3156 
	`CILK_ASSERT
(
NULL
 =
w
->
ªdu˚r_m≠
);

3159 
	`vîify_cuºít_wkr
(
w
);

3161 
	`__cûkπs_‰ame_u∆ock
(
w
, 
ff
);

3162  
w
;

3164 } 
	`END_WITH_FRAME_LOCK
(
w
, 
ff
);

3167 
middÀ_m≠
 = 
	`ª≥©ed_mîge_ªdu˚r_m≠s
(&
w
,

3168 
À·_m≠
,

3169 
middÀ_m≠
);

3170 
	`vîify_cuºít_wkr
(
w
);

3175 
	`CILK_ASSERT
(
NULL
 =
ff
->
≥ndög_ex˚±i⁄
);

3176 
ff
->
≥ndög_ex˚±i⁄
 = 
w
->
l
->pending_exception;

3177 
w
->
l
->
≥ndög_ex˚±i⁄
 = 
NULL
;

3181 
	`CILK_ASSERT
(0);

3182  
NULL
;

3183 
	}
}

3197 
__cûkπs_w‹kî
*

3198 
	$execuã_ªdu˘i⁄s_f‹_sync
(
__cûkπs_w‹kî
 *
w
,

3199 
fuŒ_‰ame
 *
ff
,

3200 
__cûkπs_°ack_‰ame
 *
sf_©_sync
)

3202 
föished_ªdu˘i⁄s
;

3229 
ff
->
ˇŒ_°ack
 = 
NULL
;

3242 
	`CILK_ASSERT
(
sf_©_sync
->
Êags
 | 
CILK_FRAME_STOLEN
);

3243 
	`__cûkπs_put_°ack
(
ff
, 
sf_©_sync
);

3244 
	`__cûkπs_make_uƒu¬abÀ_sysdï
(
w
, 
ff
, 
sf_©_sync
, 1,

3246 
	`CILK_ASSERT
(
w
->
l
->
‰ame_ff
 =
ff
);

3250 
föished_ªdu˘i⁄s
 = 
	`Á°_∑th_ªdu˘i⁄s_f‹_sync
(
w
, 
ff
);

3252 i‡(!
föished_ªdu˘i⁄s
) {

3257 
w
 = 
	`¶ow_∑th_ªdu˘i⁄s_f‹_sync
(w, 
ff
);

3261 
	`vîify_cuºít_wkr
(
w
);

3264 #i‡
REDPAR_DEBUG
 >= 0

3265 
	`CILK_ASSERT
(
w
->
l
->
‰ame_ff
 =
ff
);

3266 
	`CILK_ASSERT
(
ff
->
ˇŒ_°ack
 =
NULL
);

3275 
ff
->
ˇŒ_°ack
 = 
sf_©_sync
;

3276 
sf_©_sync
->
Êags
 |
CILK_FRAME_SUSPENDED
;

3278  
w
;

3279 
	}
}

	@scheduler.h

36 #i‚de‡
INCLUDED_SCHEDULER_DOT_H


37 
	#INCLUDED_SCHEDULER_DOT_H


	)

39 
	~<cûk/comm⁄.h
>

40 
	~<öã∫Æ/abi.h
>

42 
	~"πs-comm⁄.h
"

43 
	~"fuŒ_‰ame.h
"

44 
	~"ªdu˚r_im∂.h
"

45 
	~"globÆ_°©e.h
"

47 
	g__CILKRTS_BEGIN_EXTERN_C


50 
	#DISABLE_PARALLEL_REDUCERS
 0

	)

51 
	#REDPAR_DEBUG
 0

	)

53 #ifde‡
CILK_IVARS


54 
	~"loˇl_°©e.h
"

55 
NORETURN
 
l⁄gjmp_öto_ru¡ime
(
__cûkπs_w‹kî
 *
w
, 
schedulög_°ack_f˙_t
 
f˙
, 
__cûkπs_°ack_‰ame
 *
sf
);

56 
£lf_°ól
(
__cûkπs_w‹kî
 *
w
);

57 
£lf_°ól_ªtu∫
(
__cûkπs_w‹kî
 *
w
);

58 
make_uƒu¬abÀ
(
__cûkπs_w‹kî
 *
w
,

59 
fuŒ_‰ame
 *
ff
,

60 
__cûkπs_°ack_‰ame
 *
sf
,

61 
°©e_vÆid
,

62 c⁄° *
why
);

75 
COMMON_PORTABLE


76 
__cûkπs_w‹kî_lock
(
__cûkπs_w‹kî
 *
w
);

87 
COMMON_PORTABLE


88 
__cûkπs_w‹kî_u∆ock
(
__cûkπs_w‹kî
 *
w
);

108 
COMMON_PORTABLE


109 
__cûkπs_push_√xt_‰ame
(
__cûkπs_w‹kî
 *
w
,

110 
fuŒ_‰ame
 *
ff
);

125 
COMMON_PORTABLE


126 
NORETURN
 
__cûkπs_c_sync
(
__cûkπs_w‹kî
 *
w
,

127 
__cûkπs_°ack_‰ame
 *
sf
);

144 
COMMON_PORTABLE


145 
__cûkπs_¥omŸe_own_deque
(
__cûkπs_w‹kî
 *
w
);

157 
COMMON_PORTABLE


158 
__cûkπs_c_THE_ex˚±i⁄_check
(
__cûkπs_w‹kî
 *
w
,

159 
__cûkπs_°ack_‰ame
 *
ªtu∫ög_sf
);

168 
COMMON_PORTABLE


169 
NORETURN
 
__cûkπs_ex˚±i⁄_‰om_•awn
(
__cûkπs_w‹kî
 *
w
,

170 
__cûkπs_°ack_‰ame
 *
ªtu∫ög_sf
);

182 
__cûkπs_migøã_ex˚±i⁄
 (
__cûkπs_°ack_‰ame
 *
sf
);

189 
COMMON_PORTABLE


190 
__cûkπs_ªtu∫
(
__cûkπs_w‹kî
 *
w
);

206 
COMMON_PORTABLE


207 
__cûkπs_c_ªtu∫_‰om_öôül
(
__cûkπs_w‹kî
 *
w
);

217 
COMMON_PORTABLE


218 
__cûkπs_°ack_‰ame
 *
__cûkπs_p›_èû
(
__cûkπs_w‹kî
 *
w
);

232 
COMMON_PORTABLE


233 
__cûkπs_°ack_‰ame
 *vﬁ©ûê*
__cûkπs_dißŒow_°ólög
(

234 
__cûkπs_w‹kî
 *
w
,

235 
__cûkπs_°ack_‰ame
 *vﬁ©ûê*
√w_¥Ÿe˘ed_èû
);

245 
COMMON_PORTABLE


246 
__cûkπs_ª°‹e_°ólög
(

247 
__cûkπs_w‹kî
 *
w
,

248 
__cûkπs_°ack_‰ame
 *vﬁ©ûê*
ßved_¥Ÿe˘ed_èû
);

262 
COMMON_PORTABLE


263 
__cûkπs_w‹kî
 *
make_w‹kî
(
globÆ_°©e_t
 *
g
,

264 
£lf
,

265 
__cûkπs_w‹kî
 *
w
);

273 
COMMON_PORTABLE


274 
de°roy_w‹kî
 (
__cûkπs_w‹kî
 *
w
);

284 
COMMON_PORTABLE


285 
__cûkπs_öô_öã∫Æ
(
°¨t
);

293 
COMMON_PORTABLE


294 
__cûkπs_deöô_öã∫Æ
(
globÆ_°©e_t
 *
g
);

299 
COMMON_PORTABLE


300 
cûkªd_m≠
 *
	$__cûkπs_xchg_ªdu˚r
(

301 
__cûkπs_w‹kî
 *
w
, 
cûkªd_m≠
 *
√wm≠
Ë
cûk_nŸhrow
;

313 
COMMON_PORTABLE


314 
	`__cûkπs_íãr_cûk
(
globÆ_°©e_t
 *
g
);

326 
COMMON_PORTABLE


327 
	`__cûkπs_Àave_cûk
(
globÆ_°©e_t
 *
g
);

338 
COMMON_PORTABLE


339 
	`__cûkπs_dump_°©s_to_°dîr
(
globÆ_°©e_t
 *
g
);

342 
__CILKRTS_END_EXTERN_C


	@signal_node.c

30 
	~"sig«l_node.h
"

31 
	~<°dlib.h
>

34 #i‡
deföed
 
__APPLE__


35 
	~<mach/mach_öô.h
>

36 
	~<mach/£m≠h‹e.h
>

37 
	~<mach/èsk.h
>

38 
£m≠h‹e_t
 
	tcûk_£m≠h‹e_t
;

39 #ñi‡
deföed
 
_WIN32


40 
	~"wödows-˛ón.h
"

41 
HANDLE
 
	tcûk_£m≠h‹e_t
;

43 
	~<î∫o.h
>

44 
	~<£m≠h‹e.h
>

45 
	~<°dio.h
>

46 
£m_t
 
	tcûk_£m≠h‹e_t
;

49 
	~"bug.h
"

50 
	~"cûk_mÆloc.h
"

51 
	~"sig«l_node.h
"

60 
	ssig«l_node_t


63 vﬁ©ûê
	mrun
;

66 
cûk_£m≠h‹e_t
 
	m£m
;

67 } 
	tsig«l_node_t
;

78 #i‡
deföed
 
__APPLE__


79 
	$öôülize_cûk_£m≠h‹e
 (
cûk_£m≠h‹e_t
 *
£m
)

81 
kîn_ªtu∫_t
 
k°©us


82 
	`£m≠h‹e_¸óã
(
	`mach_èsk_£lf
(), 
£m
, 
SYNC_POLICY_FIFO
, 0);

83 
	`as£π
(
k°©us
 =
KERN_SUCCESS
);

84 
	}
}

85 
	$deöôülize_cûk_£m≠h‹e
 (
cûk_£m≠h‹e_t
 *
£m
)

87 
kîn_ªtu∫_t
 
k°©us
 = 
	`£m≠h‹e_de°roy
(
	`mach_èsk_£lf
(), *
£m
);

88 
	`as£π
(
k°©us
 =
KERN_SUCCESS
);

89 
	}
}

90 
	$waô_⁄_cûk_£m≠h‹e
 (
cûk_£m≠h‹e_t
 *
£m
)

92 
kîn_ªtu∫_t
 
k°©us
 = 
	`£m≠h‹e_waô
(*
£m
);

93 
	`as£π
(
k°©us
 =
KERN_SUCCESS
);

94 
	}
}

95 
	$sig«l_cûk_£m≠h‹e
 (
cûk_£m≠h‹e_t
 *
£m
)

97 
kîn_ªtu∫_t
 
k°©us
 = 
	`£m≠h‹e_sig«l
(*
£m
);

98 
	`as£π
(
k°©us
 =
KERN_SUCCESS
);

99 
	}
}

100 #ñi‡
deföed
 
_WIN32


105 
	$öôülize_cûk_£m≠h‹e
 (
cûk_£m≠h‹e_t
 *
£m
)

108 *
£m
 = 
	`Cª©eEvít
(
NULL
,

109 
FALSE
,

110 
FALSE
,

111 
NULL
);

112 
	`CILK_ASSERT
 (
NULL
 !*
£m
);

113 
	}
}

115 
	$deöôülize_cûk_£m≠h‹e
 (
cûk_£m≠h‹e_t
 *
£m
)

117 
BOOL
 
ªsu…
 = 
	`Clo£H™dÀ
(*
£m
);

118 
	`CILK_ASSERT
 (0 !
ªsu…
);

119 
	}
}

121 
	$waô_⁄_cûk_£m≠h‹e
 (
cûk_£m≠h‹e_t
 *
£m
)

124 
DWORD
 
ªsu…
 = 
	`WaôF‹SögÀObje˘
 (*
£m
, 
INFINITE
);

125 
	`CILK_ASSERT
 (
WAIT_OBJECT_0
 =
ªsu…
);

126 
	}
}

127 
	$sig«l_cûk_£m≠h‹e
 (
cûk_£m≠h‹e_t
 *
£m
)

129 
BOOL
 
ªsu…
 = 
	`SëEvít
 (*
£m
);

130 
	`CILK_ASSERT
 (0 !
ªsu…
);

131 
	}
}

133 
	$öôülize_cûk_£m≠h‹e
 (
cûk_£m≠h‹e_t
 *
£m
)

135 
°©us
 = 
	`£m_öô
(
£m
, 0, 0);

136 
	`as£π
(0 =
°©us
);

137 
	}
}

138 
	$deöôülize_cûk_£m≠h‹e
 (
cûk_£m≠h‹e_t
 *
£m
)

140 
°©us
 = 
	`£m_de°roy
(
£m
);

141 
	`as£π
(0 =
°©us
);

142 
	}
}

143 
	$waô_⁄_cûk_£m≠h‹e
 (
cûk_£m≠h‹e_t
 *
£m
)

145 
°©us
;

148 
°©us
 = 
	`£m_waô
(
£m
);

149 } 
°©us
 !0 && 
î∫o
 =
EINTR
);

151 i‡(
°©us
 != 0) {

152 
	`≥º‹
("sem_wait");

153 
	`ab‹t
();

155 
	}
}

156 
	$sig«l_cûk_£m≠h‹e
 (
cûk_£m≠h‹e_t
 *
£m
)

158 
	`£m_po°
(
£m
);

159 
	}
}

169 
COMMON_SYSDEP


170 
sig«l_node_t
 *
	$sig«l_node_¸óã
()

172 
sig«l_node_t
 *
node
;

174 
node
 = ( 
sig«l_node_t
*)

175 
	`__cûkπs_mÆloc
(–
sig«l_node_t
));

176 
node
->
run
 = 0;

177 
	`öôülize_cûk_£m≠h‹e
(&
node
->
£m
);

179  
node
;

180 
	}
}

185 
	$sig«l_node_de°roy
(
sig«l_node_t
 *
node
)

187 
	`CILK_ASSERT
(
node
);

188 
	`deöôülize_cûk_£m≠h‹e
(&
node
->
£m
);

189 
	`__cûkπs_‰ì
(
node
);

190 
	}
}

195 
	$sig«l_node_should_waô
(
sig«l_node_t
 *
node
)

197 
	`CILK_ASSERT
(
node
);

198  !
node
->
run
;

199 
	}
}

204 
	$sig«l_node_msg
(
sig«l_node_t
 *
node
, 
msg
)

206 
	`CILK_ASSERT
(
node
);

207 
msg
) {

209 
node
->
run
 = 
msg
;

212 
node
->
run
 = 
msg
;

213 
	`sig«l_cûk_£m≠h‹e
(&
node
->
£m
);

216 
	`CILK_ASSERT
(0 == "Bad signal_node_t message.");

218 
	}
}

223 
	$sig«l_node_waô
(
sig«l_node_t
 *
node
)

225 
	`CILK_ASSERT
(
node
);

226 
	`sig«l_node_should_waô
(
node
)) {

229 
	`waô_⁄_cûk_£m≠h‹e
(&
node
->
£m
);

231 
	}
}

	@signal_node.h

40 #i‚de‡
INCLUDED_SIGNAL_NODE_DOT_H


41 
	#INCLUDED_SIGNAL_NODE_DOT_H


	)

43 
	~"πs-comm⁄.h
"

44 
	~<cûk/comm⁄.h
>

46 
__CILKRTS_BEGIN_EXTERN_C


49 
sig«l_node_t
 
	tsig«l_node_t
;

56 
COMMON_SYSDEP


57 
sig«l_node_t
 *
sig«l_node_¸óã
();

64 
COMMON_SYSDEP
 
sig«l_node_de°roy
(
sig«l_node_t
 *
node
);

74 
COMMON_SYSDEP


75 
sig«l_node_should_waô
(
sig«l_node_t
 *
node
);

85 
COMMON_SYSDEP


86 
sig«l_node_msg
(
sig«l_node_t
 *
node
, 
msg
);

94 
COMMON_SYSDEP


95 
sig«l_node_waô
(
sig«l_node_t
 *
node
);

97 
	g__CILKRTS_END_EXTERN_C


	@stacks.c

29 
	~"°acks.h
"

30 
	~"sysdï.h
"

31 
	~"loˇl_°©e.h
"

32 
	~"‰ame_mÆloc.h
"

33 
	~"cûk-tbb-öãr›.h
"

35 
	$move_to_globÆ
(
__cûkπs_w‹kî
 *
w
, 
u¡û
)

37 
__cûkπs_°ack_ˇche
 *
loˇl
 = &
w
->
l
->
°ack_ˇche
;

38 
__cûkπs_°ack_ˇche
 *
globÆ
 = &
w
->
g
->
°ack_ˇche
;

41 i‡(
globÆ
->
n
 >globÆ->
size
)

44 
	`__cûkπs_muãx_lock
(
w
, &
globÆ
->
lock
);

45 
globÆ
->
n
 < globÆ->
size
 && 
loˇl
->¿> 
u¡û
) {

46 
globÆ
->
°acks
[globÆ->
n
++] = 
loˇl
->stacks[--local->n];

48 
	`__cûkπs_muãx_u∆ock
(
w
, &
globÆ
->
lock
);

49 
	}
}

51 
	$push
(
__cûkπs_w‹kî
 *
w
, 
__cûkπs_°ack
 *
sd
)

53 
__cûkπs_°ack_ˇche
 *
loˇl
 = &
w
->
l
->
°ack_ˇche
;

54 c⁄° 
loˇl_size
 = 
loˇl
->
size
;

57 i‡(
loˇl
->
n
 < 
loˇl_size
) {

58 
loˇl
->
°acks
[loˇl->
n
++] = 
sd
;

62 i‡(
loˇl_size
 == 0) {

63 
	`__cûkπs_‰ì_°ack
(
w
->
g
, 
sd
);

69 
	`move_to_globÆ
(
w
, 
loˇl_size
 / 2);

74 
loˇl
->
n
 > 
loˇl_size
 / 2)

75 
	`__cûkπs_‰ì_°ack
(
w
->
g
, 
loˇl
->
°acks
[--loˇl->
n
]);

78 
loˇl
->
°acks
[loˇl->
n
++] = 
sd
;

80 
	}
}

82 
__cûkπs_°ack
 *
	$p›
(
__cûkπs_w‹kî
 *
w
)

84 
__cûkπs_°ack_ˇche
 *
loˇl
 = &
w
->
l
->
°ack_ˇche
;

85 
__cûkπs_°ack_ˇche
 *
globÆ
 = &
w
->
g
->
°ack_ˇche
;

86 
__cûkπs_°ack
 *
sd
 = 0;

87 i‡(
loˇl
->
n
 > 0)

88  
loˇl
->
°acks
[--loˇl->
n
];

89 i‡(
globÆ
->
n
 > 0) {

90 
	`__cûkπs_muãx_lock
(
w
, &
globÆ
->
lock
);

91 i‡(
globÆ
->
n
 > 0)

92 
sd
 = 
globÆ
->
°acks
[--globÆ->
n
];

93 
	`__cûkπs_muãx_u∆ock
(
w
, &
globÆ
->
lock
);

95  
sd
;

96 
	}
}

98 #ifde‡
_WIN32


99 
	~"°acks-wö.h
"

100 
	#okay_to_ªÀa£
(
°ack
Ë(0 =(°ack)->
out°™dög_ª„ªn˚s
)

	)

102 
	#okay_to_ªÀa£
(
°ack
Ë(1)

	)

105 
	$__cûkπs_ªÀa£_°ack
(
__cûkπs_w‹kî
 *
w
,

106 
__cûkπs_°ack
 *
sd
)

108 
	`START_INTERVAL
(
w
, 
INTERVAL_FREE_STACK
);

109 i‡(
sd
 && 
	`okay_to_ªÀa£
(sd)) {

110 
	`__cûkπs_övoke_°ack_›
(
w
, 
CILK_TBB_STACK_RELEASE
,
sd
);

111 
	`push
(
w
, 
sd
);

113 
	`STOP_INTERVAL
(
w
, 
INTERVAL_FREE_STACK
);

115 
	}
}

117 
__cûkπs_°ack
 *
	$__cûkπs_gë_°ack
(
__cûkπs_w‹kî
 *
w
)

119 
__cûkπs_°ack
 *
sd
;

121 
	`START_INTERVAL
(
w
, 
INTERVAL_ALLOC_STACK
);

122 
sd
 = 
	`p›
 (
w
);

123 i‡(
sd
 =
NULL
)

124 
sd
 = 
	`__cûkπs_make_°ack
(
w
);

126 
	`__cûkπs_sysdï_ª£t_°ack
(
sd
);

127 
	`STOP_INTERVAL
(
w
, 
INTERVAL_ALLOC_STACK
);

128  
sd
;

129 
	}
}

131 
	$Êush
(
globÆ_°©e_t
 *
g
,

132 
__cûkπs_°ack_ˇche
 *
c
)

135 
c
->
n
 > 0)

136 
	`__cûkπs_‰ì_°ack
(
g
, 
c
->
°acks
[--c->
n
]);

138 
	}
}

140 
	$__cûkπs_öô_°ack_ˇche
(
__cûkπs_w‹kî
 *
w
,

141 
__cûkπs_°ack_ˇche
 *
c
,

142 
size
)

144 
	`__cûkπs_muãx_öô
(&
c
->
lock
);

145 
c
->
size
 = size;

146 
c
->
n
 = 0;

147 
c
->
°acks
 = 
	`__cûkπs_‰ame_mÆloc
(
w
, 
size
 * (
__cûkπs_°ack
 *));

150 
i
;

152 
i
 = 0; i < 
size
; i++)

153 
c
->
°acks
[
i
] = 0;

156 i‡(
size
 > 0)

157 
c
->
°acks
[0] = 0;

159 
	}
}

161 
	$__cûkπs_de°roy_°ack_ˇche
(
__cûkπs_w‹kî
 *
w
,

162 
globÆ_°©e_t
 *
g
,

163 
__cûkπs_°ack_ˇche
 *
c
)

165 
	`Êush
(
g
, 
c
);

166 
	`__cûkπs_‰ame_‰ì
(
w
, 
c
->
°acks
, c->
size
 * (
__cûkπs_°ack
 *));

167 
c
->
°acks
 = 0;

168 
c
->
n
 = 0;

169 
c
->
size
 = 0;

170 
	`__cûkπs_muãx_de°roy
(
w
, &
c
->
lock
);

171 
	}
}

175 
	$__cûkπs_åim_°ack_ˇche
(
__cûkπs_w‹kî
 *
w
)

177 
__cûkπs_°ack_ˇche
 *
loˇl
 = &
w
->
l
->
°ack_ˇche
;

179 i‡(
loˇl
->
n
 <= 1)

182 
	`START_INTERVAL
(
w
, 
INTERVAL_FREE_STACK
);

184 
	`move_to_globÆ
(
w
, 1);

186 
loˇl
->
n
 > 1)

187 
	`__cûkπs_‰ì_°ack
(
w
->
g
, 
loˇl
->
°acks
[--loˇl->
n
]);

189 
	`STOP_INTERVAL
(
w
, 
INTERVAL_FREE_STACK
);

190 
	}
}

	@stacks.h

36 #i‚de‡
INCLUDED_STACKS_DOT_H


37 
	#INCLUDED_STACKS_DOT_H


	)

39 
	~<cûk/comm⁄.h
>

40 
	~"πs-comm⁄.h
"

41 
	~"globÆ_°©e.h
"

43 
__CILKRTS_BEGIN_EXTERN_C


53 
COMMON_PORTABLE


54 
__cûkπs_ªÀa£_°ack
(
__cûkπs_w‹kî
 *
w
,

55 
__cûkπs_°ack
 *
sd
);

65 
COMMON_PORTABLE


66 
__cûkπs_öô_°ack_ˇche
(
__cûkπs_w‹kî
 *
w
,

67 
__cûkπs_°ack_ˇche
 *
c
,

68 
size
);

79 
COMMON_PORTABLE


80 
__cûkπs_de°roy_°ack_ˇche
(
__cûkπs_w‹kî
 *
w
,

81 
globÆ_°©e_t
 *
g
,

82 
__cûkπs_°ack_ˇche
 *
c
);

90 
COMMON_PORTABLE


91 
__cûkπs_åim_°ack_ˇche
(
__cûkπs_w‹kî
 *
w
);

104 
COMMON_PORTABLE


105 
__cûkπs_°ack
 *
__cûkπs_gë_°ack
(
__cûkπs_w‹kî
 *
w
);

107 
	g__CILKRTS_END_EXTERN_C


	@stats.c

29 
	~"°©s.h
"

30 
	~"bug.h
"

31 
	~"os.h
"

32 
	~"loˇl_°©e.h
"

34 
	~<°dio.h
>

36 
	#INVALID_START
 (0ULL - 1ULL)

	)

38 #ifde‡
CILK_PROFILE


40 c⁄° *
	g«mes
[] = {

72 
	$__cûkπs_öô_°©s
(
°©i°ics
 *
s
)

74 
i
;

76 
i
 = 0; i < 
INTERVAL_N
; ++i) {

77 
s
->
°¨t
[
i
] = 
INVALID_START
;

78 
s
->
accum
[
i
] = 0;

79 
s
->
cou¡
[
i
] = 0;

82 
s
->
°ack_hwm
 = 0;

83 
	}
}

85 #ifde‡
CILK_PROFILE


86 
	$__cûkπs_accum_°©s
(
°©i°ics
 *
to
, sèti°ic†*
‰om
)

88 
i
;

90 
i
 = 0; i < 
INTERVAL_N
; ++i) {

91 
to
->
accum
[
i
] +
‰om
->accum[i];

92 
to
->
cou¡
[
i
] +
‰om
->count[i];

93 
‰om
->
accum
[
i
] = 0;

94 
‰om
->
cou¡
[
i
] = 0;

97 i‡(
‰om
->
°ack_hwm
 > 
to
->stack_hwm)

98 
to
->
°ack_hwm
 = 
‰om
->stack_hwm;

99 
‰om
->
°ack_hwm
 = 0;

100 
	}
}

102 
	$__cûkπs_nŸe_öãrvÆ
(
__cûkπs_w‹kî
 *
w
, 
öãrvÆ
 
i
)

104 i‡(
w
) {

105 
°©i°ics
 *
s
 = &
w
->
l
->
°©s
;

106 
	`CILK_ASSERT
(
s
->
°¨t
[
i
] =
INVALID_START
);

107 
s
->
cou¡
[
i
]++;

109 
	}
}

111 
	$__cûkπs_°¨t_öãrvÆ
(
__cûkπs_w‹kî
 *
w
, 
öãrvÆ
 
i
)

113 i‡(
w
) {

114 
°©i°ics
 *
s
 = &
w
->
l
->
°©s
;

115 
	`CILK_ASSERT
(
s
->
°¨t
[
i
] =
INVALID_START
);

116 
s
->
°¨t
[
i
] = 
	`__cûkπs_gëticks
();

117 
s
->
cou¡
[
i
]++;

119 
	}
}

121 
	$__cûkπs_°›_öãrvÆ
(
__cûkπs_w‹kî
 *
w
, 
öãrvÆ
 
i
)

123 i‡(
w
) {

124 
°©i°ics
 *
s
 = &
w
->
l
->
°©s
;

125 
	`CILK_ASSERT
(
s
->
°¨t
[
i
] !
INVALID_START
);

126 
s
->
accum
[
i
] +
	`__cûkπs_gëticks
(Ë- s->
°¨t
[i];

127 
s
->
°¨t
[
i
] = 
INVALID_START
;

129 
	}
}

131 
	$dump_°©s_to_fûe
(
FILE
 *
°©_fûe
, 
°©i°ics
 *
s
)

133 
i
;

134 
	`Ârötf
(
°©_fûe
, "\nCILK PLUS RUNTIME SYSTEM STATISTICS:\n\n");

136 
	`Ârötf
(
°©_fûe
,

144 
i
 = 0; i < 
INTERVAL_N
; ++i) {

145 
	`Ârötf
(
°©_fûe
, " %-32s: %15Œu", 
«mes
[
i
], 
s
->
cou¡
[i]);

146 i‡(
s
->
accum
[
i
]) {

147 
	`Ârötf
(
°©_fûe
, " %10.3g %12.3g %10.2f",

148 ()
s
->
accum
[
i
],

149 ()
s
->
accum
[
i
] / ()s->
cou¡
[i],

150 100.0 * ()
s
->
accum
[
i
] /

151 ()
s
->
accum
[
INTERVAL_IN_SCHEDULER
]);

153 
	`Ârötf
(
°©_fûe
, "\n");

155 
	}
}

	@stats.h

38 #i‚de‡
INCLUDED_STATS_DOT_H


39 
	#INCLUDED_STATS_DOT_H


	)

43 
	~<cûk/comm⁄.h
>

44 
	~"πs-comm⁄.h
"

45 
	~"öã∫Æ/abi.h
"

47 #ifde‡
CILK_PROFILE


48 
	~<°dio.h
>

51 
__CILKRTS_BEGIN_EXTERN_C


54 
	eöãrvÆ


56 
	mINTERVAL_IN_SCHEDULER
,

57 
	mINTERVAL_WORKING
,

58 
	mINTERVAL_STEALING
,

59 
	mINTERVAL_STEAL_SUCCESS
,

60 
	mINTERVAL_STEAL_FAIL_EMPTYQ
,

61 
	mINTERVAL_STEAL_FAIL_LOCK
,

62 
	mINTERVAL_STEAL_FAIL_USER_WORKER
,

63 
	mINTERVAL_STEAL_FAIL_DEKKER
,

64 
	mINTERVAL_SYNC_CHECK
,

65 
	mINTERVAL_THE_EXCEPTION_CHECK
,

66 
	mINTERVAL_THE_EXCEPTION_CHECK_USELESS
,

67 
	mINTERVAL_RETURNING
,

68 
	mINTERVAL_FINALIZE_CHILD
,

69 
	mINTERVAL_PROVABLY_GOOD_STEAL
,

70 
	mINTERVAL_UNCONDITIONAL_STEAL
,

71 
	mINTERVAL_ALLOC_FULL_FRAME
,

72 
	mINTERVAL_FRAME_ALLOC_LARGE
,

73 
	mINTERVAL_FRAME_ALLOC
,

74 
	mINTERVAL_FRAME_ALLOC_GLOBAL
,

75 
	mINTERVAL_FRAME_FREE_LARGE
,

76 
	mINTERVAL_FRAME_FREE
,

77 
	mINTERVAL_FRAME_FREE_GLOBAL
,

78 
	mINTERVAL_MUTEX_LOCK
,

79 
	mINTERVAL_MUTEX_LOCK_SPINNING
,

80 
	mINTERVAL_MUTEX_LOCK_YIELDING
,

81 
	mINTERVAL_MUTEX_TRYLOCK
,

82 
	mINTERVAL_ALLOC_STACK
,

83 
	mINTERVAL_FREE_STACK
,

85 
	mINTERVAL_N


93 
	s°©i°ics


96 
	mcou¡
[
INTERVAL_N
];

102 
	m°¨t
[
INTERVAL_N
];

105 
	maccum
[
INTERVAL_N
];

112 
	m°ack_hwm
;

113 } 
	t°©i°ics
;

120 
COMMON_PORTABLE
 
__cûkπs_öô_°©s
(
°©i°ics
 *
s
);

130 
COMMON_PORTABLE


131 
__cûkπs_accum_°©s
(
°©i°ics
 *
to
, sèti°ic†*
‰om
);

142 
COMMON_PORTABLE


143 
__cûkπs_°¨t_öãrvÆ
(
__cûkπs_w‹kî
 *
w
, 
öãrvÆ
 
i
);

155 
COMMON_PORTABLE


156 
__cûkπs_°›_öãrvÆ
(
__cûkπs_w‹kî
 *
w
, 
öãrvÆ
 
i
);

167 
COMMON_PORTABLE


168 
__cûkπs_nŸe_öãrvÆ
(
__cûkπs_w‹kî
 *
w
, 
öãrvÆ
 
i
);

176 
COMMON_PORTABLE


177 
__cûkπs_öô_°©s
(
°©i°ics
 *
s
);

179 #ifde‡
CILK_PROFILE


180 
COMMON_PORTABLE


181 
dump_°©s_to_fûe
(
FILE
 *
°©_fûe
, 
°©i°ics
 *
s
);

185 #ifde‡
CILK_PROFILE


186 
	#START_INTERVAL
(
w
, 
i
Ë
	`__cûkπs_°¨t_öãrvÆ
(w, i);

	)

187 
	#STOP_INTERVAL
(
w
, 
i
Ë
	`__cûkπs_°›_öãrvÆ
(w, i);

	)

188 
	#NOTE_INTERVAL
(
w
, 
i
Ë
	`__cûkπs_nŸe_öãrvÆ
(w, i);

	)

191 
	#START_INTERVAL
(
w
, 
i
)

	)

193 
	#STOP_INTERVAL
(
w
, 
i
)

	)

195 
	#NOTE_INTERVAL
(
w
, 
i
)

	)

198 
	g__CILKRTS_END_EXTERN_C


	@symbol_test.c

34 * 
__cûkπs_globÆ_°©e
;

35 *vﬁ©ûê
	gp
;

37 
	$foo
 (Ë{ 
	}
}

38 
	$maö
 ()

40 
i
;

41 
j
;

43 
_Cûk_•awn
 
	`foo
();

44 
	`_Cûk_f‹
 (
i
 = 0; i < 2; ++i)

45 
	`foo
();

46 
	`_Cûk_f‹
 (
j
 = 0; j < 2; ++j)

47 
	`foo
();

48 
p
 = 
__cûkπs_globÆ_°©e
;

50 
	}
}

	@sysdep-unix.c

32 #ifde‡
__löux__


36 
	#_GNU_SOURCE


	)

39 
	~"sysdï.h
"

40 
	~"os.h
"

41 
	~"bug.h
"

42 
	~"loˇl_°©e.h
"

43 
	~"sig«l_node.h
"

44 
	~"fuŒ_‰ame.h
"

45 
	~"jmpbuf.h
"

46 
	~"cûk_mÆloc.h
"

47 
	~"ªdu˚r_im∂.h
"

48 
	~"mëaˇŒ_im∂.h
"

52 
	~"cûk-ôäŸify.h
"

54 
	~<°ddef.h
>

56 #ifde‡
__CYGWIN__


58 #unde‡
__STRICT_ANSI__


61 
	~<°rög.h
>

62 
	~<±hªad.h
>

63 
	~<uni°d.h
>

65 #ifde‡
__APPLE__


68 #ifde‡
__löux__


69 
	~<sys/ªsour˚.h
>

70 
	~<sys/sysöfo.h
>

72 #ifde‡
__FªeBSD__


73 
	~<sys/ªsour˚.h
>

75 
	#MAP_ANONYMOUS
 
MAP_ANON


	)

79 
öã∫Æ_íf‹˚_globÆ_visibûôy
();

81 
	sglobÆ_sysdï_°©e


83 
±hªad_t
 *
	mthªads
;

84 
size_t
 
	m±hªad_t_size
;

87 
COMMON_SYSDEP


88 
	$__cûkπs_öô_w‹kî_sysdï
(
__cûkπs_w‹kî
 *
w
)

90 
	`ITT_SYNC_CREATE
(
w
, "Scheduler");

91 
	}
}

93 
COMMON_SYSDEP


94 
	$__cûkπs_de°roy_w‹kî_sysdï
(
__cûkπs_w‹kî
 *
w
)

96 
	}
}

98 
COMMON_SYSDEP


99 
	$__cûkπs_öô_globÆ_sysdï
(
globÆ_°©e_t
 *
g
)

101 
	`öã∫Æ_íf‹˚_globÆ_visibûôy
();

103 
	`__cûkπs_öô_és_v¨übÀs
();

105 
	`CILK_ASSERT
(
g
->
tŸÆ_w‹kîs
 >g->
P
 - 1);

106 
g
->
sysdï
 = 
	`__cûkπs_mÆloc
( (
globÆ_sysdï_°©e
));

107 
	`CILK_ASSERT
(
g
->
sysdï
);

108 
g
->
sysdï
->
±hªad_t_size
 =  (
±hªad_t
);

112 
g
->
sysdï
->
thªads
 = 
	`__cûkπs_mÆloc
((
±hªad_t
Ë* g->
tŸÆ_w‹kîs
);

113 
	`CILK_ASSERT
(
g
->
sysdï
->
thªads
);

116 
	}
}

118 
COMMON_SYSDEP


119 
	$__cûkπs_de°roy_globÆ_sysdï
(
globÆ_°©e_t
 *
g
)

121 i‡(
g
->
sysdï
->
thªads
)

122 
	`__cûkπs_‰ì
(
g
->
sysdï
->
thªads
);

123 
	`__cûkπs_‰ì
(
g
->
sysdï
);

124 
	}
}

130 
	$öã∫Æ_run_scheduÀr_wôh_ex˚±i⁄s
(
__cûkπs_w‹kî
 *
w
)

133 
v¨
;

134 
	`__cûkπs_cûks¸ìn_e°ablish_c_°ack
(&
v¨
 - 1000000, &var);

136 
	`__cûkπs_run_scheduÀr_wôh_ex˚±i⁄s
(
w
);

137 
	}
}

147 
NON_COMMON
 * 
	$__cûkπs_w‹kî_°ub
(*
¨g
)

150 
__cûkπs_w‹kî
 *
w
 = (__cûkπs_w‹kî *)
¨g
;

152 #ifde‡
__INTEL_COMPILER


153 #ifde‡
USE_ITTNOTIFY


155 
	`__ôt_thªad_£t_«me
("Cilk Worker");

162 
	`CILK_ASSERT
(
w
->
l
->
ty≥
 =
WORKER_SYSTEM
);

166 
	`__cûkπs_£t_és_w‹kî
(
w
);

167 
	`öã∫Æ_run_scheduÀr_wôh_ex˚±i⁄s
(
w
);

170 
	}
}

196 
wrôe_vîsi⁄_fûe
 (
globÆ_°©e_t
 *, );

200 
	$¸óã_thªads
(
globÆ_°©e_t
 *
g
, 
ba£
, 
t›
)

202 
i
;

204 
i
 = 
ba£
; i < 
t›
; i++) {

205 
°©us
;

207 
°©us
 = 
	`±hªad_¸óã
(&
g
->
sysdï
->
thªads
[
i
], 
NULL
, 
__cûkπs_w‹kî_°ub
, g->
w‹kîs
[i]);

208 i‡(
°©us
 != 0)

209 
	`__cûkπs_bug
("CûkÑu¡imêîr‹:Åhªad cª©i⁄ (%dËÁûed: %d\n", 
i
, 
°©us
);

211 
	}
}

213 #i‡
PARALLEL_THREAD_CREATE


214 vﬁ©ûê
	gthªads_¸óãd
 = 0;

218 * 
	$¸óã_thªads_™d_w‹k
 (* 
¨g
)

220 
globÆ_°©e_t
 *
g
 = ((
__cûkπs_w‹kî
 *)
¨g
)->g;

222 
	`¸óã_thªads
(
g
, g->
P
/2, g->P-1);

224 
thªads_¸óãd
 = 1;

227  
	`__cûkπs_w‹kî_°ub
 (
¨g
);

228 
	}
}

230 
	$__cûkπs_°¨t_w‹kîs
(
globÆ_°©e_t
 *
g
, 
n
)

232 
g
->
w‹kîs_ru¬ög
 = 1;

233 
g
->
w‹k_d⁄e
 = 0;

235 i‡(!
g
->
sysdï
->
thªads
)

239 i‡(
n
 > 0)

241 #i‡
PARALLEL_THREAD_CREATE


242 
°©us
;

244 
hÆf_thªads
 = (
n
+1)/2;

247 
°©us
 = 
	`±hªad_¸óã
(&
g
->
sysdï
->
thªads
[0], 
NULL
, 
¸óã_thªads_™d_w‹k
, g->
w‹kîs
[0]);

249 i‡(
°©us
 != 0)

250 
	`__cûkπs_bug
("CûkÑu¡imêîr‹:Åhªad cª©i⁄ (0ËÁûed: %d\n", 
°©us
);

253 
	`¸óã_thªads
(
g
, 1, 
hÆf_thªads
);

257 !
thªads_¸óãd
)

258 
	`__cûkπs_yõld
();

261 
	`¸óã_thªads
(
g
, 0, 
n
);

266 
	`wrôe_vîsi⁄_fûe
(
g
, 
n
);

270 
	}
}

272 
	$__cûkπs_°›_w‹kîs
(
globÆ_°©e_t
 *
g
)

274 
i
;

278 
g
->
w‹k_d⁄e
 = 1;

280 i‡(
g
->
w‹kîs_ru¬ög
 == 0)

283 i‡(!
g
->
sysdï
->
thªads
)

287 i‡(
g
->
P
 > 1) {

288 
	`CILK_ASSERT
(
g
->
w‹kîs
[0]->
l
->
sig«l_node
);

289 
	`sig«l_node_msg
(
g
->
w‹kîs
[0]->
l
->
sig«l_node
, 1);

292 
i
 = 0; i < 
g
->
P
 - 1; ++i) {

293 
sc_°©us
;

294 *
th_°©us
;

296 
sc_°©us
 = 
	`±hªad_joö
(
g
->
sysdï
->
thªads
[
i
], &
th_°©us
);

297 i‡(
sc_°©us
 != 0)

298 
	`__cûkπs_bug
("CûkÑu¡imêîr‹:Åhªad joö (%dËÁûed: %d\n", 
i
, 
sc_°©us
);

301 
g
->
w‹kîs_ru¬ög
 = 0;

305 
	}
}

311 
ölöe
 
	$ª°‹e_Â_°©e
 (
__cûkπs_°ack_‰ame
 *
sf
) {

312 #i‡
deföed
 
__i386__
 || deföed 
__x86_64


313 
	`__asm__
 ( "ldmxcsr %0\n\t"

317 : "m" (
sf
->
mxc§
), "m" (sf->
Âc§
));

321 
	}
}

336 
NORETURN
 
	$__cûkπs_ªsume
(
__cûkπs_w‹kî
 *
w
, 
fuŒ_‰ame
 *
ff
,

337 
__cûkπs_°ack_‰ame
 *
sf
)

342 c⁄° 
Êags
 = 
sf
->flags;

343 *
•
;

345 
w
->
cuºít_°ack_‰ame
 = 
sf
;

346 
sf
->
w‹kî
 = 
w
;

347 
	`CILK_ASSERT
(
Êags
 & 
CILK_FRAME_SUSPENDED
);

348 #i‚de‡
CILK_IVARS


349 
	`CILK_ASSERT
(!
sf
->
ˇŒ_∑ª¡
);

350 
	`CILK_ASSERT
(
w
->
hód
 =w->
èû
);

353 i‡(
ff
->
simuœãd_°ﬁí
)

358 
	`SP
(
sf
Ë
ff
->
sync_•
;

360 
	`¥ötf
("abouàtÿªsumêwôh w‹kî %d f‡%∞™d s‡%p\n",
w
->
£lf
, 
ff
, 
sf
);

361 
•
 = 
	`SP
(
sf
);

364 ((vﬁ©ûê*)
•
)[-1];

367 
	`__cûkπs_èke_°ack
(
ff
, 
•
);

370 i‡(
ff
->
simuœãd_°ﬁí
)

371 
	`CILK_ASSERT
(
Êags
 & 
CILK_FRAME_UNSYNCHED
 && 
ff
->
sync_•
 =
NULL
);

372 i‡(
Êags
 & 
CILK_FRAME_UNSYNCHED
)

374 
	`CILK_ASSERT
(
ff
->
°ack_£lf
 !
NULL
 && ff->
sync_•
 != NULL);

377 
	`CILK_ASSERT
((
ff
->
sync_ma°î
 =0 || ff->sync_ma°î =
w
) &&

378 
ff
->
sync_•
 == 0);

383 
	`ITT_SYNC_ACQUIRED
(
sf
->
w‹kî
);

384 #ifde‡
ENABLE_NOTIFY_ZC_INTRINSIC


385 
	`__nŸify_zc_öåösic
("cûk_c⁄töue", 
sf
);

388 i‡(
ff
->
°ack_£lf
) {

390 
	`__cûkπs_övoke_°ack_›
(
w
, 
CILK_TBB_STACK_ADOPT
, 
ff
->
°ack_£lf
);

393 
sf
->
Êags
 &~
CILK_FRAME_SUSPENDED
;

395 #i‚de‡
__MIC__


396 i‡(
	`CILK_FRAME_VERSION_VALUE
(
sf
->
Êags
) >= 1) {

401 
	`ª°‹e_Â_°©e
(
sf
);

405 
	`CILK_LONGJMP
(
sf
->
˘x
);

408 
	}
}

410 
	~<°ddef.h
>

411 
	~<°dlib.h
>

412 
	~<°rög.h
>

413 
	~<sys/mm™.h
>

414 
	~<î∫o.h
>

416 
	s__cûkπs_°ack


421 *
	mt›
;

422 
size_t
 
	msize
;

423 
±hªad_t
 
	mow√r
;

426 
__cûk_tbb_p‚_°ack_›
 
	m°ack_›_routöe
;

427 *
	m°ack_›_d©a
;

430 
	$__cûkπs_£t_°ack_›
(
__cûkπs_°ack
 *
sd
,

431 
__cûk_tbb_°ack_›_thunk
 
o
)

433 
sd
->
°ack_›_routöe
 = 
o
.
routöe
;

434 
sd
->
°ack_›_d©a
 = 
o
.
d©a
;

435 
	}
}

437 
	$__cûkπs_övoke_°ack_›
(
__cûkπs_w‹kî
 *
w
,

438 
__cûk_tbb_°ack_›
 
›
,

439 
__cûkπs_°ack
 *
sd
)

442 i‡(
NULL
 =
sd
)

445 i‡(0 =
sd
->
°ack_›_routöe
)

450 (*
sd
->
°ack_›_routöe
)(
›
,sd->
°ack_›_d©a
);

451 i‡(
›
 =
CILK_TBB_STACK_RELEASE
)

453 
sd
->
°ack_›_routöe
 = 0;

454 
sd
->
°ack_›_d©a
 = 0;

456 
	}
}

464 
	$tbb_öãr›_ßve_°ack_›_öfo
(
__cûk_tbb_°ack_›_thunk
 
o
)

466 
__cûk_tbb_°ack_›_thunk
 *
ßved_thunk
 =

467 
	`__cûkπs_gë_és_tbb_öãr›
();

470 i‡(
NULL
 =
ßved_thunk
) {

471 
ßved_thunk
 = (
__cûk_tbb_°ack_›_thunk
*)

472 
	`__cûkπs_mÆloc
((
__cûk_tbb_°ack_›_thunk
));

473 
	`__cûkπs_£t_és_tbb_öãr›
(
ßved_thunk
);

476 *
ßved_thunk
 = 
o
;

477 
	}
}

485 
	$tbb_öãr›_ßve_öfo_‰om_°ack
(
__cûkπs_°ack
 *
sd
)

487 
__cûk_tbb_°ack_›_thunk
 *
ßved_thunk
;

490 i‡(
NULL
 =
sd
 || NULL =sd->
°ack_›_routöe
) ;

492 
ßved_thunk
 = 
	`__cûkπs_gë_és_tbb_öãr›
();

495 i‡(
NULL
 =
ßved_thunk
) {

496 
ßved_thunk
 = (
__cûk_tbb_°ack_›_thunk
*)

497 
	`__cûkπs_mÆloc
((
__cûk_tbb_°ack_›_thunk
));

498 
	`__cûkπs_£t_és_tbb_öãr›
(
ßved_thunk
);

501 
ßved_thunk
->
routöe
 = 
sd
->
°ack_›_routöe
;

502 
ßved_thunk
->
d©a
 = 
sd
->
°ack_›_d©a
;

503 
	}
}

511 
	$tbb_öãr›_u£_ßved_°ack_›_öfo
(
__cûkπs_w‹kî
 *
w
,

512 
__cûkπs_°ack
 *
sd
)

514 
__cûk_tbb_°ack_›_thunk
 *
ßved_thunk
 =

515 
	`__cûkπs_gë_és_tbb_öãr›
();

518 i‡(
NULL
 =
ßved_thunk
) ;

521 
	`__cûkπs_£t_°ack_›
(
sd
, *
ßved_thunk
);

525 
	`tbb_öãr›_‰ì_°ack_›_öfo
();

526 
	}
}

534 
	$tbb_öãr›_‰ì_°ack_›_öfo
()

536 
__cûk_tbb_°ack_›_thunk
 *
ßved_thunk
 =

537 
	`__cûkπs_gë_és_tbb_öãr›
();

540 i‡(
NULL
 =
ßved_thunk
) ;

543 
	`__cûkπs_‰ì
(
ßved_thunk
);

544 
	`__cûkπs_£t_és_tbb_öãr›
(
NULL
);

545 
	}
}

547 
	$__cûkπs_böd_°ack
(
fuŒ_‰ame
 *
ff
, *
√w_•
,

548 
__cûkπs_°ack
 *
∑ª¡_°ack
,

549 
__cûkπs_w‹kî
 *
ow√r
)

551 
__cûkπs_°ack_‰ame
 *
sf
 = 
ff
->
ˇŒ_°ack
;

552 
__cûkπs_°ack
 *
sd
 = 
ff
->
°ack_£lf
;

553 
	`CILK_ASSERT
( 
	`SP
(
sf
Ë< (
size_t
));

555 
	`SP
(
sf
Ë
√w_•
;

559 
	}
}

561 *
	$__cûkπs_°ack_to_poöãr
(
__cûkπs_°ack
 *
s
, 
__cûkπs_°ack_‰ame
 *
sf
)

563 i‡(!
s
)

564  
NULL
;

571 
	#SMASK
 31

	)

572 i‡(
sf
) {

573 *
Â
 = 
	`FP
(
sf
), *
•
 = 
	`SP
(sf);

574 
Â_Æign
 = ()(
size_t
)
Â
 & 
SMASK
;

575 
±rdiff_t
 
•a˚
 = 
Â
 - 
•
;

576 *
t›_Æig√d
 = (*)((((
size_t
)
s
->
t›
 - 
SMASK
Ë& ~(size_t)SMASKË| 
Â_Æign
);

578 i‡(
•a˚
 < 32)

579 
•a˚
 = 32 + (•a˚ & 
SMASK
);

580 i‡(
•a˚
 > 40 * 1024)

581 
•a˚
 = 40 * 1024 + (•a˚ & 
SMASK
);

582  
t›_Æig√d
 - 
•a˚
;

584  
s
->
t›
 - 256;

585 
	}
}

587 
	#PAGE
 4096

	)

596 *
	$sysdï_make_töy_°ack
 (
__cûkπs_w‹kî
 *
w
)

598 *
p
;

599 
__cûkπs_°ack
 *
s
;

601 #i‚de‡
MAP_ANONYMOUS


602 
	#MAP_ANONYMOUS
 
MAP_ANON


	)

605 
p
 = 
	`mm≠
(0, 
PAGE
 * 18, 
PROT_READ
|
PROT_WRITE
, 
MAP_PRIVATE
|
MAP_ANONYMOUS
,

607 i‡(
MAP_FAILED
 =
p
) {

610 i‡(0 =
	`__cûkπs_xchg
(&
w
->
g
->
Áûuª_to_Æloˇã_°ack
, 1)) {

611 
	`cûkos_w¨nög
("FailedÅoállocate memory foráÇew stack.\n"

614  
NULL
;

616 
	`m¥Ÿe˘
(
p
 + (17 * 
PAGE
), PAGE, 
PROT_NONE
);

617 
	`m¥Ÿe˘
(
p
, 
PAGE
, 
PROT_NONE
);

619  (*)(
p
 + (17 * 
PAGE
));

620 
	}
}

625 
	$sysdï_de°roy_töy_°ack
 (*
p
)

627 *
s
 = (*)
p
;

628 
s
 = s - (17 * 
PAGE
);

629 
	`munm≠
((*)
s
, 18 * 
PAGE
);

630 
	}
}

632 
__cûkπs_°ack
 *
	$__cûkπs_make_°ack
(
__cûkπs_w‹kî
 *
w
)

634 
__cûkπs_°ack
 *
s
;

635 *
p
;

636 
size_t
 
°ack_size
;

638 #i‡
deföed
 
CILK_PROFILE
 && deföed 
HAVE_SYNC_INTRINSICS


639 
	#PROFILING_STACKS
 1

	)

641 
	#PROFILING_STACKS
 0

	)

644 i‡(
PROFILING_STACKS
 || 
w
->
g
->
max_°acks
 > 0) {

645 i‡(
w
->
g
->
max_°acks
 > 0 && w->g->
°acks
 > w->g->max_stacks) {

647  
NULL
;

652 
hwm
 = 
	`__sync_add_™d_„tch
(&
w
->
g
->
°acks
, 1);

653 i‡(
w
->
g
->
max_°acks
 > 0 && 
hwm
 > w->g->max_stacks) {

656  
NULL
;

659 #ifde‡
CILK_PROFILE


663 i‡(
PROFILING_STACKS
 && 
hwm
 > 
w
->
l
->
°©s
.
°ack_hwm
) {

664 
w
->
l
->
°©s
.
°ack_hwm
 = 
hwm
;

670 
°ack_size
 = 
w
->
g
->stack_size;

671 
	`CILK_ASSERT
(
°ack_size
 > 0);

673 
p
 = 
	`mm≠
(0, 
°ack_size
, 
PROT_READ
|
PROT_WRITE
, 
MAP_PRIVATE
|
MAP_ANONYMOUS
,

675 i‡(
MAP_FAILED
 =
p
) {

678 i‡(0 =
	`__cûkπs_xchg
(&
w
->
g
->
Áûuª_to_Æloˇã_°ack
, 1)) {

679 
	`cûkos_w¨nög
("FailedÅoállocate memory foráÇew stack.\n"

682  
NULL
;

684 
	`m¥Ÿe˘
(
p
 + 
°ack_size
 - 
PAGE
, PAGE, 
PROT_NONE
);

685 
	`m¥Ÿe˘
(
p
, 
PAGE
, 
PROT_NONE
);

687 
s
 = 
	`__cûkπs_mÆloc
( (
__cûkπs_°ack
));

688 
	`CILK_ASSERT
(
s
);

689 
s
->
t›
 = 
p
 + 
°ack_size
 - 
PAGE
;

690 
s
->
size
 = 
°ack_size
 - (
PAGE
 + PAGE);

691 
	`mem£t
(&
s
->
ow√r
, 0,  s->owner);

693 
s
->
°ack_›_routöe
 = 
NULL
;

694 
s
->
°ack_›_d©a
 = 
NULL
;

696  
s
;

697 
	}
}

699 
	$__cûkπs_‰ì_°ack
(
globÆ_°©e_t
 *
g
,

700 
__cûkπs_°ack
 *
sd
)

702 *
s
;

703 
size_t
 
size
;

705 
	`CILK_ASSERT
(
g
->
max_°acks
 <= 0);

707 #i‡
deföed
 
CILK_PROFILE
 && deföed 
HAVE_SYNC_INTRINSICS


708 
	`__sync_sub_™d_„tch
(&
g
->
°acks
, 1);

711 
s
 = 
sd
->
t›
;

712 
size
 = 
sd
->size;

714 
	`CILK_ASSERT
(
s
 && 
size
);

716 #i‡
__GNUC__


718 *
Â
 = 
	`__buûtö_‰ame_addªss
(0);

719 
	`CILK_ASSERT
(
Â
 < 
s
 - 10000 || fp > s);

723 ((vﬁ©ûê*)
s
)[-1];

725 
s
 +
PAGE
;

726 
size
 +
PAGE
 + PAGE;

728 i‡(
	`munm≠
(
s
 - 
size
, size) < 0)

729 
	`__cûkπs_bug
("Cûk: sèckÑñó£ faûedÉº‹ %d", 
î∫o
);

731 
sd
->
t›
 = 0;

732 
sd
->
size
 = 0;

733 
	`__cûkπs_‰ì
(
sd
);

736 
	}
}

738 
	$__cûkπs_sysdï_ª£t_°ack
(
__cûkπs_°ack
 *
sd
)

740 
	`CILK_ASSERT
(
sd
->
°ack_›_routöe
 =
NULL
);

741 
	`CILK_ASSERT
(
sd
->
°ack_›_d©a
 =
NULL
);

743 
	}
}

745 
	$__cûkπs_make_uƒu¬abÀ_sysdï
(
__cûkπs_w‹kî
 *
w
,

746 
fuŒ_‰ame
 *
ff
,

747 
__cûkπs_°ack_‰ame
 *
sf
,

748 
°©e_vÆid
,

749 c⁄° *
why
)

751 ()
w
;

752 
sf
->
ex˚±_d©a
 = 0;

754 i‡(
°©e_vÆid
 && 
ff
->
‰ame_size
 == 0)

755 
ff
->
‰ame_size
 = 
	`__cûkπs_gë_‰ame_size
(
sf
);

758 #i‚de‡
CILK_IVARS


759 
	`SP
(
sf
) = 0;

761 
	}
}

771 
	$__cûkπs_sysdï_is_w‹kî_thªad_id
(
globÆ_°©e_t
 *
g
,

772 
i
,

773 *
thªad_id
)

775 #ifde‡
__löux__


776 
±hªad_t
 
tid
 = *’thªad_à*)
thªad_id
;

777 i‡(
i
 < 0 || i > 
g
->
tŸÆ_w‹kîs
)

779  
g
->
sysdï
->
thªads
[
i
] =
tid
;

784 
	}
}

786 
	$__cûkπs_sysdï_böd_thªad
(
__cûkπs_w‹kî
 *
w
)

788 i‡(
w
->
£lf
 < 0) {

797 i‡(
NULL
 =
w
->
l
->
scheduÀr_°ack
) {

802 
w
->
l
->
scheduÀr_°ack
 = 
	`sysdï_make_töy_°ack
(w);

806  (
NULL
 =
w
->
l
->
scheduÀr_°ack
 ? -1 : 0);

810 
	}
}

812 
	$__cûkπs_sysdï_unböd_thªad
(
__cûkπs_w‹kî
 *
w
)

815 
	}
}

817 
	$__cûkπs_sysdï_gë_°ack_ªgi⁄_¥›îtõs
(
__cûkπs_°ack
 *
sd
,

818 
__cûkπs_ªgi⁄_¥›îtõs
 *
¥›s
)

821 
	}
}

828 
	~<dlf˙.h
>

829 
	~"öã∫Æ/cûk_vîsi⁄.h
"

830 
	~<°dio.h
>

831 
	~<sys/ut¢ame.h
>

836 
	$dummy_fun˘i⁄
(Ë{ 
	}
}

841 c⁄° *
	$gë_ru¡ime_∑th
 ()

843 #ifde‡
__CYGWIN__


847 
Dl_öfo
 
öfo
;

848 i‡(0 =
	`dœddr
(
dummy_fun˘i⁄
, &
öfo
))  "unknown";

849  
öfo
.
dli_‚ame
;

851 
	}
}

858 
	$wrôe_vîsi⁄_fûe
 (
globÆ_°©e_t
 *
g
, 
n
)

860 c⁄° *
ív
;

861 
buf
[256];

862 
time_t
 
t
;

863 
FILE
 *
Â
;

864 
ut¢ame
 
sys_öfo
;

865 
îr
;

870 i‡(
NULL
 =(
ív
 = 
	`gëív
("CILK_VERSION"))) ;

871 i‡(0 =
	`°rˇ£cmp
(
ív
, "°dîr")Ë
Â
 = 
°dîr
;

872 i‡(0 =
	`°rˇ£cmp
(
ív
, "°dout")Ë
Â
 = 
°dout
;

873 i‡(
NULL
 =(
Â
 = 
	`f›í
(
ív
, "w"))) ;

877 
t
 = 
	`time
(
NULL
);

878 
	`°r·ime
(
buf
, 256, "%®%b %d %H:%M:%S %Y", 
	`loˇ…ime
(&
t
));

879 
	`Ârötf
(
Â
, "CûkÑu¡imêöôülized: %s\n", 
buf
);

889 
	`Ârötf
(
Â
, "\nCilkÑuntime information\n");

890 
	`Ârötf
(
Â
, "========================\n");

891 
	`Ârötf
(
Â
, "Cilk version: %d.%d.%d Build %d\n",

892 
VERSION_MAJOR
,

893 
VERSION_MINOR
,

894 
VERSION_REV
,

895 
VERSION_BUILD
);

896 
	`Ârötf
(
Â
, "Buûàby "
BUILD_USER
" o¿ho° "
BUILD_HOST
"\n");

897 
	`Ârötf
(
Â
, "Compû©i⁄ d©e: "
__DATE__
" "
__TIME__
"\n");

899 #ifde‡
__INTEL_COMPILER


901 
	`Ârötf
(
Â
, "Compiled with ICC V%d.%d.%d, ICC build date: %d\n",

902 
__INTEL_COMPILER
 / 100,

903 (
__INTEL_COMPILER
 / 10) % 10,

904 
__INTEL_COMPILER
 % 10,

905 
__INTEL_COMPILER_BUILD_DATE
);

908 
	`Ârötf
(
Â
, "Compiled with GCC V%d.%d.%d\n",

909 
__GNUC__
,

910 
__GNUC_MINOR__
,

911 
__GNUC_PATCHLEVEL__
);

921 
îr
 = 
	`u«me
(&
sys_öfo
);

922 
	`Ârötf
(
Â
, "\nSystem information\n");

923 
	`Ârötf
(
Â
, "==================\n");

924 
	`Ârötf
(
Â
, "CûkÑu¡imê∑th: %s\n", 
	`gë_ru¡ime_∑th
());

925 
	`Ârötf
(
Â
, "System OS: %s,Ñelease %s\n",

926 
îr
 < 0 ? "unknown" : 
sys_öfo
.
sy¢ame
,

927 
îr
 < 0 ? "?" : 
sys_öfo
.
ªÀa£
);

928 
	`Ârötf
(
Â
, "Systemárchitecture: %s\n",

929 
îr
 < 0 ? "unknown" : 
sys_öfo
.
machöe
);

938 
	`Ârötf
(
Â
, "\nThread information\n");

939 
	`Ârötf
(
Â
, "==================\n");

940 
	`Ârötf
(
Â
, "Sy°em c‹es: %d\n", ()
	`sysc⁄f
(
_SC_NPROCESSORS_ONLN
));

941 
	`Ârötf
(
Â
, "Cûk w‹kî†ªque°ed: %d\n", 
n
);

942 #i‡(
PARALLEL_THREAD_CREATE
)

943 
	`Ârötf
(
Â
, "Thread creator: Private (parallel)\n");

945 
	`Ârötf
(
Â
, "Thread creator: Private\n");

948 i‡(
Â
 !
°dîr
 && f∞!
°dout
Ë
	`f˛o£
(fp);

949 
	`fÊush
(
Â
);

950 
	}
}

963 
	$__cûkπs_e°ablish_c_°ack
()

981 
	}
}

994 
__©åibuã__
((
noölöe
))

995 
	$öã∫Æ_íf‹˚_globÆ_visibûôy
()

997 * 
h™dÀ
 = 
	`dl›í
–
	`gë_ru¡ime_∑th
(), 
RTLD_GLOBAL
|
RTLD_LAZY
 );

1000 if–
h™dÀ
Ë
	`dl˛o£
(handle);

1001 
	}
}

1012 
NOINLINE


1013 
	$w‹kî_u£r_scheduÀr
()

1015 
__cûkπs_w‹kî
 *
w
 = 
	`__cûkπs_gë_és_w‹kî
();

1018 
	`CILK_ASSERT
(
WORKER_USER
 =
w
->
l
->
ty≥
);

1021 
	`run_schedulög_°ack_f˙
(
w
);

1022 
w
->
ªdu˚r_m≠
 = 0;

1024 
	`cûkbug_as£π_no_unˇught_ex˚±i⁄
();

1026 
	`STOP_INTERVAL
(
w
, 
INTERVAL_IN_SCHEDULER
);

1027 
	`STOP_INTERVAL
(
w
, 
INTERVAL_WORKING
);

1031 
	`__cûkπs_run_scheduÀr_wôh_ex˚±i⁄s
(
w
);

1036 
	`CILK_ASSERT
(0);

1037 
	}
}

1045 
	$__cûkπs_sysdï_imp‹t_u£r_thªad
(
__cûkπs_w‹kî
 *
w
)

1047 *
˘x
[5];

1049 
	`CILK_ASSERT
(
w
->
l
->
scheduÀr_°ack
);

1060 i‡(0 =
	`__buûtö_£tjmp
(
˘x
)) {

1061 
˘x
[2] = 
w
->
l
->
scheduÀr_°ack
;

1062 
	`__buûtö_l⁄gjmp
(
˘x
, 1);

1068 
	`w‹kî_u£r_scheduÀr
();

1071 
	`CILK_ASSERT
(0);

1072 
	}
}

1077 
__cûkπs_°ack
 *
	$sysdï_make_u£r_°ack
 (
__cûkπs_w‹kî
 *
w
)

1079  
	`ˇŒoc
(1, (
__cûkπs_°ack
));

1080 
	}
}

1085 
	$sysdï_de°roy_u£r_°ack
 (
__cûkπs_°ack
 *
sd
)

1087 
	`‰ì
(
sd
);

1088 
	}
}

	@sysdep.h

35 #i‚de‡
INCLUDED_SYSDEP_DOT_H


36 
	#INCLUDED_SYSDEP_DOT_H


	)

38 
	~<cûk/comm⁄.h
>

39 
	~<öã∫Æ/abi.h
>

41 
	~"globÆ_°©e.h
"

42 
	~"fuŒ_‰ame.h
"

43 
	~"os.h
"

44 
	~"os_muãx.h
"

46 
	~"cûk-tbb-öãr›.h
"

48 
__CILKRTS_BEGIN_EXTERN_C


51 
__cûkπs_ªgi⁄_¥›îtõs
 
	t__cûkπs_ªgi⁄_¥›îtõs
;

62 
COMMON_SYSDEP


63 
__cûkπs_böd_°ack
(
fuŒ_‰ame
 *
ff
,

64 *
√w_•
,

65 
__cûkπs_°ack
 *
∑ª¡_°ack
,

66 
__cûkπs_w‹kî
 *
ow√r
);

71 
COMMON_SYSDEP


72 *
__cûkπs_°ack_to_poöãr
(
__cûkπs_°ack
 *
sd
,

73 
__cûkπs_°ack_‰ame
 *
sf
);

80 
COMMON_SYSDEP


81 
__cûkπs_öô_globÆ_sysdï
(
globÆ_°©e_t
 *
g
);

88 
COMMON_SYSDEP


89 
__cûkπs_de°roy_globÆ_sysdï
(
globÆ_°©e_t
 *
g
);

95 
COMMON_SYSDEP


96 
__cûkπs_e°ablish_c_°ack
();

106 
COMMON_SYSDEP


107 
__cûkπs_°ack
 *
__cûkπs_make_°ack
(
__cûkπs_w‹kî
 *
w
);

115 
COMMON_SYSDEP


116 
__cûkπs_‰ì_°ack
(
globÆ_°©e_t
 *
g
, 
__cûkπs_°ack
 *
sd
);

126 
COMMON_SYSDEP


127 *
sysdï_make_töy_°ack
 (
__cûkπs_w‹kî
 *
w
);

135 
COMMON_SYSDEP


136 
sysdï_de°roy_töy_°ack
 (*
sd
);

146 
COMMON_SYSDEP


147 
__cûkπs_°ack
 *
sysdï_make_u£r_°ack
 (
__cûkπs_w‹kî
 *
w
);

155 
COMMON_SYSDEP


156 
sysdï_de°roy_u£r_°ack
 (
__cûkπs_°ack
 *
sd
);

163 
COMMON_SYSDEP


164 
__cûkπs_sysdï_ª£t_°ack
(
__cûkπs_°ack
 *
sd
);

180 
COMMON_SYSDEP


181 
__cûkπs_make_uƒu¬abÀ_sysdï
(
__cûkπs_w‹kî
 *
w
,

182 
fuŒ_‰ame
 *
ff
,

183 
__cûkπs_°ack_‰ame
 *
sf
,

184 
°©e_vÆid
,

185 c⁄° *
why
);

194 
COMMON_SYSDEP


195 
NORETURN
 
__cûkπs_ªsume
(
__cûkπs_w‹kî
 *
w
,

196 
fuŒ_‰ame
 *
ff
,

197 
__cûkπs_°ack_‰ame
 *
sf
);

205 
COMMON_SYSDEP


206 
__cûkπs_°¨t_w‹kîs
(
globÆ_°©e_t
 *
g
, 
n
);

213 
COMMON_SYSDEP


214 
__cûkπs_°›_w‹kîs
(
globÆ_°©e_t
 *
g
);

224 
COMMON_SYSDEP


225 
__cûkπs_sysdï_böd_thªad
(
__cûkπs_w‹kî
 *
w
);

233 
COMMON_SYSDEP


234 
__cûkπs_sysdï_unböd_thªad
(
__cûkπs_w‹kî
 *
w
);

243 
COMMON_SYSDEP


244 
__cûkπs_sysdï_imp‹t_u£r_thªad
(
__cûkπs_w‹kî
 *
w
);

255 
COMMON_SYSDEP


256 
__cûkπs_sysdï_gë_°ack_ªgi⁄_¥›îtõs
(
__cûkπs_°ack
 *
sd
,

257 
__cûkπs_ªgi⁄_¥›îtõs
 *
¥›îtõs
);

267 
COMMON_SYSDEP


268 
__cûkπs_sysdï_is_w‹kî_thªad_id
(
globÆ_°©e_t
 *
g
,

269 
i
,

270 
cûkos_thªad_id_t
 
thªad_id
);

282 #ifde‡
_WIN32


284 
CILK_EXPORT
 
__CILKRTS_NOTHROW
 
__°dˇŒ


285 
__cûkπs_w‹kî_°ub
(*
¨g
);

288 
__©åibuã__
((
visibûôy
("default")))

289 * 
__CILKRTS_NOTHROW
 
__cûkπs_w‹kî_°ub
(*
¨g
);

302 
COMMON_SYSDEP


303 
CILK_EXPORT


304 
__cûkπs_öô_w‹kî_sysdï
(
__cûkπs_w‹kî
 *
w
);

311 
COMMON_SYSDEP


312 
__cûkπs_de°roy_w‹kî_sysdï
(
__cûkπs_w‹kî
 *
w
);

321 
COMMON_SYSDEP


322 
__cûkπs_£tup_f‹_executi⁄_sysdï
(
__cûkπs_w‹kî
 *
w
,

323 
fuŒ_‰ame
 *
ff
);

336 
COMMON_SYSDEP


337 
__cûkπs_£t_°ack_›
(
__cûkπs_°ack
 *
sd
,

338 
__cûk_tbb_°ack_›_thunk
 
o
);

347 
COMMON_SYSDEP


349 
__cûkπs_övoke_°ack_›
(
__cûkπs_w‹kî
 *
w
,

350 
__cûk_tbb_°ack_›
 
›
,

351 
__cûkπs_°ack
 *
sd
);

359 
COMMON_SYSDEP


360 
tbb_öãr›_ßve_°ack_›_öfo
(
__cûk_tbb_°ack_›_thunk
 
o
);

370 
COMMON_SYSDEP


371 
tbb_öãr›_u£_ßved_°ack_›_öfo
(
__cûkπs_w‹kî
 *
w
,

372 
__cûkπs_°ack
 *
sd
);

377 
COMMON_SYSDEP


378 
tbb_öãr›_‰ì_°ack_›_öfo
();

388 
COMMON_SYSDEP


389 
tbb_öãr›_ßve_öfo_‰om_°ack
(
__cûkπs_°ack
 *
sd
);

392 
	g__CILKRTS_END_EXTERN_C


	@worker_mutex.c

29 
	~"w‹kî_muãx.h
"

30 
	~"bug.h
"

31 
	~"os.h
"

32 
	~"°©s.h
"

35 
	#TRY_ACQUIRE
(
m
Ë(
	`__cûkπs_xchg
(&(m)->
lock
, 1Ë=0)

	)

39 #i‡
__ICC
 >= 1110

40 
	#RELEASE
(
m
Ë
	`__sync_lock_ªÀa£
(&(m)->
lock
)

	)

42 
	#RELEASE
(
m
Ë
	`__cûkπs_xchg
(&(m)->
lock
, 0)

	)

45 
	$__cûkπs_muãx_öô
(
muãx
 *
m
)

47 
m
->
ow√r
 = 0;

53 
m
->
lock
 = 0;

54 
	}
}

56 
	$__cûkπs_muãx_lock
(
__cûkπs_w‹kî
 *
w
, 
muãx
 *
m
)

58 
cou¡
;

59 c⁄° 
max•ö
 = 1000;

61 
	`NOTE_INTERVAL
(
w
, 
INTERVAL_MUTEX_LOCK
);

62 i‡(!
	`TRY_ACQUIRE
(
m
)) {

63 
	`START_INTERVAL
(
w
, 
INTERVAL_MUTEX_LOCK_SPINNING
);

64 
cou¡
 = 0;

67 
	`__cûkπs_sh‹t_∑u£
();

69 i‡(++
cou¡
 >
max•ö
) {

70 
	`STOP_INTERVAL
(
w
, 
INTERVAL_MUTEX_LOCK_SPINNING
);

71 
	`START_INTERVAL
(
w
, 
INTERVAL_MUTEX_LOCK_YIELDING
);

73 
	`__cûkπs_yõld
();

74 
	`STOP_INTERVAL
(
w
, 
INTERVAL_MUTEX_LOCK_YIELDING
);

75 
	`START_INTERVAL
(
w
, 
INTERVAL_MUTEX_LOCK_SPINNING
);

76 
cou¡
 = 0;

78 } 
m
->
lock
 != 0);

79 } !
	`TRY_ACQUIRE
(
m
));

80 
	`STOP_INTERVAL
(
w
, 
INTERVAL_MUTEX_LOCK_SPINNING
);

83 
	`CILK_ASSERT
(
m
->
ow√r
 == 0);

84 
m
->
ow√r
 = 
w
;

85 
	}
}

87 
	$__cûkπs_muãx_åylock
(
__cûkπs_w‹kî
 *
w
, 
muãx
 *
m
)

89 
	`NOTE_INTERVAL
(
w
, 
INTERVAL_MUTEX_TRYLOCK
);

90 i‡(
	`TRY_ACQUIRE
(
m
)) {

91 
	`CILK_ASSERT
(
m
->
ow√r
 == 0);

92 
m
->
ow√r
 = 
w
;

97 
	}
}

99 
	$__cûkπs_muãx_u∆ock
(
__cûkπs_w‹kî
 *
w
, 
muãx
 *
m
)

101 
	`CILK_ASSERT
(
m
->
ow√r
 =
w
);

102 
m
->
ow√r
 = 0;

103 
	`RELEASE
(
m
);

104 
	}
}

106 
	$__cûkπs_muãx_de°roy
(
__cûkπs_w‹kî
 *
w
, 
muãx
 *
m
)

108 ()
w
;

109 ()
m
;

110 
	}
}

	@worker_mutex.h

37 #i‚de‡
INCLUDED_WORKER_MUTEX_DOT_H


38 
	#INCLUDED_WORKER_MUTEX_DOT_H


	)

40 
	~<cûk/comm⁄.h
>

41 
	~"πs-comm⁄.h
"

43 
__CILKRTS_BEGIN_EXTERN_C


46 
__cûkπs_w‹kî
 
	t__cûkπs_w‹kî
;

53 
	smuãx
 {

55 vﬁ©ûê
	mlock
;

58 
__cûkπs_w‹kî
 *
	mow√r
;

59 } 
	tmuãx
;

66 
COMMON_PORTABLE


67 
__cûkπs_muãx_öô
(
muãx
 *
m
);

76 
COMMON_PORTABLE


77 
__cûkπs_muãx_lock
(
__cûkπs_w‹kî
 *
w
,

78 
muãx
 *
m
);

90 
COMMON_PORTABLE


91 
__cûkπs_muãx_åylock
(
__cûkπs_w‹kî
 *
w
,

92 
muãx
 *
m
);

104 
COMMON_PORTABLE


105 
__cûkπs_muãx_u∆ock
(
__cûkπs_w‹kî
 *
w
,

106 
muãx
 *
m
);

113 
COMMON_PORTABLE


114 
__cûkπs_muãx_de°roy
(
__cûkπs_w‹kî
 *
w
,

115 
muãx
 *
m
);

117 
	g__CILKRTS_END_EXTERN_C


	@/usr/include/assert.h

23 #ifdef 
_ASSERT_H


25 #unde‡
_ASSERT_H


26 #unde‡
as£π


27 #unde‡
__ASSERT_VOID_CAST


29 #ifdef 
__USE_GNU


30 #unde‡
as£π_≥º‹


35 
	#_ASSERT_H
 1

	)

36 
	~<„©uªs.h
>

38 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

39 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

41 
	#__ASSERT_VOID_CAST
 ()

	)

49 #ifdef 
NDEBUG


51 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

59 #ifdef 
__USE_GNU


60 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

65 
__BEGIN_DECLS


68 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

69 
__löe
, c⁄° *
__fun˘i⁄
)

70 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

73 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

74 
__löe
, c⁄° *
__fun˘i⁄
)

75 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

80 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

81 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
__END_DECLS


86 
	#as£π
(
ex¥
) \

87 ((
ex¥
) \

88 ? 
	`__ASSERT_VOID_CAST
 (0) \

89 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

91 #ifdef 
__USE_GNU


92 
	#as£π_≥º‹
(
î∫um
) \

93 (!(
î∫um
) \

94 ? 
	`__ASSERT_VOID_CAST
 (0) \

95 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

103 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

104 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

106 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

107 
	#__ASSERT_FUNCTION
 
__func__


	)

109 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

116 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


118 #unde‡
°©ic_as£π


119 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/dlfcn.h

20 #i‚def 
_DLFCN_H


21 
	#_DLFCN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

28 
	~<bôs/dlf˙.h
>

31 #ifde‡
__USE_GNU


36 
	#RTLD_NEXT
 ((*Ë-1l)

	)

41 
	#RTLD_DEFAULT
 ((*Ë0)

	)

45 
	tLmid_t
;

48 
	#LM_ID_BASE
 0

	)

49 
	#LM_ID_NEWLM
 -1

	)

53 
__BEGIN_DECLS


57 *
	$dl›í
 (c⁄° *
__fûe
, 
__mode
Ë
__THROW
;

61 
	$dl˛o£
 (*
__h™dÀ
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 *
	$dlsym
 (*
__ª°ri˘
 
__h™dÀ
,

66 c⁄° *
__ª°ri˘
 
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

68 #ifde‡
__USE_GNU


70 *
	$dlm›í
 (
Lmid_t
 
__nsid
, c⁄° *
__fûe
, 
__mode
Ë
__THROW
;

74 *
	$dlvsym
 (*
__ª°ri˘
 
__h™dÀ
,

75 c⁄° *
__ª°ri˘
 
__«me
,

76 c⁄° *
__ª°ri˘
 
__vîsi⁄
)

77 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

83 *
	$dÀº‹
 (Ë
__THROW
;

86 #ifde‡
__USE_GNU


91 c⁄° *
dli_‚ame
;

92 *
dli_fba£
;

93 c⁄° *
dli_¢ame
;

94 *
dli_ßddr
;

95 } 
	tDl_öfo
;

99 
	$dœddr
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
)

100 
__THROW
 
	`__n⁄nuŒ
 ((2));

103 
	$dœddr1
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
,

104 **
__exåa_öfo
, 
__Êags
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

112 
RTLD_DL_SYMENT
 = 1,

115 
RTLD_DL_LINKMAP
 = 2

124 
	$dlöfo
 (*
__ª°ri˘
 
__h™dÀ
,

125 
__ªque°
, *
__ª°ri˘
 
__¨g
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

132 
RTLD_DI_LMID
 = 1,

136 
RTLD_DI_LINKMAP
 = 2,

138 
RTLD_DI_CONFIGADDR
 = 3,

145 
RTLD_DI_SERINFO
 = 4,

146 
RTLD_DI_SERINFOSIZE
 = 5,

150 
RTLD_DI_ORIGIN
 = 6,

152 
RTLD_DI_PROFILENAME
 = 7,

153 
RTLD_DI_PROFILEOUT
 = 8,

158 
RTLD_DI_TLS_MODID
 = 9,

164 
RTLD_DI_TLS_DATA
 = 10,

166 
RTLD_DI_MAX
 = 10

174 *
dls_«me
;

175 
dls_Êags
;

176 } 
	tDl_£Ω©h
;

182 
size_t
 
dls_size
;

183 
dls_˙t
;

184 
Dl_£Ω©h
 
dls_£Ω©h
[1];

185 } 
	tDl_£röfo
;

189 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/limits.h

23 #i‚de‡
_LIBC_LIMITS_H_


24 
	#_LIBC_LIMITS_H_
 1

	)

26 
	~<„©uªs.h
>

32 
	#MB_LEN_MAX
 16

	)

37 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

42 #i‚de‡
_LIMITS_H


43 
	#_LIMITS_H
 1

	)

45 
	~<bôs/w‹dsize.h
>

54 
	#CHAR_BIT
 8

	)

57 
	#SCHAR_MIN
 (-128)

	)

58 
	#SCHAR_MAX
 127

	)

61 
	#UCHAR_MAX
 255

	)

64 #ifde‡
__CHAR_UNSIGNED__


65 
	#CHAR_MIN
 0

	)

66 
	#CHAR_MAX
 
UCHAR_MAX


	)

68 
	#CHAR_MIN
 
SCHAR_MIN


	)

69 
	#CHAR_MAX
 
SCHAR_MAX


	)

73 
	#SHRT_MIN
 (-32768)

	)

74 
	#SHRT_MAX
 32767

	)

77 
	#USHRT_MAX
 65535

	)

80 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

81 
	#INT_MAX
 2147483647

	)

84 
	#UINT_MAX
 4294967295U

	)

87 #i‡
__WORDSIZE
 == 64

88 
	#LONG_MAX
 9223372036854775807L

	)

90 
	#LONG_MAX
 2147483647L

	)

92 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

95 #i‡
__WORDSIZE
 == 64

96 
	#ULONG_MAX
 18446744073709551615UL

	)

98 
	#ULONG_MAX
 4294967295UL

	)

101 #ifde‡
__USE_ISOC99


104 
	#LLONG_MAX
 9223372036854775807LL

	)

105 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

108 
	#ULLONG_MAX
 18446744073709551615ULL

	)

122 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


124 #ö˛ude_√xà<
limôs
.
h
>

130 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


131 #i‚de‡
LLONG_MIN


132 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

134 #i‚de‡
LLONG_MAX


135 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

137 #i‚de‡
ULLONG_MAX


138 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

142 #ifdef 
__USE_POSIX


144 
	~<bôs/posix1_lim.h
>

147 #ifdef 
__USE_POSIX2


148 
	~<bôs/posix2_lim.h
>

151 #ifdef 
__USE_XOPEN


152 
	~<bôs/x›í_lim.h
>

	@/usr/include/malloc.h

20 #i‚de‡
_MALLOC_H


21 
	#_MALLOC_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°ddef.h
>

25 
	~<°dio.h
>

26 
	#__mÆloc_±r_t
 *

	)

29 
	#__mÆloc_size_t
 
size_t


	)

30 
	#__mÆloc_±rdiff_t
 
±rdiff_t


	)

32 #ifde‡
__GNUC__


34 
	#__MALLOC_P
(
¨gs
Ë¨g†
__THROW


	)

37 
	#__MALLOC_PMT
(
¨gs
Ë
	)
args

39 #ifde‡
_LIBC


40 
	#__MALLOC_HOOK_VOLATILE


	)

41 
	#__MALLOC_DEPRECATED


	)

43 
	#__MALLOC_HOOK_VOLATILE
 vﬁ©ûe

	)

44 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

49 
	#__MALLOC_P
(
¨gs
Ë
	)
args

50 
	#__MALLOC_PMT
(
¨gs
Ë
	)
args

51 
	#__MALLOC_HOOK_VOLATILE


	)

52 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

57 
__BEGIN_DECLS


60 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

63 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

64 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

71 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

72 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

75 
	$‰ì
 (*
__±r
Ë
__THROW
;

78 
	$c‰ì
 (*
__±r
Ë
__THROW
;

81 *
	$memÆign
 (
size_t
 
__Æignmít
, size_à
__size
)

82 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

85 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

89 * 
	$pvÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

93 *(*
__m‹ec‹e
Ë(
±rdiff_t
 
__size
);

96 *
	$__deÁu…_m‹ec‹e
 (
±rdiff_t
 
__size
)

97 
__THROW
 
__©åibuã_mÆloc__
;

101 
	smÆlöfo


103 
¨ía
;

104 
‹dblks
;

105 
smblks
;

106 
hblks
;

107 
hblkhd
;

108 
usmblks
;

109 
fsmblks
;

110 
u‹dblks
;

111 
f‹dblks
;

112 
kìpco°
;

116 
mÆlöfo
 
	$mÆlöfo
 (Ë
__THROW
;

119 #i‚de‡
M_MXFAST


120 
	#M_MXFAST
 1

	)

122 #i‚de‡
M_NLBLKS


123 
	#M_NLBLKS
 2

	)

125 #i‚de‡
M_GRAIN


126 
	#M_GRAIN
 3

	)

128 #i‚de‡
M_KEEP


129 
	#M_KEEP
 4

	)

133 
	#M_TRIM_THRESHOLD
 -1

	)

134 
	#M_TOP_PAD
 -2

	)

135 
	#M_MMAP_THRESHOLD
 -3

	)

136 
	#M_MMAP_MAX
 -4

	)

137 
	#M_CHECK_ACTION
 -5

	)

138 
	#M_PERTURB
 -6

	)

139 
	#M_ARENA_TEST
 -7

	)

140 
	#M_ARENA_MAX
 -8

	)

143 
	$mÆl›t
 (
__∑øm
, 
__vÆ
Ë
__THROW
;

147 
	$mÆloc_åim
 (
size_t
 
__∑d
Ë
__THROW
;

151 
size_t
 
	$mÆloc_ußbÀ_size
 (*
__±r
Ë
__THROW
;

154 
	$mÆloc_°©s
 (Ë
__THROW
;

157 
	$mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
Ë
__THROW
;

160 *
	$mÆloc_gë_°©e
 (Ë
__THROW
;

164 
	$mÆloc_£t_°©e
 (*
__±r
Ë
__THROW
;

169 (*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_öôülize_hook
) ()

170 
__MALLOC_DEPRECATED
;

172 (*
__MALLOC_HOOK_VOLATILE
 
__‰ì_hook
Ë(*
__±r
,

173 c⁄° 
__mÆloc_±r_t
)

174 
__MALLOC_DEPRECATED
;

175 *(*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_hook
Ë(
size_t
 
__size
,

176 c⁄° 
__mÆloc_±r_t
)

177 
__MALLOC_DEPRECATED
;

178 *(*
__MALLOC_HOOK_VOLATILE
 
__ªÆloc_hook
Ë(*
__±r
,

179 
size_t
 
__size
,

180 c⁄° 
__mÆloc_±r_t
)

181 
__MALLOC_DEPRECATED
;

182 *(*
__MALLOC_HOOK_VOLATILE
 
__memÆign_hook
Ë(
size_t
 
__Æignmít
,

183 
size_t
 
__size
,

184 c⁄° 
__mÆloc_±r_t
)

185 
__MALLOC_DEPRECATED
;

186 (*
__MALLOC_HOOK_VOLATILE
 
__a·î_m‹ec‹e_hook
) ();

189 
	$__mÆloc_check_öô
 (Ë
__THROW
 
__MALLOC_DEPRECATED
;

192 
__END_DECLS


	@/usr/include/math.h

24 #i‚def 
_MATH_H


25 
	#_MATH_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 
	~<bôs/huge_vÆ.h
>

34 #ifde‡
__USE_ISOC99


35 
	~<bôs/huge_vÆf.h
>

36 
	~<bôs/huge_vÆl.h
>

39 
	~<bôs/öf.h
>

42 
	~<bôs/«n.h
>

46 
	~<bôs/m©hdef.h
>

53 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

54 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

55 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

56 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

57 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

58 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

59 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

60 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

61 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

62 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

63 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

64 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

66 
	#_MdoubÀ_
 

	)

67 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

68 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

69 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

70 
	~<bôs/m©hˇŒs.h
>

71 #unde‡
_MdoubÀ_


72 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


73 #unde‡
_MdoubÀ_END_NAMESPACE


74 #unde‡
__MATH_PRECNAME


76 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


82 #i‚de‡
_MÊﬂt_


83 
	#_MÊﬂt_
 

	)

85 
	#_MdoubÀ_
 
_MÊﬂt_


	)

86 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

87 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

88 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

89 
	~<bôs/m©hˇŒs.h
>

90 #unde‡
_MdoubÀ_


91 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


92 #unde‡
_MdoubÀ_END_NAMESPACE


93 #unde‡
__MATH_PRECNAME


95 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

96 || 
deföed
 
__LDBL_COMPAT


97 #ifde‡
__LDBL_COMPAT


99 #ifde‡
__USE_ISOC99


100 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

101 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

102 #ifde‡
__REDIRECT_NTH


103 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

104 
__∆dbl_√xâow¨df
)

105 
	`__©åibuã__
 ((
__c⁄°__
));

106 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

107 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

108 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

109 (
__x
, 
__y
),

110 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

114 #unde‡
__MATHDECL_1


115 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

116 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

117 
¨gs
, 
Æüs
)

	)

118 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

119 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

125 #i‚de‡
_Ml⁄g_doubÀ_


126 
	#_Ml⁄g_doubÀ_
 

	)

128 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

129 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

130 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

131 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

132 
	#__MATH_DECLARE_LDOUBLE
 1

	)

133 
	~<bôs/m©hˇŒs.h
>

134 #unde‡
_MdoubÀ_


135 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


136 #unde‡
_MdoubÀ_END_NAMESPACE


137 #unde‡
__MATH_PRECNAME


142 #unde‡
__MATHDECL_1


143 #unde‡
__MATHDECL


144 #unde‡
__MATHCALL


147 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


149 
signgam
;

154 #ifde‡
__USE_ISOC99


192 
FP_NAN
 =

193 
	#FP_NAN
 0

	)

194 
FP_NAN
,

195 
FP_INFINITE
 =

196 
	#FP_INFINITE
 1

	)

197 
FP_INFINITE
,

198 
FP_ZERO
 =

199 
	#FP_ZERO
 2

	)

200 
FP_ZERO
,

201 
FP_SUBNORMAL
 =

202 
	#FP_SUBNORMAL
 3

	)

203 
FP_SUBNORMAL
,

204 
FP_NORMAL
 =

205 
	#FP_NORMAL
 4

	)

206 
FP_NORMAL


210 #ifde‡
__NO_LONG_DOUBLE_MATH


211 
	#Â˛assify
(
x
) \

212 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

214 
	#Â˛assify
(
x
) \

215 ( (
x
) ==  () \

216 ? 
	`__Â˛assifyf
 (
x
) \

217 :  (
x
) ==  () \

218 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

222 #ifde‡
__NO_LONG_DOUBLE_MATH


223 
	#signbô
(
x
) \

224 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

226 
	#signbô
(
x
) \

227 ( (
x
) ==  () \

228 ? 
	`__signbôf
 (
x
) \

229 :  (
x
) ==  () \

230 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

234 #ifde‡
__NO_LONG_DOUBLE_MATH


235 
	#isföôe
(
x
) \

236 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

238 
	#isföôe
(
x
) \

239 ( (
x
) ==  () \

240 ? 
	`__föôef
 (
x
) \

241 :  (
x
) ==  () \

242 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

246 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

250 #ifde‡
__NO_LONG_DOUBLE_MATH


251 
	#i¢™
(
x
) \

252 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

254 
	#i¢™
(
x
) \

255 ( (
x
) ==  () \

256 ? 
	`__i¢™f
 (
x
) \

257 :  (
x
) ==  () \

258 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

262 #ifde‡
__NO_LONG_DOUBLE_MATH


263 
	#isöf
(
x
) \

264 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

266 
	#isöf
(
x
) \

267 ( (
x
) ==  () \

268 ? 
	`__isöff
 (
x
) \

269 :  (
x
) ==  () \

270 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

274 
	#MATH_ERRNO
 1

	)

275 
	#MATH_ERREXCEPT
 2

	)

280 #i‚de‡
__FAST_MATH__


281 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

286 #ifdef 
__USE_MISC


290 
_IEEE_
 = -1,

291 
_SVID_
,

292 
_XOPEN_
,

293 
_POSIX_
,

294 
_ISOC_


295 } 
	t_LIB_VERSION_TYPE
;

300 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

304 #ifde‡
__USE_SVID


310 #ifde‡
__˝lu•lus


311 
__ex˚±i⁄


313 
ex˚±i⁄


316 
ty≥
;

317 *
«me
;

318 
¨g1
;

319 
¨g2
;

320 
ªtvÆ
;

321 
	}
};

323 #ifde‡
__˝lu•lus


324 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

326 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

329 
	#X_TLOSS
 1.41484755040568800000e+16

	)

332 
	#DOMAIN
 1

	)

333 
	#SING
 2

	)

334 
	#OVERFLOW
 3

	)

335 
	#UNDERFLOW
 4

	)

336 
	#TLOSS
 5

	)

337 
	#PLOSS
 6

	)

340 
	#HUGE
 3.40282347e+38F

	)

344 #ifde‡
__USE_XOPEN


346 
	#MAXFLOAT
 3.40282347e+38F

	)

353 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


354 
	#M_E
 2.7182818284590452354

	)

355 
	#M_LOG2E
 1.4426950408889634074

	)

356 
	#M_LOG10E
 0.43429448190325182765

	)

357 
	#M_LN2
 0.69314718055994530942

	)

358 
	#M_LN10
 2.30258509299404568402

	)

359 
	#M_PI
 3.14159265358979323846

	)

360 
	#M_PI_2
 1.57079632679489661923

	)

361 
	#M_PI_4
 0.78539816339744830962

	)

362 
	#M_1_PI
 0.31830988618379067154

	)

363 
	#M_2_PI
 0.63661977236758134308

	)

364 
	#M_2_SQRTPI
 1.12837916709551257390

	)

365 
	#M_SQRT2
 1.41421356237309504880

	)

366 
	#M_SQRT1_2
 0.70710678118654752440

	)

372 #ifde‡
__USE_GNU


373 
	#M_El
 2.718281828459045235360287471352662498L

	)

374 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

375 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

376 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

377 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

378 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

379 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

380 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

381 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

382 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

383 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

384 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

385 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

392 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


393 
	#__NO_MATH_INLINES
 1

	)

396 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

403 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

404 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

405 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

406 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

407 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

408 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

412 #ifde‡
__USE_EXTERN_INLINES


413 
	~<bôs/m©hölöe.h
>

418 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

419 
	~<bôs/m©h-föôe.h
>

422 #ifde‡
__USE_ISOC99


426 #i‚de‡
isgª©î


427 
	#isgª©î
(
x
, 
y
) \

428 (
__exãnsi⁄__
 \

429 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

430 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

434 #i‚de‡
isgª©îequÆ


435 
	#isgª©îequÆ
(
x
, 
y
) \

436 (
__exãnsi⁄__
 \

437 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

438 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

442 #i‚de‡
i¶ess


443 
	#i¶ess
(
x
, 
y
) \

444 (
__exãnsi⁄__
 \

445 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

446 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

450 #i‚de‡
i¶es£quÆ


451 
	#i¶es£quÆ
(
x
, 
y
) \

452 (
__exãnsi⁄__
 \

453 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

454 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

458 #i‚de‡
i¶essgª©î


459 
	#i¶essgª©î
(
x
, 
y
) \

460 (
__exãnsi⁄__
 \

461 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

462 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

466 #i‚de‡
isun‹dîed


467 
	#isun‹dîed
(
u
, 
v
) \

468 (
__exãnsi⁄__
 \

469 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

470 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

475 
	g__END_DECLS


	@/usr/include/memory.h

22 #i‚def 
_MEMORY_H


23 
	#_MEMORY_H
 1

	)

25 
	~<„©uªs.h
>

28 #i‚def 
_STRING_H


29 
	~<°rög.h
>

	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


87 
	#PTHREAD_MUTEX_INITIALIZER
 \

88 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

89 #ifde‡
__USE_GNU


90 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

91 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

92 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

98 
	#PTHREAD_MUTEX_INITIALIZER
 \

99 { { 0, 0, 0, 0, 0, { 0 } } }

	)

100 #ifde‡
__USE_GNU


101 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

102 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

103 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

112 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


115 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

116 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

117 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

118 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


125 #i‡
__WORDSIZE
 == 64

126 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

131 
	#PTHREAD_RWLOCK_INITIALIZER
 \

132 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

133 #ifde‡
__USE_GNU


134 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


135 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

137 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

139 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


140 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

141 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

142 0, 0, 0, 0 } }

	)

144 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

145 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

146 0 } }

	)

156 
	mPTHREAD_INHERIT_SCHED
,

157 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

158 
	mPTHREAD_EXPLICIT_SCHED


159 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

166 
	mPTHREAD_SCOPE_SYSTEM
,

167 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

168 
	mPTHREAD_SCOPE_PROCESS


169 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

176 
	mPTHREAD_PROCESS_PRIVATE
,

177 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

178 
	mPTHREAD_PROCESS_SHARED


179 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

185 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

189 
	s_±hªad_˛ónup_buf„r


191 (*
	m__routöe
) (*);

192 *
	m__¨g
;

193 
	m__ˇn˚…y≥
;

194 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

200 
	mPTHREAD_CANCEL_ENABLE
,

201 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

202 
	mPTHREAD_CANCEL_DISABLE


203 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

207 
	mPTHREAD_CANCEL_DEFERRED
,

208 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

209 
	mPTHREAD_CANCEL_ASYNCHRONOUS


210 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

212 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

216 
	#PTHREAD_ONCE_INIT
 0

	)

219 #ifde‡
__USE_XOPEN2K


223 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

227 
__BEGIN_DECLS


232 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

233 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

234 *(*
__°¨t_routöe
) (*),

235 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

241 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

249 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

251 #ifde‡
__USE_GNU


254 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

262 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

263 c⁄° 
time•ec
 *
__ab°ime
);

270 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

274 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

277 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

278 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

286 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

290 
__THROW
 
	`__n⁄nuŒ
 ((1));

293 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

294 *
__dëach°©e
)

295 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

298 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

299 
__dëach°©e
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1));

304 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

305 
size_t
 *
__gu¨dsize
)

306 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

309 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

310 
size_t
 
__gu¨dsize
)

311 
__THROW
 
	`__n⁄nuŒ
 ((1));

315 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

316 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

317 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

320 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

321 c⁄° 
sched_∑øm
 *
__ª°ri˘


322 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

325 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


326 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

327 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

330 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

331 
__THROW
 
	`__n⁄nuŒ
 ((1));

334 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


335 
__©å
, *
__ª°ri˘
 
__öhîô
)

336 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

339 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

340 
__öhîô
)

341 
__THROW
 
	`__n⁄nuŒ
 ((1));

345 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

346 *
__ª°ri˘
 
__sc›e
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

350 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1));

354 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


355 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

356 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

362 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

363 *
__°ackaddr
)

364 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

367 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


368 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

374 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

375 
size_t
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1));

378 #ifde‡
__USE_XOPEN2K


380 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

381 **
__ª°ri˘
 
__°ackaddr
,

382 
size_t
 *
__ª°ri˘
 
__°acksize
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

388 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

389 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

392 #ifde‡
__USE_GNU


395 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 c⁄° 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

402 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

403 
size_t
 
__˝u£tsize
,

404 
˝u_£t_t
 *
__˝u£t
)

405 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

411 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

412 
__THROW
 
	`__n⁄nuŒ
 ((2));

420 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

421 c⁄° 
sched_∑øm
 *
__∑øm
)

422 
__THROW
 
	`__n⁄nuŒ
 ((3));

425 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

426 *
__ª°ri˘
 
__pﬁicy
,

427 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

428 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

431 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

432 
__THROW
;

435 #ifde‡
__USE_GNU


437 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

438 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

442 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

443 
__THROW
 
	`__n⁄nuŒ
 ((2));

447 #ifde‡
__USE_UNIX98


449 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

452 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

455 #ifde‡
__USE_GNU


460 
	$±hªad_yõld
 (Ë
__THROW
;

465 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

466 c⁄° 
˝u_£t_t
 *
__˝u£t
)

467 
__THROW
 
	`__n⁄nuŒ
 ((3));

470 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

471 
˝u_£t_t
 *
__˝u£t
)

472 
__THROW
 
	`__n⁄nuŒ
 ((3));

485 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

486 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

497 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

501 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

504 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

509 
	`±hªad_ã°ˇn˚l
 ();

518 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

519 
__mask_was_ßved
;

520 } 
__ˇn˚l_jmp_buf
[1];

521 *
__∑d
[4];

522 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

525 #i‚de‡
__˛ónup_f˘_©åibuã


526 
	#__˛ónup_f˘_©åibuã


	)

531 
	s__±hªad_˛ónup_‰ame


533 (*
__ˇn˚l_routöe
) (*);

534 *
__ˇn˚l_¨g
;

535 
__do_ô
;

536 
__ˇn˚l_ty≥
;

539 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


540 #ifde‡
__˝lu•lus


542 ˛as†
	c__±hªad_˛ónup_˛ass


544 (*
__ˇn˚l_routöe
) (*);

545 *
__ˇn˚l_¨g
;

546 
__do_ô
;

547 
__ˇn˚l_ty≥
;

549 
public
:

550 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

551 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

552 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

553 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

554 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

555 &
__ˇn˚l_ty≥
); 
	}
}

556 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

566 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

568 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

572 
	#±hªad_˛ónup_p›
(
execuã
) \

573 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

574 } 0)

	)

576 #ifde‡
__USE_GNU


580 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

582 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

583 
__˛‰ame
.
	`__de„r
 ()

	)

588 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

589 
__˛‰ame
.
	`__ª°‹e
 (); \

590 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

591 } 0)

	)

598 
__exã∫_ölöe
 

599 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

601 i‡(
__‰ame
->
__do_ô
)

602 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

603 
	}
}

612 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

614 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

615 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

616 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

617 .
__do_ô
 = 1 };

	)

621 
	#±hªad_˛ónup_p›
(
execuã
) \

622 
__˛‰ame
.
__do_ô
 = (
execuã
); \

623 } 0)

	)

625 #ifde‡
__USE_GNU


629 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

631 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

632 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

633 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

634 .
__do_ô
 = 1 }; \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

636 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

641 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

642 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

643 
__˛‰ame
.
__do_ô
 = (
execuã
); \

644 } 0)

	)

655 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

657 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

658 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

659 *
__ˇn˚l_¨g
 = (
¨g
); \

660 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

661 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

662 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

664 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

665 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

669 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

670 dÿ{

	)

671 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

672 
__˛ónup_f˘_©åibuã
;

676 
	#±hªad_˛ónup_p›
(
execuã
) \

679 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

680 i‡(
execuã
) \

681 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

682 } 0)

	)

683 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

684 
__˛ónup_f˘_©åibuã
;

686 #ifde‡
__USE_GNU


690 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

692 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

693 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

694 *
__ˇn˚l_¨g
 = (
¨g
); \

695 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

696 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

697 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

699 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

700 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

704 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

705 dÿ{

	)

706 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

707 
__˛ónup_f˘_©åibuã
;

712 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

715 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

716 i‡(
execuã
) \

717 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

718 
	}
} 0)

	)

719 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

720 
__˛ónup_f˘_©åibuã
;

724 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

725 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

726 #i‚de‡
SHARED


727 
	`__©åibuã__
 ((
__wók__
))

733 
__jmp_buf_èg
;

734 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

740 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

741 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

742 
__THROW
 
	`__n⁄nuŒ
 ((1));

745 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

746 
__THROW
 
	`__n⁄nuŒ
 ((1));

749 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

750 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

753 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

754 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

756 #ifde‡
__USE_XOPEN2K


758 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

759 c⁄° 
time•ec
 *
__ª°ri˘


760 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

764 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

765 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

769 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

770 
__ª°ri˘
 
__muãx
,

771 *
__ª°ri˘
 
__¥io˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

776 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

777 
__¥io˚ûög
,

778 *
__ª°ri˘
 
__ﬁd_˚ûög
)

779 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

782 #ifde‡
__USE_XOPEN2K8


784 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

785 
__THROW
 
	`__n⁄nuŒ
 ((1));

786 #ifde‡
__USE_GNU


787 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

788 
__THROW
 
	`__n⁄nuŒ
 ((1));

797 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1));

801 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

802 
__THROW
 
	`__n⁄nuŒ
 ((1));

805 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

806 
__ª°ri˘
 
__©å
,

807 *
__ª°ri˘
 
__psh¨ed
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

811 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

812 
__psh¨ed
)

813 
__THROW
 
	`__n⁄nuŒ
 ((1));

815 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


817 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


818 
__©å
, *
__ª°ri˘
 
__köd
)

819 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

824 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1));

829 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

830 
__ª°ri˘
 
__©å
,

831 *
__ª°ri˘
 
__¥Ÿocﬁ
)

832 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

836 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

837 
__¥Ÿocﬁ
)

838 
__THROW
 
	`__n⁄nuŒ
 ((1));

841 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

842 
__ª°ri˘
 
__©å
,

843 *
__ª°ri˘
 
__¥io˚ûög
)

844 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

847 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

848 
__¥io˚ûög
)

849 
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_XOPEN2K


853 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

854 *
__robu°√ss
)

855 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 #ifde‡
__USE_GNU


857 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

858 *
__robu°√ss
)

859 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

863 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

864 
__robu°√ss
)

865 
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifde‡
__USE_GNU


867 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

868 
__robu°√ss
)

869 
__THROW
 
	`__n⁄nuŒ
 ((1));

874 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

880 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


881 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

884 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

888 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

889 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

892 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

893 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

895 #ifde‡
__USE_XOPEN2K


897 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

898 c⁄° 
time•ec
 *
__ª°ri˘


899 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

903 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

904 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

907 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

908 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

910 #ifde‡
__USE_XOPEN2K


912 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

913 c⁄° 
time•ec
 *
__ª°ri˘


914 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

918 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

919 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

925 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

926 
__THROW
 
	`__n⁄nuŒ
 ((1));

929 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

930 
__THROW
 
	`__n⁄nuŒ
 ((1));

933 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

934 
__ª°ri˘
 
__©å
,

935 *
__ª°ri˘
 
__psh¨ed
)

936 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

939 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

940 
__psh¨ed
)

941 
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

945 
__ª°ri˘
 
__©å
,

946 *
__ª°ri˘
 
__¥ef
)

947 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

950 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

951 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

959 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

960 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1));

964 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

965 
__THROW
 
	`__n⁄nuŒ
 ((1));

968 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

969 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

972 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

973 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

980 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

981 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

982 
	`__n⁄nuŒ
 ((1, 2));

991 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

992 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

993 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

994 
	`__n⁄nuŒ
 ((1, 2, 3));

999 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1000 
__THROW
 
	`__n⁄nuŒ
 ((1));

1003 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1004 
__THROW
 
	`__n⁄nuŒ
 ((1));

1007 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1008 
__ª°ri˘
 
__©å
,

1009 *
__ª°ri˘
 
__psh¨ed
)

1010 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1013 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1014 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1016 #ifde‡
__USE_XOPEN2K


1018 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1019 
__ª°ri˘
 
__©å
,

1020 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1024 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1025 
__˛ockid_t
 
__˛ock_id
)

1026 
__THROW
 
	`__n⁄nuŒ
 ((1));

1030 #ifde‡
__USE_XOPEN2K


1035 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1036 
__THROW
 
	`__n⁄nuŒ
 ((1));

1039 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1040 
__THROW
 
	`__n⁄nuŒ
 ((1));

1043 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1044 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1047 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1048 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1051 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1052 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1060 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1061 
__©å
, 
__cou¡
)

1062 
__THROW
 
	`__n⁄nuŒ
 ((1));

1065 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1066 
__THROW
 
	`__n⁄nuŒ
 ((1));

1069 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1070 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1074 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1078 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1079 
__THROW
 
	`__n⁄nuŒ
 ((1));

1082 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1083 
__ª°ri˘
 
__©å
,

1084 *
__ª°ri˘
 
__psh¨ed
)

1085 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1088 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1089 
__psh¨ed
)

1090 
__THROW
 
	`__n⁄nuŒ
 ((1));

1102 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1103 (*
__de°r_fun˘i⁄
) (*))

1104 
__THROW
 
	`__n⁄nuŒ
 ((1));

1107 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1110 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1113 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1114 c⁄° *
__poöãr
Ë
__THROW
 ;

1117 #ifde‡
__USE_XOPEN2K


1119 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1120 
__˛ockid_t
 *
__˛ock_id
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((2));

1136 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1137 (*
__∑ª¡
) (),

1138 (*
__chûd
Ë()Ë
__THROW
;

1141 #ifde‡
__USE_EXTERN_INLINES


1143 
__exã∫_ölöe
 

1144 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1146  
__thªad1
 =
__thªad2
;

1147 
	}
}

1150 
	g__END_DECLS


	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time_t


	)

32 
	#__√ed_time•ec


	)

33 
	~<time.h
>

35 #i‚de‡
__pid_t_deföed


36 
__pid_t
 
	tpid_t
;

37 
	#__pid_t_deföed


	)

42 
	~<bôs/sched.h
>

44 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

47 
__BEGIN_DECLS


50 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

51 
__THROW
;

54 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

57 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

58 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

61 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

64 
	$sched_yõld
 (Ë
__THROW
;

67 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

70 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

73 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

76 #ifde‡
__USE_GNU


78 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

79 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

80 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

84 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

86 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

87 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

89 
˝u£ç
)

	)

90 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

91 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

93 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

94 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

95 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

96 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

98 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

99 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

100 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

101 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

102 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

103 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

105 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

106 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

107 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

108 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

109 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

111 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

112 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

113 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

117 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

118 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

121 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

122 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

125 
__END_DECLS


	@/usr/include/semaphore.h

18 #i‚de‡
_SEMAPHORE_H


19 
	#_SEMAPHORE_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sys/ty≥s.h
>

23 #ifde‡
__USE_XOPEN2K


24 
	#__√ed_time•ec


	)

25 
	~<time.h
>

29 
	~<bôs/£m≠h‹e.h
>

32 
__BEGIN_DECLS


36 
	$£m_öô
 (
£m_t
 *
__£m
, 
__psh¨ed
, 
__vÆue
)

37 
__THROW
;

39 
	$£m_de°roy
 (
£m_t
 *
__£m
Ë
__THROW
;

42 
£m_t
 *
	$£m_›í
 (c⁄° *
__«me
, 
__oÊag
, ...Ë
__THROW
;

45 
	$£m_˛o£
 (
£m_t
 *
__£m
Ë
__THROW
;

48 
	$£m_u∆ök
 (c⁄° *
__«me
Ë
__THROW
;

54 
	`£m_waô
 (
£m_t
 *
__£m
);

56 #ifde‡
__USE_XOPEN2K


61 
	`£m_timedwaô
 (
£m_t
 *
__ª°ri˘
 
__£m
,

62 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
);

66 
	$£m_åywaô
 (
£m_t
 *
__£m
Ë
__THROWNL
;

69 
	$£m_po°
 (
£m_t
 *
__£m
Ë
__THROWNL
;

72 
	$£m_gëvÆue
 (
£m_t
 *
__ª°ri˘
 
__£m
, *__ª°ri˘ 
__svÆ
)

73 
__THROW
;

76 
__END_DECLS


	@/usr/include/setjmp.h

22 #i‚def 
_SETJMP_H


23 
	#_SETJMP_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/sig£t.h
>

34 
	s__jmp_buf_èg


40 
__jmp_buf
 
	m__jmpbuf
;

41 
	m__mask_was_ßved
;

42 
__sig£t_t
 
	m__ßved_mask
;

46 
__BEGIN_NAMESPACE_STD


48 
__jmp_buf_èg
 
	tjmp_buf
[1];

52 
	$£tjmp
 (
jmp_buf
 
__ív
Ë
__THROWNL
;

54 
__END_NAMESPACE_STD


59 
	$__sig£tjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__ßvemask
Ë
__THROWNL
;

61 #i‚def 
__FAVOR_BSD


64 
	$_£tjmp
 (
__jmp_buf_èg
 
__ív
[1]Ë
__THROWNL
;

68 
	#£tjmp
(
ív
Ë
	`_£tjmp
 (ív)

	)

73 
	#£tjmp
(
ív
Ë
	`£tjmp
 (ív)

	)

77 
__BEGIN_NAMESPACE_STD


81 
	$l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

82 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
__END_NAMESPACE_STD


86 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


90 
	$_l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

91 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

95 #ifdef 
__USE_POSIX


99 
__jmp_buf_èg
 
	tsigjmp_buf
[1];

103 
	#sig£tjmp
(
ív
, 
ßvemask
Ë
	`__sig£tjmp
 (ív, savemask)

	)

109 
	$sigl⁄gjmp
 (
sigjmp_buf
 
__ív
, 
__vÆ
)

110 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

115 #i‡
__USE_FORTIFY_LEVEL
 > 0

116 
	~<bôs/£tjmp2.h
>

119 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

146 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


148 #i‡
__WORDSIZE
 == 64

149 
	#__INT64_C
(
c
Ë¯## 
L


	)

150 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

152 
	#__INT64_C
(
c
Ë¯## 
LL


	)

153 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

159 
	#INT8_MIN
 (-128)

	)

160 
	#INT16_MIN
 (-32767-1)

	)

161 
	#INT32_MIN
 (-2147483647-1)

	)

162 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

164 
	#INT8_MAX
 (127)

	)

165 
	#INT16_MAX
 (32767)

	)

166 
	#INT32_MAX
 (2147483647)

	)

167 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

170 
	#UINT8_MAX
 (255)

	)

171 
	#UINT16_MAX
 (65535)

	)

172 
	#UINT32_MAX
 (4294967295U)

	)

173 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

177 
	#INT_LEAST8_MIN
 (-128)

	)

178 
	#INT_LEAST16_MIN
 (-32767-1)

	)

179 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

180 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

182 
	#INT_LEAST8_MAX
 (127)

	)

183 
	#INT_LEAST16_MAX
 (32767)

	)

184 
	#INT_LEAST32_MAX
 (2147483647)

	)

185 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

188 
	#UINT_LEAST8_MAX
 (255)

	)

189 
	#UINT_LEAST16_MAX
 (65535)

	)

190 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

191 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

195 
	#INT_FAST8_MIN
 (-128)

	)

196 #i‡
__WORDSIZE
 == 64

197 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

198 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

200 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

201 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

203 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

205 
	#INT_FAST8_MAX
 (127)

	)

206 #i‡
__WORDSIZE
 == 64

207 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

208 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

210 
	#INT_FAST16_MAX
 (2147483647)

	)

211 
	#INT_FAST32_MAX
 (2147483647)

	)

213 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

216 
	#UINT_FAST8_MAX
 (255)

	)

217 #i‡
__WORDSIZE
 == 64

218 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

219 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

221 
	#UINT_FAST16_MAX
 (4294967295U)

	)

222 
	#UINT_FAST32_MAX
 (4294967295U)

	)

224 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

228 #i‡
__WORDSIZE
 == 64

229 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

230 
	#INTPTR_MAX
 (9223372036854775807L)

	)

231 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

233 
	#INTPTR_MIN
 (-2147483647-1)

	)

234 
	#INTPTR_MAX
 (2147483647)

	)

235 
	#UINTPTR_MAX
 (4294967295U)

	)

240 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

242 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

245 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

251 #i‡
__WORDSIZE
 == 64

252 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

253 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

255 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

256 
	#PTRDIFF_MAX
 (2147483647)

	)

260 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

261 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

264 #i‡
__WORDSIZE
 == 64

265 
	#SIZE_MAX
 (18446744073709551615UL)

	)

267 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

286 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


289 
	#INT8_C
(
c
Ë
	)
c

290 
	#INT16_C
(
c
Ë
	)
c

291 
	#INT32_C
(
c
Ë
	)
c

292 #i‡
__WORDSIZE
 == 64

293 
	#INT64_C
(
c
Ë¯## 
L


	)

295 
	#INT64_C
(
c
Ë¯## 
LL


	)

299 
	#UINT8_C
(
c
Ë
	)
c

300 
	#UINT16_C
(
c
Ë
	)
c

301 
	#UINT32_C
(
c
Ë¯## 
U


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#UINT64_C
(
c
Ë¯## 
UL


	)

305 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

309 #i‡
__WORDSIZE
 == 64

310 
	#INTMAX_C
(
c
Ë¯## 
L


	)

311 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

313 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

314 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__a
;

422 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

423 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

424 
	$î™d48_r
 (
__xsubi
[3],

425 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

426 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

429 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

430 *
__ª°ri˘
 
__ªsu…
)

431 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

432 
	$ƒ™d48_r
 (
__xsubi
[3],

433 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

434 *
__ª°ri˘
 
__ªsu…
)

435 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

439 *
__ª°ri˘
 
__ªsu…
)

440 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

441 
	$jønd48_r
 (
__xsubi
[3],

442 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

443 *
__ª°ri˘
 
__ªsu…
)

444 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2));

450 
	$£ed48_r
 (
__£ed16v
[3],

451 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$lc⁄g48_r
 (
__∑øm
[7],

454 
dønd48_d©a
 *
__buf„r
)

455 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

461 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


462 
	#__mÆloc_™d_ˇŒoc_deföed


	)

463 
__BEGIN_NAMESPACE_STD


465 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

467 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

468 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

469 
__END_NAMESPACE_STD


472 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


473 
__BEGIN_NAMESPACE_STD


479 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

480 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

482 
	$‰ì
 (*
__±r
Ë
__THROW
;

483 
__END_NAMESPACE_STD


485 #ifdef 
__USE_MISC


487 
	$c‰ì
 (*
__±r
Ë
__THROW
;

490 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


491 
	~<Æloˇ.h
>

494 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

495 || 
deföed
 
__USE_BSD


497 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

500 #ifde‡
__USE_XOPEN2K


502 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

503 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

506 #ifde‡
__USE_ISOC11


508 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
__wur
 
	`__©åibuã__
 ((
__mÆloc__
, 
	`__Æloc_size__
 (2)));

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


522 #ifde‡
__˝lu•lus


523 "C++" 
	`©_quick_exô
 ((*
__func
) ())

524 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

526 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

529 
__END_NAMESPACE_STD


531 #ifdef 
__USE_MISC


534 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

535 
__THROW
 
	`__n⁄nuŒ
 ((1));

538 
__BEGIN_NAMESPACE_STD


542 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

544 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


548 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

550 
__END_NAMESPACE_STD


552 #ifde‡
__USE_ISOC99


553 
__BEGIN_NAMESPACE_C99


556 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

557 
__END_NAMESPACE_C99


561 
__BEGIN_NAMESPACE_STD


563 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

564 
__END_NAMESPACE_STD


566 #ifde‡
__USE_GNU


569 *
	$£cuª_gëív
 (c⁄° *
__«me
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

573 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


577 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

580 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


583 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

584 
__THROW
 
	`__n⁄nuŒ
 ((2));

587 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

590 #ifdef 
__USE_MISC


594 
	$˛óªnv
 (Ë
__THROW
;

598 #i‡
deföed
 
__USE_MISC
 \

599 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

605 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

608 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

609 || 
deföed
 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

760 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

761 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

762 #ifde‡
__USE_GNU


763 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

764 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

765 
	`__n⁄nuŒ
 ((1, 4));

770 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

771 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
__END_NAMESPACE_STD


774 #ifde‡
__USE_ISOC99


775 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

776 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

780 
__BEGIN_NAMESPACE_STD


784 
div_t
 
	$div
 (
__numî
, 
__díom
)

785 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

786 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

787 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_ISOC99


791 
__BEGIN_NAMESPACE_C99


792 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

793 
__díom
)

794 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

795 
__END_NAMESPACE_C99


799 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

800 || 
deföed
 
__USE_SVID


807 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

808 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

813 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

814 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

819 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

820 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

823 #ifde‡
__USE_MISC


825 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

826 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

827 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

828 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

829 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

830 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

831 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

837 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

838 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

839 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

840 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

841 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

842 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

845 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

846 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

847 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

856 
__BEGIN_NAMESPACE_STD


859 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

862 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

863 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

866 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

870 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

871 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

873 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

874 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

875 
__THROW
;

876 
__END_NAMESPACE_STD


879 #ifde‡
__USE_SVID


884 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

888 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


895 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

896 *c⁄° *
__ª°ri˘
 
__tokís
,

897 **
__ª°ri˘
 
__vÆuï
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

902 #ifde‡
__USE_XOPEN


904 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

910 #ifde‡
__USE_XOPEN2KXSI


912 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

915 #ifde‡
__USE_XOPEN


920 
	$gø¡±
 (
__fd
Ë
__THROW
;

924 
	$u∆ock±
 (
__fd
Ë
__THROW
;

929 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

932 #ifde‡
__USE_GNU


936 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

937 
__THROW
 
	`__n⁄nuŒ
 ((2));

940 
	`gë±
 ();

943 #ifde‡
__USE_BSD


947 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

948 
__THROW
 
	`__n⁄nuŒ
 ((1));

951 
	~<bôs/°dlib-Êﬂt.h
>

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

170 || 
deföed
 
__USE_XOPEN2K8


172 *
	$°rdup
 (c⁄° *
__s
)

173 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

179 #i‡
deföed
 
__USE_XOPEN2K8


180 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

181 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

184 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


186 
	#°rdu∑
(
s
) \

187 (
__exãnsi⁄__
 \

189 c⁄° *
__ﬁd
 = (
s
); \

190 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

191 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

192 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

193 
	}
}))

	)

196 
	#°∫du∑
(
s
, 
n
) \

197 (
__exãnsi⁄__
 \

199 c⁄° *
__ﬁd
 = (
s
); \

200 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

201 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

202 
__√w
[
__Àn
] = '\0'; \

203 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

204 }))

	)

207 
	g__BEGIN_NAMESPACE_STD


209 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


212 *
°rchr
 (*
__s
, 
__c
)

213 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

214 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

215 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 #ifde‡
__OPTIMIZE__


218 
__exã∫_Æways_ölöe
 *

219 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


221  
__buûtö_°rchr
 (
__s
, 
__c
);

224 
__exã∫_Æways_ölöe
 const *

225 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


227  
__buûtö_°rchr
 (
__s
, 
__c
);

232 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

233 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

236 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


239 *
	`°ºchr
 (*
__s
, 
__c
)

240 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

241 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

242 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 #ifde‡
__OPTIMIZE__


245 
__exã∫_Æways_ölöe
 *

246 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


248  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

251 
__exã∫_Æways_ölöe
 const *

252 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


254  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

257 
	}
}

259 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

260 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

262 
__END_NAMESPACE_STD


264 #ifde‡
__USE_GNU


267 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


268 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

269 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

270 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

271 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

274 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

278 
__BEGIN_NAMESPACE_STD


281 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

282 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

285 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


291 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

292 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

293 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

294 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 #ifde‡
__OPTIMIZE__


297 
__exã∫_Æways_ölöe
 *

298 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


300  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

303 
__exã∫_Æways_ölöe
 const *

304 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


306  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

309 
	}
}

311 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

312 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

315 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


318 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

319 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

320 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

321 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 #ifde‡
__OPTIMIZE__


324 
__exã∫_Æways_ölöe
 *

325 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


327  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

330 
__exã∫_Æways_ölöe
 const *

331 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


333  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

336 
	}
}

338 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

339 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

344 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

345 
__THROW
 
	`__n⁄nuŒ
 ((2));

346 
__END_NAMESPACE_STD


350 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

351 c⁄° *
__ª°ri˘
 
__dñim
,

352 **
__ª°ri˘
 
__ßve_±r
)

353 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

354 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


355 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

360 #ifde‡
__USE_GNU


362 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


363 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

364 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

365 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

366 c⁄° *
__√edÀ
)

367 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

370 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

374 #ifde‡
__USE_GNU


378 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

379 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

380 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

384 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

385 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

386 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

387 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

388 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

389 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

393 
__BEGIN_NAMESPACE_STD


395 
size_t
 
	$°æí
 (c⁄° *
__s
)

396 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

397 
__END_NAMESPACE_STD


399 #ifdef 
__USE_XOPEN2K8


402 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

403 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

407 
__BEGIN_NAMESPACE_STD


409 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

410 
__END_NAMESPACE_STD


411 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


419 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


422 #ifde‡
__REDIRECT_NTH


423 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

424 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

425 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

427 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

428 
__THROW
 
	`__n⁄nuŒ
 ((2));

429 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

434 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

435 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

439 #ifde‡
__USE_XOPEN2K8


441 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

447 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

449 #ifde‡
__USE_BSD


451 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

452 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

455 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

458 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

459 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

462 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


465 *
	`ödex
 (*
__s
, 
__c
)

466 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

467 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

468 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

470 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


471 
__exã∫_Æways_ölöe
 *

472 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


474  
	`__buûtö_ödex
 (
__s
, 
__c
);

477 
__exã∫_Æways_ölöe
 const *

478 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


480  
	`__buûtö_ödex
 (
__s
, 
__c
);

483 
	}
}

485 *
	$ödex
 (c⁄° *
__s
, 
__c
)

486 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

490 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


493 *
	`rödex
 (*
__s
, 
__c
)

494 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

495 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

496 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

498 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


499 
__exã∫_Æways_ölöe
 *

500 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


502  
	`__buûtö_rödex
 (
__s
, 
__c
);

505 
__exã∫_Æways_ölöe
 const *

506 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


508  
	`__buûtö_rödex
 (
__s
, 
__c
);

511 
	}
}

513 *
	$rödex
 (c⁄° *
__s
, 
__c
)

514 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

519 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

523 #ifdef 
__USE_GNU


524 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

525 #ifde‡
__GNUC__


526 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

527 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

532 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

533 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

536 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 #ifdef 
__USE_GNU


543 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

544 
__loˇÀ_t
 
__loc
)

545 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

547 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

548 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

552 #ifdef 
__USE_BSD


555 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

556 c⁄° *
__ª°ri˘
 
__dñim
)

557 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

560 #ifdef 
__USE_XOPEN2K8


562 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

565 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

566 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

567 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

576 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

580 #ifdef 
__USE_GNU


582 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

583 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

586 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

589 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #i‚de‡
ba£«me


596 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


597 "C++" *
	$ba£«me
 (*
__fûíame
)

598 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

602 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

608 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

609 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

610 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


630 
	~<bôs/°rög.h
>

633 
	~<bôs/°rög2.h
>

636 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


638 
	~<bôs/°rög3.h
>

642 
__END_DECLS


	@/usr/include/sys/mman.h

19 #i‚def 
_SYS_MMAN_H


20 
	#_SYS_MMAN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 #i‚de‡
__off_t_deföed


28 #i‚de‡
__USE_FILE_OFFSET64


29 
__off_t
 
	toff_t
;

31 
__off64_t
 
	toff_t
;

33 
	#__off_t_deföed


	)

36 #i‚de‡
__mode_t_deföed


37 
__mode_t
 
	tmode_t
;

38 
	#__mode_t_deföed


	)

41 
	~<bôs/mm™.h
>

44 
	#MAP_FAILED
 ((*Ë-1)

	)

46 
	g__BEGIN_DECLS


56 #i‚de‡
__USE_FILE_OFFSET64


57 *
	$mm≠
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

58 
__Êags
, 
__fd
, 
__off_t
 
__off£t
Ë
__THROW
;

60 #ifde‡
__REDIRECT_NTH


61 * 
	`__REDIRECT_NTH
 (
mm≠
,

62 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

63 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
),

64 
mm≠64
);

66 
	#mm≠
 
mm≠64


	)

69 #ifde‡
__USE_LARGEFILE64


70 *
	$mm≠64
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

71 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
Ë
__THROW
;

76 
	$munm≠
 (*
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

81 
	$m¥Ÿe˘
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
Ë
__THROW
;

89 
	`msync
 (*
__addr
, 
size_t
 
__Àn
, 
__Êags
);

91 #ifde‡
__USE_BSD


94 
	$madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

96 #ifde‡
__USE_XOPEN2K


98 
	$posix_madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

103 
	$mlock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

106 
	$mu∆ock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

111 
	$mlockÆl
 (
__Êags
Ë
__THROW
;

115 
	$mu∆ockÆl
 (Ë
__THROW
;

117 #ifde‡
__USE_MISC


123 
	$möc‹e
 (*
__°¨t
, 
size_t
 
__Àn
, *
__vec
)

124 
__THROW
;

127 #ifde‡
__USE_GNU


133 *
	$mªm≠
 (*
__addr
, 
size_t
 
__ﬁd_Àn
, size_à
__√w_Àn
,

134 
__Êags
, ...Ë
__THROW
;

138 
	$ªm≠_fûe_∑ges
 (*
__°¨t
, 
size_t
 
__size
, 
__¥Ÿ
,

139 
size_t
 
__pgoff
, 
__Êags
Ë
__THROW
;

144 
	`shm_›í
 (c⁄° *
__«me
, 
__oÊag
, 
mode_t
 
__mode
);

147 
	`shm_u∆ök
 (c⁄° *
__«me
);

149 
__END_DECLS


	@/usr/include/sys/resource.h

19 #i‚def 
_SYS_RESOURCE_H


20 
	#_SYS_RESOURCE_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ªsour˚.h
>

27 #i‚de‡
__id_t_deföed


28 
__id_t
 
	tid_t
;

29 
	#__id_t_deföed


	)

32 
	g__BEGIN_DECLS


38 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


39 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

40 
__rußge_who
 
	t__rußge_who_t
;

41 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

43 
	t__æimô_ªsour˚_t
;

44 
	t__rußge_who_t
;

45 
	t__¥i‹ôy_which_t
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

52 
æimô
 *
__æimôs
Ë
__THROW
;

54 #ifde‡
__REDIRECT_NTH


55 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

56 
æimô
 *
__æimôs
), 
gëæimô64
);

58 
	#gëæimô
 
gëæimô64


	)

61 #ifde‡
__USE_LARGEFILE64


62 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

63 
æimô64
 *
__æimôs
Ë
__THROW
;

69 #i‚de‡
__USE_FILE_OFFSET64


70 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

71 c⁄° 
æimô
 *
__æimôs
Ë
__THROW
;

73 #ifde‡
__REDIRECT_NTH


74 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

75 c⁄° 
æimô
 *
__æimôs
),

76 
£ålimô64
);

78 
	#£ålimô
 
£ålimô64


	)

81 #ifde‡
__USE_LARGEFILE64


82 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

83 c⁄° 
æimô64
 *
__æimôs
Ë
__THROW
;

88 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

94 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

98 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

99 
__THROW
;

101 
__END_DECLS


	@/usr/include/sys/syscall.h

18 #i‚de‡
_SYSCALL_H


19 
	#_SYSCALL_H
 1

	)

24 
	~<asm/uni°d.h
>

26 #i‚de‡
_LIBC


31 
	~<bôs/sysˇŒ.h
>

	@/usr/include/sys/sysctl.h

18 #i‚def 
_SYS_SYSCTL_H


19 
	#_SYS_SYSCTL_H
 1

	)

21 
	~<„©uªs.h
>

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

25 #i‚de‡
_LINUX_KERNEL_H


26 
	#_LINUX_KERNEL_H
 1

	)

27 
	#__undef_LINUX_KERNEL_H


	)

29 #i‚de‡
_LINUX_TYPES_H


30 
	#_LINUX_TYPES_H
 1

	)

31 
	#__undef_LINUX_TYPES_H


	)

33 #i‚de‡
_LINUX_LIST_H


34 
	#_LINUX_LIST_H
 1

	)

35 
	#__undef_LINUX_LIST_H


	)

37 #i‚de‡
__LINUX_COMPILER_H


38 
	#__LINUX_COMPILER_H
 1

	)

39 
	#__u£r


	)

40 
	#__undef__LINUX_COMPILER_H


	)

43 
	~<löux/sys˘l.h
>

45 #ifde‡
__undef_LINUX_KERNEL_H


46 #unde‡
_LINUX_KERNEL_H


47 #unde‡
__undef_LINUX_KERNEL_H


49 #ifde‡
__undef_LINUX_TYPES_H


50 #unde‡
_LINUX_TYPES_H


51 #unde‡
__undef_LINUX_TYPES_H


53 #ifde‡
__undef_LINUX_LIST_H


54 #unde‡
_LINUX_LIST_H


55 #unde‡
__undef_LINUX_LIST_H


57 #ifde‡
__undef__LINUX_COMPILER_H


58 #unde‡
__LINUX_COMPILER_H


59 #unde‡
__u£r


60 #unde‡
__undef__LINUX_COMPILER_H


63 
	~<bôs/sys˘l.h
>

65 
__BEGIN_DECLS


68 
	$sys˘l
 (*
__«me
, 
__∆í
, *
__ﬁdvÆ
,

69 
size_t
 *
__ﬁdÀ≈
, *
__√wvÆ
, size_à
__√wÀn
Ë
__THROW
;

71 
__END_DECLS


	@/usr/include/sys/sysinfo.h

18 #i‚de‡
_SYS_SYSINFO_H


19 
	#_SYS_SYSINFO_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<löux/kî√l.h
>

26 
__BEGIN_DECLS


29 
	$sysöfo
 (
sysöfo
 *
__öfo
Ë
__THROW
;

33 
	$gë_≈rocs_c⁄f
 (Ë
__THROW
;

36 
	$gë_≈rocs
 (Ë
__THROW
;

40 
	$gë_phys_∑ges
 (Ë
__THROW
;

43 
	$gë_avphys_∑ges
 (Ë
__THROW
;

45 
__END_DECLS


	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_BSD


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_BSD


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#__√ed_˛ock_t


	)

129 
	#__√ed_time_t


	)

130 
	#__√ed_timî_t


	)

131 
	#__√ed_˛ockid_t


	)

132 
	~<time.h
>

134 #ifde‡
__USE_XOPEN


135 #i‚de‡
__u£c⁄ds_t_deföed


136 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

137 
	#__u£c⁄ds_t_deföed


	)

139 #i‚de‡
__su£c⁄ds_t_deföed


140 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

141 
	#__su£c⁄ds_t_deföed


	)

145 
	#__√ed_size_t


	)

146 
	~<°ddef.h
>

148 #ifde‡
__USE_MISC


150 
	tul⁄g
;

151 
	tush‹t
;

152 
	tuöt
;

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 #i‚de‡
__öt8_t_deföed


161 
	#__öt8_t_deföed


	)

162 
	töt8_t
;

163 
	töt16_t
;

164 
	töt32_t
;

165 #i‡
__WORDSIZE
 == 64

166 
	töt64_t
;

167 #ñi‡
__GLIBC_HAVE_LONG_LONG


168 
__exãnsi⁄__
 
	töt64_t
;

173 
	tu_öt8_t
;

174 
	tu_öt16_t
;

175 
	tu_öt32_t
;

176 #i‡
__WORDSIZE
 == 64

177 
	tu_öt64_t
;

178 #ñi‡
__GLIBC_HAVE_LONG_LONG


179 
__exãnsi⁄__
 
	tu_öt64_t
;

182 
	tªgi°î_t
;

187 
	#__ötN_t
(
N
, 
MODE
) \

188 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

190 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

192 #i‚de‡
	t__öt8_t_deföed


193 
	t__öt8_t_deföed


	)

194 
	t__ötN_t
 (8, 
	t__QI__
);

195 
__ötN_t
 (16, 
__HI__
);

196 
__ötN_t
 (32, 
__SI__
);

197 
__ötN_t
 (64, 
__DI__
);

200 
__u_ötN_t
 (8, 
__QI__
);

201 
__u_ötN_t
 (16, 
__HI__
);

202 
__u_ötN_t
 (32, 
__SI__
);

203 
__u_ötN_t
 (64, 
__DI__
);

205 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

211 
	#__BIT_TYPES_DEFINED__
 1

	)

214 #ifdef 
__USE_BSD


216 
	~<ídün.h
>

219 
	~<sys/£À˘.h
>

222 
	~<sys/sysma¸os.h
>

226 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

227 && !
deföed
 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/sys/utsname.h

22 #i‚def 
_SYS_UTSNAME_H


23 
	#_SYS_UTSNAME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ut¢ame.h
>

31 #i‚de‡
_UTSNAME_SYSNAME_LENGTH


32 
	#_UTSNAME_SYSNAME_LENGTH
 
_UTSNAME_LENGTH


	)

34 #i‚de‡
_UTSNAME_NODENAME_LENGTH


35 
	#_UTSNAME_NODENAME_LENGTH
 
_UTSNAME_LENGTH


	)

37 #i‚de‡
_UTSNAME_RELEASE_LENGTH


38 
	#_UTSNAME_RELEASE_LENGTH
 
_UTSNAME_LENGTH


	)

40 #i‚de‡
_UTSNAME_VERSION_LENGTH


41 
	#_UTSNAME_VERSION_LENGTH
 
_UTSNAME_LENGTH


	)

43 #i‚de‡
_UTSNAME_MACHINE_LENGTH


44 
	#_UTSNAME_MACHINE_LENGTH
 
_UTSNAME_LENGTH


	)

48 
	sut¢ame


51 
	msy¢ame
[
_UTSNAME_SYSNAME_LENGTH
];

54 
	mnodíame
[
_UTSNAME_NODENAME_LENGTH
];

57 
	mªÀa£
[
_UTSNAME_RELEASE_LENGTH
];

59 
	mvîsi⁄
[
_UTSNAME_VERSION_LENGTH
];

62 
	mmachöe
[
_UTSNAME_MACHINE_LENGTH
];

64 #i‡
_UTSNAME_DOMAIN_LENGTH
 - 0

66 #ifde‡
__USE_GNU


67 
	mdomaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

69 
	m__domaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

74 #ifde‡
__USE_SVID


76 
	#SYS_NMLN
 
_UTSNAME_LENGTH


	)

81 
	$u«me
 (
ut¢ame
 *
__«me
Ë
__THROW
;

84 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

635 #i‚de‡
__FAVOR_BSD


636 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

638 #ifde‡
__REDIRECT_NTH


639 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

641 
	#gëpgΩ
 
__gëpgid


	)

646 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

647 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


648 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

655 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

657 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


668 #i‚de‡
__FAVOR_BSD


672 
	$£çgΩ
 (Ë
__THROW
;

677 #ifde‡
__REDIRECT_NTH


678 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

680 
	#£çgΩ
 
£çgid


	)

689 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

691 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


693 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

697 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

700 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

703 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

706 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

711 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

713 #ifdef 
__USE_GNU


715 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

722 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

724 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


727 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

730 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


732 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

739 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

741 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


744 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

747 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


749 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

752 #ifde‡
__USE_GNU


755 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

756 
__THROW
;

760 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

761 
__THROW
;

765 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

766 
__THROW
 
__wur
;

770 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

771 
__THROW
 
__wur
;

778 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

780 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

781 || 
deföed
 
__USE_BSD


786 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

792 *
	$ây«me
 (
__fd
Ë
__THROW
;

796 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

797 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

801 
	$ißây
 (
__fd
Ë
__THROW
;

803 #i‡
deföed
 
__USE_BSD
 \

804 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

807 
	$ây¶Ÿ
 (Ë
__THROW
;

812 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

813 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

815 #ifde‡
__USE_ATFILE


818 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

819 c⁄° *
__to
, 
__Êags
)

820 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

823 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


825 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

826 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

831 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

832 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

836 #ifde‡
__USE_ATFILE


838 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

839 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

842 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

843 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

844 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

848 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

850 #ifde‡
__USE_ATFILE


852 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

853 
__THROW
 
	`__n⁄nuŒ
 ((2));

857 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

861 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

864 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

871 *
	`gëlogö
 ();

872 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


879 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

882 #ifdef 
__USE_BSD


884 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

888 #ifdef 
__USE_POSIX2


892 
	#__√ed_gë›t


	)

893 
	~<gë›t.h
>

897 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


901 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

905 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

908 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

909 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

913 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

919 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

920 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

921 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

922 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

928 
	$vh™gup
 (Ë
__THROW
;

931 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

939 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

940 
size_t
 
__off£t
, 
__sˇÀ
)

941 
__THROW
 
	`__n⁄nuŒ
 ((1));

947 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

951 *
	$gëu£rshñl
 (Ë
__THROW
;

952 
	$ídu£rshñl
 (Ë
__THROW
;

953 
	$£tu£rshñl
 (Ë
__THROW
;

959 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

963 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

966 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

970 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

978 
	`fsync
 (
__fd
);

981 #ifde‡
__USE_GNU


984 
	$syncfs
 (
__fd
Ë
__THROW
;

988 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


991 
	`gëho°id
 ();

994 
	$sync
 (Ë
__THROW
;

997 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


1000 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1005 
	$gëdèbÀsize
 (Ë
__THROW
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1014 #i‚de‡
__USE_FILE_OFFSET64


1015 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

1016 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
åunˇã
,

1020 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1021 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1023 
	#åunˇã
 
åunˇã64


	)

1026 #ifde‡
__USE_LARGEFILE64


1027 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1028 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1033 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1034 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1037 #i‚de‡
__USE_FILE_OFFSET64


1038 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1040 #ifde‡
__REDIRECT_NTH


1041 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1042 
·runˇã64
Ë
__wur
;

1044 
	#·runˇã
 
·runˇã64


	)

1047 #ifde‡
__USE_LARGEFILE64


1048 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1054 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1055 || 
deföed
 
__USE_MISC


1059 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1065 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1069 #ifde‡
__USE_MISC


1080 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1085 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1097 
	#F_ULOCK
 0

	)

1098 
	#F_LOCK
 1

	)

1099 
	#F_TLOCK
 2

	)

1100 
	#F_TEST
 3

	)

1102 #i‚de‡
__USE_FILE_OFFSET64


1103 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1105 #ifde‡
__REDIRECT


1106 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1107 
lockf64
Ë
__wur
;

1109 
	#lockf
 
lockf64


	)

1112 #ifde‡
__USE_LARGEFILE64


1113 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1118 #ifde‡
__USE_GNU


1123 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1124 (
__exãnsi⁄__
 \

1125 ({ 
__ªsu…
; \

1126 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1127 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1128 
__ªsu…
; 
	}
}))

	)

1131 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1134 
fd©async
 (
__fûdes
);

1140 #ifdef 
__USE_XOPEN


1142 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1143 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1147 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1154 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1155 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1161 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1163 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1168 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1169 
	~<bôs/uni°d.h
>

1172 
__END_DECLS


	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/asm/unistd.h

1 #i‚de‡
_ASM_X86_UNISTD_H


2 
	#_ASM_X86_UNISTD_H


	)

5 
	#__X32_SYSCALL_BIT
 0x40000000

	)

7 #ifde‡
__i386__


8 
	~<asm/uni°d_32.h
>

9 #ñi‡
deföed
(
__ILP32__
)

10 
	~<asm/uni°d_x32.h
>

12 
	~<asm/uni°d_64.h
>

	@/usr/include/bits/confname.h

20 #i‚de‡
_UNISTD_H


27 
	m_PC_LINK_MAX
,

28 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

29 
	m_PC_MAX_CANON
,

30 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

31 
	m_PC_MAX_INPUT
,

32 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

33 
	m_PC_NAME_MAX
,

34 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

35 
	m_PC_PATH_MAX
,

36 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

37 
	m_PC_PIPE_BUF
,

38 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

39 
	m_PC_CHOWN_RESTRICTED
,

40 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

41 
	m_PC_NO_TRUNC
,

42 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

43 
	m_PC_VDISABLE
,

44 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

45 
	m_PC_SYNC_IO
,

46 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

47 
	m_PC_ASYNC_IO
,

48 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

49 
	m_PC_PRIO_IO
,

50 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

51 
	m_PC_SOCK_MAXBUF
,

52 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

53 
	m_PC_FILESIZEBITS
,

54 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

55 
	m_PC_REC_INCR_XFER_SIZE
,

56 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

57 
	m_PC_REC_MAX_XFER_SIZE
,

58 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

59 
	m_PC_REC_MIN_XFER_SIZE
,

60 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

61 
	m_PC_REC_XFER_ALIGN
,

62 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

63 
	m_PC_ALLOC_SIZE_MIN
,

64 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

65 
	m_PC_SYMLINK_MAX
,

66 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

67 
	m_PC_2_SYMLINKS


68 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

74 
	m_SC_ARG_MAX
,

75 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

76 
	m_SC_CHILD_MAX
,

77 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

78 
	m_SC_CLK_TCK
,

79 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

80 
	m_SC_NGROUPS_MAX
,

81 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

82 
	m_SC_OPEN_MAX
,

83 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

84 
	m_SC_STREAM_MAX
,

85 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

86 
	m_SC_TZNAME_MAX
,

87 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

88 
	m_SC_JOB_CONTROL
,

89 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

90 
	m_SC_SAVED_IDS
,

91 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

92 
	m_SC_REALTIME_SIGNALS
,

93 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

94 
	m_SC_PRIORITY_SCHEDULING
,

95 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

96 
	m_SC_TIMERS
,

97 
	#_SC_TIMERS
 
_SC_TIMERS


	)

98 
	m_SC_ASYNCHRONOUS_IO
,

99 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

100 
	m_SC_PRIORITIZED_IO
,

101 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

102 
	m_SC_SYNCHRONIZED_IO
,

103 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

104 
	m_SC_FSYNC
,

105 
	#_SC_FSYNC
 
_SC_FSYNC


	)

106 
	m_SC_MAPPED_FILES
,

107 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

108 
	m_SC_MEMLOCK
,

109 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

110 
	m_SC_MEMLOCK_RANGE
,

111 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

112 
	m_SC_MEMORY_PROTECTION
,

113 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

114 
	m_SC_MESSAGE_PASSING
,

115 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

116 
	m_SC_SEMAPHORES
,

117 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

118 
	m_SC_SHARED_MEMORY_OBJECTS
,

119 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

120 
	m_SC_AIO_LISTIO_MAX
,

121 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

122 
	m_SC_AIO_MAX
,

123 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

124 
	m_SC_AIO_PRIO_DELTA_MAX
,

125 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

126 
	m_SC_DELAYTIMER_MAX
,

127 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

128 
	m_SC_MQ_OPEN_MAX
,

129 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

130 
	m_SC_MQ_PRIO_MAX
,

131 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

132 
	m_SC_VERSION
,

133 
	#_SC_VERSION
 
_SC_VERSION


	)

134 
	m_SC_PAGESIZE
,

135 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

136 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

137 
	m_SC_RTSIG_MAX
,

138 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

139 
	m_SC_SEM_NSEMS_MAX
,

140 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

141 
	m_SC_SEM_VALUE_MAX
,

142 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

143 
	m_SC_SIGQUEUE_MAX
,

144 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

145 
	m_SC_TIMER_MAX
,

146 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

150 
	m_SC_BC_BASE_MAX
,

151 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

152 
	m_SC_BC_DIM_MAX
,

153 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

154 
	m_SC_BC_SCALE_MAX
,

155 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

156 
	m_SC_BC_STRING_MAX
,

157 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

158 
	m_SC_COLL_WEIGHTS_MAX
,

159 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

160 
	m_SC_EQUIV_CLASS_MAX
,

161 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

162 
	m_SC_EXPR_NEST_MAX
,

163 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

164 
	m_SC_LINE_MAX
,

165 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

166 
	m_SC_RE_DUP_MAX
,

167 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

168 
	m_SC_CHARCLASS_NAME_MAX
,

169 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

171 
	m_SC_2_VERSION
,

172 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

173 
	m_SC_2_C_BIND
,

174 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

175 
	m_SC_2_C_DEV
,

176 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

177 
	m_SC_2_FORT_DEV
,

178 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

179 
	m_SC_2_FORT_RUN
,

180 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

181 
	m_SC_2_SW_DEV
,

182 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

183 
	m_SC_2_LOCALEDEF
,

184 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

186 
	m_SC_PII
,

187 
	#_SC_PII
 
_SC_PII


	)

188 
	m_SC_PII_XTI
,

189 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

190 
	m_SC_PII_SOCKET
,

191 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

192 
	m_SC_PII_INTERNET
,

193 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

194 
	m_SC_PII_OSI
,

195 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

196 
	m_SC_POLL
,

197 
	#_SC_POLL
 
_SC_POLL


	)

198 
	m_SC_SELECT
,

199 
	#_SC_SELECT
 
_SC_SELECT


	)

200 
	m_SC_UIO_MAXIOV
,

201 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

202 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

203 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

204 
	m_SC_PII_INTERNET_STREAM
,

205 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

206 
	m_SC_PII_INTERNET_DGRAM
,

207 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

208 
	m_SC_PII_OSI_COTS
,

209 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

210 
	m_SC_PII_OSI_CLTS
,

211 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

212 
	m_SC_PII_OSI_M
,

213 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

214 
	m_SC_T_IOV_MAX
,

215 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

218 
	m_SC_THREADS
,

219 
	#_SC_THREADS
 
_SC_THREADS


	)

220 
	m_SC_THREAD_SAFE_FUNCTIONS
,

221 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

222 
	m_SC_GETGR_R_SIZE_MAX
,

223 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

224 
	m_SC_GETPW_R_SIZE_MAX
,

225 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

226 
	m_SC_LOGIN_NAME_MAX
,

227 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

228 
	m_SC_TTY_NAME_MAX
,

229 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

230 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

231 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

232 
	m_SC_THREAD_KEYS_MAX
,

233 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

234 
	m_SC_THREAD_STACK_MIN
,

235 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

236 
	m_SC_THREAD_THREADS_MAX
,

237 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

238 
	m_SC_THREAD_ATTR_STACKADDR
,

239 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

240 
	m_SC_THREAD_ATTR_STACKSIZE
,

241 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

242 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

243 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

244 
	m_SC_THREAD_PRIO_INHERIT
,

245 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

246 
	m_SC_THREAD_PRIO_PROTECT
,

247 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

248 
	m_SC_THREAD_PROCESS_SHARED
,

249 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

251 
	m_SC_NPROCESSORS_CONF
,

252 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

253 
	m_SC_NPROCESSORS_ONLN
,

254 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

255 
	m_SC_PHYS_PAGES
,

256 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

257 
	m_SC_AVPHYS_PAGES
,

258 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

259 
	m_SC_ATEXIT_MAX
,

260 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

261 
	m_SC_PASS_MAX
,

262 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

264 
	m_SC_XOPEN_VERSION
,

265 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

266 
	m_SC_XOPEN_XCU_VERSION
,

267 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

268 
	m_SC_XOPEN_UNIX
,

269 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

270 
	m_SC_XOPEN_CRYPT
,

271 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

272 
	m_SC_XOPEN_ENH_I18N
,

273 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

274 
	m_SC_XOPEN_SHM
,

275 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

277 
	m_SC_2_CHAR_TERM
,

278 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

279 
	m_SC_2_C_VERSION
,

280 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

281 
	m_SC_2_UPE
,

282 
	#_SC_2_UPE
 
_SC_2_UPE


	)

284 
	m_SC_XOPEN_XPG2
,

285 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

286 
	m_SC_XOPEN_XPG3
,

287 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

288 
	m_SC_XOPEN_XPG4
,

289 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

291 
	m_SC_CHAR_BIT
,

292 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

293 
	m_SC_CHAR_MAX
,

294 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

295 
	m_SC_CHAR_MIN
,

296 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

297 
	m_SC_INT_MAX
,

298 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

299 
	m_SC_INT_MIN
,

300 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

301 
	m_SC_LONG_BIT
,

302 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

303 
	m_SC_WORD_BIT
,

304 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

305 
	m_SC_MB_LEN_MAX
,

306 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

307 
	m_SC_NZERO
,

308 
	#_SC_NZERO
 
_SC_NZERO


	)

309 
	m_SC_SSIZE_MAX
,

310 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

311 
	m_SC_SCHAR_MAX
,

312 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

313 
	m_SC_SCHAR_MIN
,

314 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

315 
	m_SC_SHRT_MAX
,

316 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

317 
	m_SC_SHRT_MIN
,

318 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

319 
	m_SC_UCHAR_MAX
,

320 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

321 
	m_SC_UINT_MAX
,

322 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

323 
	m_SC_ULONG_MAX
,

324 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

325 
	m_SC_USHRT_MAX
,

326 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

328 
	m_SC_NL_ARGMAX
,

329 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

330 
	m_SC_NL_LANGMAX
,

331 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

332 
	m_SC_NL_MSGMAX
,

333 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

334 
	m_SC_NL_NMAX
,

335 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

336 
	m_SC_NL_SETMAX
,

337 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

338 
	m_SC_NL_TEXTMAX
,

339 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

341 
	m_SC_XBS5_ILP32_OFF32
,

342 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

343 
	m_SC_XBS5_ILP32_OFFBIG
,

344 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

345 
	m_SC_XBS5_LP64_OFF64
,

346 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

347 
	m_SC_XBS5_LPBIG_OFFBIG
,

348 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

350 
	m_SC_XOPEN_LEGACY
,

351 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

352 
	m_SC_XOPEN_REALTIME
,

353 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

354 
	m_SC_XOPEN_REALTIME_THREADS
,

355 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

357 
	m_SC_ADVISORY_INFO
,

358 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

359 
	m_SC_BARRIERS
,

360 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

361 
	m_SC_BASE
,

362 
	#_SC_BASE
 
_SC_BASE


	)

363 
	m_SC_C_LANG_SUPPORT
,

364 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

365 
	m_SC_C_LANG_SUPPORT_R
,

366 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

367 
	m_SC_CLOCK_SELECTION
,

368 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

369 
	m_SC_CPUTIME
,

370 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

371 
	m_SC_THREAD_CPUTIME
,

372 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

373 
	m_SC_DEVICE_IO
,

374 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

375 
	m_SC_DEVICE_SPECIFIC
,

376 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

377 
	m_SC_DEVICE_SPECIFIC_R
,

378 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

379 
	m_SC_FD_MGMT
,

380 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

381 
	m_SC_FIFO
,

382 
	#_SC_FIFO
 
_SC_FIFO


	)

383 
	m_SC_PIPE
,

384 
	#_SC_PIPE
 
_SC_PIPE


	)

385 
	m_SC_FILE_ATTRIBUTES
,

386 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

387 
	m_SC_FILE_LOCKING
,

388 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

389 
	m_SC_FILE_SYSTEM
,

390 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

391 
	m_SC_MONOTONIC_CLOCK
,

392 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

393 
	m_SC_MULTI_PROCESS
,

394 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

395 
	m_SC_SINGLE_PROCESS
,

396 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

397 
	m_SC_NETWORKING
,

398 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

399 
	m_SC_READER_WRITER_LOCKS
,

400 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

401 
	m_SC_SPIN_LOCKS
,

402 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

403 
	m_SC_REGEXP
,

404 
	#_SC_REGEXP
 
_SC_REGEXP


	)

405 
	m_SC_REGEX_VERSION
,

406 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

407 
	m_SC_SHELL
,

408 
	#_SC_SHELL
 
_SC_SHELL


	)

409 
	m_SC_SIGNALS
,

410 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

411 
	m_SC_SPAWN
,

412 
	#_SC_SPAWN
 
_SC_SPAWN


	)

413 
	m_SC_SPORADIC_SERVER
,

414 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

415 
	m_SC_THREAD_SPORADIC_SERVER
,

416 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

417 
	m_SC_SYSTEM_DATABASE
,

418 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

419 
	m_SC_SYSTEM_DATABASE_R
,

420 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

421 
	m_SC_TIMEOUTS
,

422 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

423 
	m_SC_TYPED_MEMORY_OBJECTS
,

424 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

425 
	m_SC_USER_GROUPS
,

426 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

427 
	m_SC_USER_GROUPS_R
,

428 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

429 
	m_SC_2_PBS
,

430 
	#_SC_2_PBS
 
_SC_2_PBS


	)

431 
	m_SC_2_PBS_ACCOUNTING
,

432 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

433 
	m_SC_2_PBS_LOCATE
,

434 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

435 
	m_SC_2_PBS_MESSAGE
,

436 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

437 
	m_SC_2_PBS_TRACK
,

438 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

439 
	m_SC_SYMLOOP_MAX
,

440 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

441 
	m_SC_STREAMS
,

442 
	#_SC_STREAMS
 
_SC_STREAMS


	)

443 
	m_SC_2_PBS_CHECKPOINT
,

444 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

446 
	m_SC_V6_ILP32_OFF32
,

447 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

448 
	m_SC_V6_ILP32_OFFBIG
,

449 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

450 
	m_SC_V6_LP64_OFF64
,

451 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

452 
	m_SC_V6_LPBIG_OFFBIG
,

453 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

455 
	m_SC_HOST_NAME_MAX
,

456 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

457 
	m_SC_TRACE
,

458 
	#_SC_TRACE
 
_SC_TRACE


	)

459 
	m_SC_TRACE_EVENT_FILTER
,

460 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

461 
	m_SC_TRACE_INHERIT
,

462 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

463 
	m_SC_TRACE_LOG
,

464 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

466 
	m_SC_LEVEL1_ICACHE_SIZE
,

467 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

468 
	m_SC_LEVEL1_ICACHE_ASSOC
,

469 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

470 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

471 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

472 
	m_SC_LEVEL1_DCACHE_SIZE
,

473 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

474 
	m_SC_LEVEL1_DCACHE_ASSOC
,

475 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

476 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

477 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

478 
	m_SC_LEVEL2_CACHE_SIZE
,

479 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

480 
	m_SC_LEVEL2_CACHE_ASSOC
,

481 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

482 
	m_SC_LEVEL2_CACHE_LINESIZE
,

483 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

484 
	m_SC_LEVEL3_CACHE_SIZE
,

485 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

486 
	m_SC_LEVEL3_CACHE_ASSOC
,

487 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

488 
	m_SC_LEVEL3_CACHE_LINESIZE
,

489 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

490 
	m_SC_LEVEL4_CACHE_SIZE
,

491 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

492 
	m_SC_LEVEL4_CACHE_ASSOC
,

493 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

494 
	m_SC_LEVEL4_CACHE_LINESIZE
,

495 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

498 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

499 
	#_SC_IPV6
 
_SC_IPV6


	)

500 
	m_SC_RAW_SOCKETS
,

501 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

503 
	m_SC_V7_ILP32_OFF32
,

504 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

505 
	m_SC_V7_ILP32_OFFBIG
,

506 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

507 
	m_SC_V7_LP64_OFF64
,

508 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

509 
	m_SC_V7_LPBIG_OFFBIG
,

510 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

512 
	m_SC_SS_REPL_MAX
,

513 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

515 
	m_SC_TRACE_EVENT_NAME_MAX
,

516 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

517 
	m_SC_TRACE_NAME_MAX
,

518 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

519 
	m_SC_TRACE_SYS_MAX
,

520 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

521 
	m_SC_TRACE_USER_EVENT_MAX
,

522 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

524 
	m_SC_XOPEN_STREAMS
,

525 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

527 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

528 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

529 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


530 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

536 
	m_CS_PATH
,

537 
	#_CS_PATH
 
_CS_PATH


	)

539 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

540 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

541 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

543 
	m_CS_GNU_LIBC_VERSION
,

544 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

545 
	m_CS_GNU_LIBPTHREAD_VERSION
,

546 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

548 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

549 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

550 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

552 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

553 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

554 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

556 
	m_CS_LFS_CFLAGS
 = 1000,

557 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

558 
	m_CS_LFS_LDFLAGS
,

559 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

560 
	m_CS_LFS_LIBS
,

561 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

562 
	m_CS_LFS_LINTFLAGS
,

563 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

564 
	m_CS_LFS64_CFLAGS
,

565 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

566 
	m_CS_LFS64_LDFLAGS
,

567 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

568 
	m_CS_LFS64_LIBS
,

569 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

570 
	m_CS_LFS64_LINTFLAGS
,

571 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

573 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

574 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

575 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

576 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

577 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

578 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

579 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

580 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

581 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

582 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

583 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

584 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

585 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

586 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

587 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

588 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

589 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

590 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

591 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

592 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

593 
	m_CS_XBS5_LP64_OFF64_LIBS
,

594 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

595 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

596 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

597 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

598 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

599 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

600 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

601 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

602 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

603 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

604 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

606 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

607 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

608 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

609 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

610 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

611 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

612 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

613 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

614 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

615 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

616 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

617 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

618 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

619 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

620 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

621 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

622 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

623 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

624 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

625 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

626 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

627 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

628 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

629 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

630 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

631 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

632 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

633 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

634 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

635 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

636 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

637 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

639 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

640 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

641 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

642 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

643 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

644 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

645 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

646 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

647 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

648 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

649 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

650 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

651 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

652 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

653 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

654 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

655 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

656 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

657 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

658 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

659 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

660 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

661 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

662 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

663 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

664 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

665 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

666 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

667 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

668 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

669 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

670 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

672 
	m_CS_V6_ENV
,

673 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

674 
	m_CS_V7_ENV


675 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/dlfcn.h

19 #i‚de‡
_DLFCN_H


24 
	#RTLD_LAZY
 0x00001

	)

25 
	#RTLD_NOW
 0x00002

	)

26 
	#RTLD_BINDING_MASK
 0x3

	)

27 
	#RTLD_NOLOAD
 0x00004

	)

28 
	#RTLD_DEEPBIND
 0x00008

	)

33 
	#RTLD_GLOBAL
 0x00100

	)

38 
	#RTLD_LOCAL
 0

	)

41 
	#RTLD_NODELETE
 0x01000

	)

43 #ifde‡
__USE_GNU


54 
	#DL_CALL_FCT
(
f˘p
, 
¨gs
) \

55 (
	`_dl_mcou¡_wøµî_check
 ((*Ë(
f˘p
)), (*(f˘p)Ë
¨gs
)

	)

57 
__BEGIN_DECLS


60 
	$_dl_mcou¡_wøµî_check
 (*
__£lÂc
Ë
__THROW
;

62 
__END_DECLS


	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFF32
 1

	)

70 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

71 
	#_POSIX_V6_ILP32_OFF32
 1

	)

72 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

73 
	#_XBS5_ILP32_OFF32
 1

	)

74 
	#_XBS5_ILP32_OFFBIG
 1

	)

91 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

92 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

93 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

94 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

95 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

96 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

19 #ifde‡
_ERRNO_H


21 #unde‡
EDOM


22 #unde‡
EILSEQ


23 #unde‡
ERANGE


24 
	~<löux/î∫o.h
>

27 
	#ENOTSUP
 
EOPNOTSUPP


	)

30 #i‚de‡
ECANCELED


31 
	#ECANCELED
 125

	)

35 #i‚de‡
EOWNERDEAD


36 
	#EOWNERDEAD
 130

	)

37 
	#ENOTRECOVERABLE
 131

	)

40 #i‚de‡
ERFKILL


41 
	#ERFKILL
 132

	)

44 #i‚de‡
EHWPOISON


45 
	#EHWPOISON
 133

	)

48 #i‚de‡
__ASSEMBLER__


50 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

52 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


54 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

59 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


63 
	#EDOM
 33

	)

64 
	#EILSEQ
 84

	)

65 
	#ERANGE
 34

	)

	@/usr/include/bits/huge_val.h

21 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

28 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

29 #ñi‡
__GNUC_PREREQ
(2,96)

30 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#HUGE_VAL
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

36 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

40 
	~<ídün.h
>

42 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

44 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


45 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

47 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


48 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

51 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

52 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

21 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

28 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

29 #ñi‡
__GNUC_PREREQ
(2,96)

30 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#HUGE_VALF
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

36 { 
__l
: 0x7f800000UL }).
__d
)

	)

40 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

45 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


46 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

49 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

50 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

21 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

27 #ñi‡
__GNUC_PREREQ
(2,96)

28 
	#HUGE_VALL
 (
__exãnsi⁄__
 0x1.0
p32767L
)

	)

31 
	#__HUGE_VALL_byãs
 { 0, 0, 0, 0, 0, 0, 0, 0x80, 0xff, 0x7f, 0, 0 }

	)

33 
	#__huge_vÆl_t
 uni⁄ { 
__c
[12]; 
__ld
; }

	)

34 #ifde‡
__GNUC__


35 
	#HUGE_VALL
 (
__exãnsi⁄__
 \

36 ((
__huge_vÆl_t
Ë{ 
__c
: 
__HUGE_VALL_byãs
 }).
__ld
)

	)

38 
__huge_vÆl_t
 
	g__huge_vÆl
 = { 
__HUGE_VALL_byãs
 };

39 
	#HUGE_VALL
 (
__huge_vÆl
.
__ld
)

	)

	@/usr/include/bits/inf.h

19 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#INFINITY
 (
	`__buûtö_öff
())

	)

28 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/math-finite.h

19 #i‚de‡
_MATH_H


24 
__REDIRECT_NTH
 (
acos
, (), 
__acos_föôe
);

25 
__REDIRECT_NTH
 (
acosf
, (), 
__acosf_föôe
);

26 #ifde‡
__MATH_DECLARE_LDOUBLE


27 #ifde‡
__NO_LONG_DOUBLE_MATH


28 
__REDIRECT_NTH
 (
aco¶
, (), 
__acos_föôe
);

30 
__REDIRECT_NTH
 (
aco¶
, (), 
__aco¶_föôe
);

34 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


36 
__REDIRECT_NTH
 (
acosh
, (), 
__acosh_föôe
);

37 
__REDIRECT_NTH
 (
acoshf
, (), 
__acoshf_föôe
);

38 #ifde‡
__MATH_DECLARE_LDOUBLE


39 #ifde‡
__NO_LONG_DOUBLE_MATH


40 
__REDIRECT_NTH
 (
acoshl
, (), 
__acosh_föôe
);

42 
__REDIRECT_NTH
 (
acoshl
, (), 
__acoshl_föôe
);

48 
__REDIRECT_NTH
 (
asö
, (), 
__asö_föôe
);

49 
__REDIRECT_NTH
 (
asöf
, (), 
__asöf_föôe
);

50 #ifde‡
__MATH_DECLARE_LDOUBLE


51 #ifde‡
__NO_LONG_DOUBLE_MATH


52 
__REDIRECT_NTH
 (
asöl
, (), 
__asö_föôe
);

54 
__REDIRECT_NTH
 (
asöl
, (), 
__asöl_föôe
);

59 
__REDIRECT_NTH
 (
©™2
, (, ), 
__©™2_föôe
);

60 
__REDIRECT_NTH
 (
©™2f
, (, ), 
__©™2f_föôe
);

61 #ifde‡
__MATH_DECLARE_LDOUBLE


62 #ifde‡
__NO_LONG_DOUBLE_MATH


63 
__REDIRECT_NTH
 (
©™2l
, (, ),

64 
__©™2_föôe
);

66 
__REDIRECT_NTH
 (
©™2l
, (, ),

67 
__©™2l_föôe
);

71 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


73 
__REDIRECT_NTH
 (
©™h
, (), 
__©™h_föôe
);

74 
__REDIRECT_NTH
 (
©™hf
, (), 
__©™hf_föôe
);

75 #ifde‡
__MATH_DECLARE_LDOUBLE


76 #ifde‡
__NO_LONG_DOUBLE_MATH


77 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™h_föôe
);

79 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™hl_föôe
);

85 
__REDIRECT_NTH
 (
cosh
, (), 
__cosh_föôe
);

86 
__REDIRECT_NTH
 (
coshf
, (), 
__coshf_föôe
);

87 #ifde‡
__MATH_DECLARE_LDOUBLE


88 #ifde‡
__NO_LONG_DOUBLE_MATH


89 
__REDIRECT_NTH
 (
coshl
, (), 
__cosh_föôe
);

91 
__REDIRECT_NTH
 (
coshl
, (), 
__coshl_föôe
);

96 
__REDIRECT_NTH
 (
exp
, (), 
__exp_föôe
);

97 
__REDIRECT_NTH
 (
expf
, (), 
__expf_föôe
);

98 #ifde‡
__MATH_DECLARE_LDOUBLE


99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
__REDIRECT_NTH
 (
ex∂
, (), 
__exp_föôe
);

102 
__REDIRECT_NTH
 (
ex∂
, (), 
__ex∂_föôe
);

106 #ifde‡
__USE_GNU


108 
__REDIRECT_NTH
 (
exp10
, (), 
__exp10_föôe
);

109 
__REDIRECT_NTH
 (
exp10f
, (), 
__exp10f_föôe
);

110 #ifde‡
__MATH_DECLARE_LDOUBLE


111 #ifde‡
__NO_LONG_DOUBLE_MATH


112 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10_föôe
);

114 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10l_föôe
);

119 
__REDIRECT_NTH
 (
pow10
, (), 
__exp10_föôe
);

120 
__REDIRECT_NTH
 (
pow10f
, (), 
__exp10f_föôe
);

121 #ifde‡
__MATH_DECLARE_LDOUBLE


122 #ifde‡
__NO_LONG_DOUBLE_MATH


123 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10_föôe
);

125 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10l_föôe
);

130 #ifde‡
__USE_ISOC99


132 
__REDIRECT_NTH
 (
exp2
, (), 
__exp2_föôe
);

133 
__REDIRECT_NTH
 (
exp2f
, (), 
__exp2f_föôe
);

134 #ifde‡
__MATH_DECLARE_LDOUBLE


135 #ifde‡
__NO_LONG_DOUBLE_MATH


136 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2_föôe
);

138 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2l_föôe
);

144 
__REDIRECT_NTH
 (
fmod
, (, ), 
__fmod_föôe
);

145 
__REDIRECT_NTH
 (
fmodf
, (, ), 
__fmodf_föôe
);

146 #ifde‡
__MATH_DECLARE_LDOUBLE


147 #ifde‡
__NO_LONG_DOUBLE_MATH


148 
__REDIRECT_NTH
 (
fmodl
, (, ),

149 
__fmod_föôe
);

151 
__REDIRECT_NTH
 (
fmodl
, (, ),

152 
__fmodl_föôe
);

156 #ifde‡
__USE_ISOC99


158 
__REDIRECT_NTH
 (
hypŸ
, (, ), 
__hypŸ_föôe
);

159 
__REDIRECT_NTH
 (
hypŸf
, (, ), 
__hypŸf_föôe
);

160 #ifde‡
__MATH_DECLARE_LDOUBLE


161 #ifde‡
__NO_LONG_DOUBLE_MATH


162 
__REDIRECT_NTH
 (
hypŸl
, (, ),

163 
__hypŸ_föôe
);

165 
__REDIRECT_NTH
 (
hypŸl
, (, ),

166 
__hypŸl_föôe
);

171 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


173 
__REDIRECT_NTH
 (
j0
, (), 
__j0_föôe
);

174 
__REDIRECT_NTH
 (
j0f
, (), 
__j0f_föôe
);

175 #ifde‡
__MATH_DECLARE_LDOUBLE


176 #ifde‡
__NO_LONG_DOUBLE_MATH


177 
__REDIRECT_NTH
 (
j0l
, (), 
__j0_föôe
);

179 
__REDIRECT_NTH
 (
j0l
, (), 
__j0l_föôe
);

184 
__REDIRECT_NTH
 (
y0
, (), 
__y0_föôe
);

185 
__REDIRECT_NTH
 (
y0f
, (), 
__y0f_föôe
);

186 #ifde‡
__MATH_DECLARE_LDOUBLE


187 #ifde‡
__NO_LONG_DOUBLE_MATH


188 
__REDIRECT_NTH
 (
y0l
, (), 
__y0_föôe
);

190 
__REDIRECT_NTH
 (
y0l
, (), 
__y0l_föôe
);

195 
__REDIRECT_NTH
 (
j1
, (), 
__j1_föôe
);

196 
__REDIRECT_NTH
 (
j1f
, (), 
__j1f_föôe
);

197 #ifde‡
__MATH_DECLARE_LDOUBLE


198 #ifde‡
__NO_LONG_DOUBLE_MATH


199 
__REDIRECT_NTH
 (
j1l
, (), 
__j1_föôe
);

201 
__REDIRECT_NTH
 (
j1l
, (), 
__j1l_föôe
);

206 
__REDIRECT_NTH
 (
y1
, (), 
__y1_föôe
);

207 
__REDIRECT_NTH
 (
y1f
, (), 
__y1f_föôe
);

208 #ifde‡
__MATH_DECLARE_LDOUBLE


209 #ifde‡
__NO_LONG_DOUBLE_MATH


210 
__REDIRECT_NTH
 (
y1l
, (), 
__y1_föôe
);

212 
__REDIRECT_NTH
 (
y1l
, (), 
__y1l_föôe
);

217 
__REDIRECT_NTH
 (
jn
, (, ), 
__jn_föôe
);

218 
__REDIRECT_NTH
 (
jnf
, (, ), 
__jnf_föôe
);

219 #ifde‡
__MATH_DECLARE_LDOUBLE


220 #ifde‡
__NO_LONG_DOUBLE_MATH


221 
__REDIRECT_NTH
 (
j∆
, (, ), 
__jn_föôe
);

223 
__REDIRECT_NTH
 (
j∆
, (, ), 
__j∆_föôe
);

228 
__REDIRECT_NTH
 (
yn
, (, ), 
__yn_föôe
);

229 
__REDIRECT_NTH
 (
ynf
, (, ), 
__ynf_föôe
);

230 #ifde‡
__MATH_DECLARE_LDOUBLE


231 #ifde‡
__NO_LONG_DOUBLE_MATH


232 
__REDIRECT_NTH
 (
y∆
, (, ), 
__yn_föôe
);

234 
__REDIRECT_NTH
 (
y∆
, (, ), 
__y∆_föôe
);

239 #ifde‡
__USE_MISC


241 
__REDIRECT_NTH
 (
lgamma_r
, (, *), 
__lgamma_r_föôe
);

242 
__REDIRECT_NTH
 (
lgammaf_r
, (, *), 
__lgammaf_r_föôe
);

243 #ifde‡
__MATH_DECLARE_LDOUBLE


244 #ifde‡
__NO_LONG_DOUBLE_MATH


245 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

246 
__lgamma_r_föôe
);

248 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

249 
__lgammÆ_r_föôe
);

254 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


256 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgamma
 (
__d
))

258 #ifde‡
__USE_ISOC99


259 
__loˇl_signgam
 = 0;

260  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

262  
	`lgamma_r
 (
__d
, &
signgam
);

264 
	}
}

265 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammaf
 (
__d
))

267 #ifde‡
__USE_ISOC99


268 
__loˇl_signgam
 = 0;

269  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

271  
	`lgammaf_r
 (
__d
, &
signgam
);

273 
	}
}

274 #ifde‡
__MATH_DECLARE_LDOUBLE


275 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammÆ
 (
__d
))

277 #ifde‡
__USE_ISOC99


278 
__loˇl_signgam
 = 0;

279  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

281  
	`lgammÆ_r
 (
__d
, &
signgam
);

283 
	}
}

287 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


289 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gamma
 (
__d
))

291 #ifde‡
__USE_ISOC99


292 
__loˇl_signgam
 = 0;

293  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

295  
	`lgamma_r
 (
__d
, &
signgam
);

297 
	}
}

298 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammaf
 (
__d
))

300 #ifde‡
__USE_ISOC99


301 
__loˇl_signgam
 = 0;

302  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

304  
	`lgammaf_r
 (
__d
, &
signgam
);

306 
	}
}

307 #ifde‡
__MATH_DECLARE_LDOUBLE


308 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammÆ
 (
__d
))

310 #ifde‡
__USE_ISOC99


311 
__loˇl_signgam
 = 0;

312  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

314  
	`lgammÆ_r
 (
__d
, &
signgam
);

316 
	}
}

321 
__REDIRECT_NTH
 (
log
, (), 
__log_föôe
);

322 
__REDIRECT_NTH
 (
logf
, (), 
__logf_föôe
);

323 #ifde‡
__MATH_DECLARE_LDOUBLE


324 #ifde‡
__NO_LONG_DOUBLE_MATH


325 
__REDIRECT_NTH
 (
logl
, (), 
__log_föôe
);

327 
__REDIRECT_NTH
 (
logl
, (), 
__logl_föôe
);

332 
__REDIRECT_NTH
 (
log10
, (), 
__log10_föôe
);

333 
__REDIRECT_NTH
 (
log10f
, (), 
__log10f_föôe
);

334 #ifde‡
__MATH_DECLARE_LDOUBLE


335 #ifde‡
__NO_LONG_DOUBLE_MATH


336 
__REDIRECT_NTH
 (
log10l
, (), 
__log10_föôe
);

338 
__REDIRECT_NTH
 (
log10l
, (), 
__log10l_föôe
);

342 #ifde‡
__USE_ISOC99


344 
__REDIRECT_NTH
 (
log2
, (), 
__log2_föôe
);

345 
__REDIRECT_NTH
 (
log2f
, (), 
__log2f_föôe
);

346 #ifde‡
__MATH_DECLARE_LDOUBLE


347 #ifde‡
__NO_LONG_DOUBLE_MATH


348 
__REDIRECT_NTH
 (
log2l
, (), 
__log2_föôe
);

350 
__REDIRECT_NTH
 (
log2l
, (), 
__log2l_föôe
);

356 
__REDIRECT_NTH
 (
ldexp
, (, ), 
sˇlbn
);

357 
__REDIRECT_NTH
 (
ldexpf
, (, ), 
sˇlbnf
);

358 #ifde‡
__MATH_DECLARE_LDOUBLE


359 
__REDIRECT_NTH
 (
ldex∂
, (, ), 
sˇlb∆
);

363 
__REDIRECT_NTH
 (
pow
, (, ), 
__pow_föôe
);

364 
__REDIRECT_NTH
 (
powf
, (, ), 
__powf_föôe
);

365 #ifde‡
__MATH_DECLARE_LDOUBLE


366 #ifde‡
__NO_LONG_DOUBLE_MATH


367 
__REDIRECT_NTH
 (
powl
, (, ),

368 
__pow_föôe
);

370 
__REDIRECT_NTH
 (
powl
, (, ),

371 
__powl_föôe
);

376 
__REDIRECT_NTH
 (
ªmaödî
, (, ), 
__ªmaödî_föôe
);

377 
__REDIRECT_NTH
 (
ªmaödîf
, (, ), 
__ªmaödîf_föôe
);

378 #ifde‡
__MATH_DECLARE_LDOUBLE


379 #ifde‡
__NO_LONG_DOUBLE_MATH


380 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

381 
__ªmaödî_föôe
);

383 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

384 
__ªmaödîl_föôe
);

388 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


390 
__REDIRECT_NTH
 (
sˇlb
, (, ), 
__sˇlb_föôe
);

391 
__REDIRECT_NTH
 (
sˇlbf
, (, ), 
__sˇlbf_föôe
);

392 #ifde‡
__MATH_DECLARE_LDOUBLE


393 #ifde‡
__NO_LONG_DOUBLE_MATH


394 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

395 
__sˇlb_föôe
);

397 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

398 
__sˇlbl_föôe
);

404 
__REDIRECT_NTH
 (
söh
, (), 
__söh_föôe
);

405 
__REDIRECT_NTH
 (
söhf
, (), 
__söhf_föôe
);

406 #ifde‡
__MATH_DECLARE_LDOUBLE


407 #ifde‡
__NO_LONG_DOUBLE_MATH


408 
__REDIRECT_NTH
 (
söhl
, (), 
__söh_föôe
);

410 
__REDIRECT_NTH
 (
söhl
, (), 
__söhl_föôe
);

415 
__REDIRECT_NTH
 (
sqπ
, (), 
__sqπ_föôe
);

416 
__REDIRECT_NTH
 (
sqπf
, (), 
__sqπf_föôe
);

417 #ifde‡
__MATH_DECLARE_LDOUBLE


418 #ifde‡
__NO_LONG_DOUBLE_MATH


419 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπ_föôe
);

421 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπl_föôe
);

425 #ifde‡
__USE_ISOC99


427 
__gamma_r_föôe
 (, *);

428 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgamma
 (
__d
))

430 
__loˇl_signgam
 = 0;

431 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

432  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

433 
	}
}

434 
__gammaf_r_föôe
 (, *);

435 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammaf
 (
__d
))

437 
__loˇl_signgam
 = 0;

438 
__ªs
 = 
	`__gammaf_r_föôe
 (
__d
, &
__loˇl_signgam
);

439  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

440 
	}
}

441 #ifde‡
__MATH_DECLARE_LDOUBLE


442 
__gammÆ_r_föôe
 (, *);

443 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammÆ
 (
__d
))

445 
__loˇl_signgam
 = 0;

446 #ifde‡
__NO_LONG_DOUBLE_MATH


447 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

449 
__ªs
 = 
	`__gammÆ_r_föôe
 (
__d
, &
__loˇl_signgam
);

451  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

452 
	}
}

	@/usr/include/bits/mathcalls.h

45 #i‚de‡
_MATH_H


52 
_MdoubÀ_BEGIN_NAMESPACE


54 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

56 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

58 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

60 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

63 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

65 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

67 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

72 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

74 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

76 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

77 
	g_MdoubÀ_END_NAMESPACE


79 #ifde‡
__USE_GNU


81 
__MATHDECL
 (,
söcos
,,

82 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

85 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


86 
__BEGIN_NAMESPACE_C99


88 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

90 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

92 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

93 
	g__END_NAMESPACE_C99


98 
_MdoubÀ_BEGIN_NAMESPACE


100 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

103 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

106 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

109 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

112 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

115 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
))

116 
__©åibuã__
 ((
__n⁄nuŒ__
 (2)));

117 
	g_MdoubÀ_END_NAMESPACE


119 #ifde‡
__USE_GNU


121 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

123 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

126 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


127 
__BEGIN_NAMESPACE_C99


129 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

132 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

135 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

136 
	g__END_NAMESPACE_C99


139 #ifde‡
__USE_ISOC99


140 
__BEGIN_NAMESPACE_C99


142 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

145 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

146 
	g__END_NAMESPACE_C99


152 
_MdoubÀ_BEGIN_NAMESPACE


154 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

157 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

158 
	g_MdoubÀ_END_NAMESPACE


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


161 
__BEGIN_NAMESPACE_C99


163 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

164 
	g__END_NAMESPACE_C99


167 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


168 
__BEGIN_NAMESPACE_C99


170 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

171 
	g__END_NAMESPACE_C99


177 
_MdoubÀ_BEGIN_NAMESPACE


179 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

182 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

185 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

188 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

193 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

197 
	g_MdoubÀ_END_NAMESPACE


199 #ifde‡
__USE_MISC


202 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

205 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

208 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

212 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

215 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


216 
__BEGIN_NAMESPACE_C99


218 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

219 
	g__END_NAMESPACE_C99


222 #ifde‡
__USE_ISOC99


223 
__BEGIN_NAMESPACE_C99


225 
__MATHCALLX
 (
«n
,, (c⁄° *
__ègb
), (
__c⁄°__
));

226 
	g__END_NAMESPACE_C99


231 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

233 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

238 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

240 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

241 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

243 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

247 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


248 
__BEGIN_NAMESPACE_C99


250 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

253 
	g__END_NAMESPACE_C99


256 #ifde‡
__USE_ISOC99


257 
__BEGIN_NAMESPACE_C99


259 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

260 
	g__END_NAMESPACE_C99


263 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


265 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

268 #ifde‡
__USE_MISC


272 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

276 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


277 
__BEGIN_NAMESPACE_C99


280 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

283 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

284 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


285 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

289 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

291 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


293 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

297 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

300 #ifde‡
__USE_ISOC99


302 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

306 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

310 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

314 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

319 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

326 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

336 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

339 
__MATHCALLX
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

342 
__MATHCALLX
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

346 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

347 
__©åibuã__
 ((
__c⁄°__
));

350 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

351 
__©åibuã__
 ((
__c⁄°__
));

355 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

358 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


359 
	g__END_NAMESPACE_C99


362 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


364 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

18 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


22 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


23 
	#_MATH_H_MATHDEF
 1

	)

25 #i‡
deföed
 
__x86_64__
 || (deföed 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

28 
	tÊﬂt_t
;

29 
	tdoubÀ_t
;

35 
	tÊﬂt_t
;

37 
	tdoubÀ_t
;

42 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

43 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

47 #i‡
__FP_FAST_FMA


48 
	#FP_FAST_FMA
 1

	)

51 #i‡
__FP_FAST_FMAF


52 
	#FP_FAST_FMAF
 1

	)

55 #i‡
__FP_FAST_FMAL


56 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/mathinline.h

19 #i‚de‡
_MATH_H


23 #i‚de‡
__exã∫_Æways_ölöe


24 
	#__MATH_INLINE
 
__ölöe


	)

26 
	#__MATH_INLINE
 
__exã∫_Æways_ölöe


	)

30 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

32 #i‡!
__GNUC_PREREQ
 (2,97)

37 #unde‡
isgª©î


38 #unde‡
isgª©îequÆ


39 #unde‡
i¶ess


40 #unde‡
i¶es£quÆ


41 #unde‡
i¶essgª©î


42 #unde‡
isun‹dîed


43 #ifde‡
__i686__


46 
	#isgª©î
(
x
, 
y
) \

47 ({ 
__ªsu…
; \

48 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

49 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

50 
__ªsu…
; })

	)

51 
	#isgª©îequÆ
(
x
, 
y
) \

52 ({ 
__ªsu…
; \

53 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

54 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

55 
__ªsu…
; })

	)

57 
	#i¶ess
(
x
, 
y
) \

58 ({ 
__ªsu…
; \

59 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

60 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

61 
__ªsu…
; })

	)

63 
	#i¶es£quÆ
(
x
, 
y
) \

64 ({ 
__ªsu…
; \

65 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

66 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

67 
__ªsu…
; })

	)

69 
	#i¶essgª©î
(
x
, 
y
) \

70 ({ 
__ªsu…
; \

71 
	`__asm__
 ("fucomip %%st(1), %%st; setne %%al" \

72 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

73 
__ªsu…
; })

	)

75 
	#isun‹dîed
(
x
, 
y
) \

76 ({ 
__ªsu…
; \

77 
	`__asm__
 ("fucomip %%st(1), %%st; setp %%al" \

78 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

79 
__ªsu…
; })

	)

82 
	#isgª©î
(
x
, 
y
) \

83 ({ 
__ªsu…
; \

84 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

85 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

86 
__ªsu…
; })

	)

88 
	#isgª©îequÆ
(
x
, 
y
) \

89 ({ 
__ªsu…
; \

90 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

91 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

92 
__ªsu…
; })

	)

94 
	#i¶ess
(
x
, 
y
) \

95 ({ 
__ªsu…
; \

96 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

97 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

98 
__ªsu…
; })

	)

100 
	#i¶es£quÆ
(
x
, 
y
) \

101 ({ 
__ªsu…
; \

102 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

103 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

104 
__ªsu…
; })

	)

106 
	#i¶essgª©î
(
x
, 
y
) \

107 ({ 
__ªsu…
; \

108 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x44, %%ah; setz %%al" \

109 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

110 
__ªsu…
; })

	)

112 
	#isun‹dîed
(
x
, 
y
) \

113 ({ 
__ªsu…
; \

114 
	`__asm__
 ("fucompp; fnstsw; sahf; setp %%al" \

115 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

116 
__ªsu…
; })

	)

122 #i‡
__GNUC_PREREQ
 (2, 8)

123 
__BEGIN_NAMESPACE_C99


126 
__MATH_INLINE
 

127 
__NTH
 (
	$__signbôf
 (
__x
))

129 #ifde‡
__SSE2_MATH__


130 
__m
;

131 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

132  (
__m
 & 0x8) != 0;

134 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

135  
__u
.
__i
 < 0;

137 
	}
}

138 
__MATH_INLINE
 

139 
__NTH
 (
	$__signbô
 (
__x
))

141 #ifde‡
__SSE2_MATH__


142 
__m
;

143 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

144  (
__m
 & 0x80) != 0;

146 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

147  
__u
.
__i
[1] < 0;

149 
	}
}

150 
__MATH_INLINE
 

151 
__NTH
 (
	$__signbôl
 (
__x
))

153 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

154  (
__u
.
__i
[2] & 0x8000) != 0;

155 
	}
}

157 
	g__END_NAMESPACE_C99


164 #i‡
__GNUC_PREREQ
 (2, 8)

165 #i‡!
__GNUC_PREREQ
 (3, 4Ë&& !
deföed
 
__NO_MATH_INLINES
 \

166 && 
deföed
 
	g__OPTIMIZE__


170 #ifde‡
__USE_ISOC99


171 
	g__BEGIN_NAMESPACE_C99


174 #ifde‡
__SSE_MATH__


175 
__MATH_INLINE
 

176 
__NTH
 (
	$Ãötf
 (
__x
))

178 
__ªs
;

183 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

184  
__ªs
;

185 
	}
}

187 #ifde‡
__SSE2_MATH__


188 
__MATH_INLINE
 

189 
__NTH
 (
	$Ãöt
 (
__x
))

191 
__ªs
;

196 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

197  
__ªs
;

198 
	}
}

200 #ifde‡
__x86_64__


201 
__MATH_INLINE
 

202 
__NTH
 (
	$Œrötf
 (
__x
))

204 
__ªs
;

209 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

210  
__ªs
;

211 
	}
}

212 
__MATH_INLINE
 

213 
__NTH
 (
	$Œröt
 (
__x
))

215 
__ªs
;

220 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

221  
__ªs
;

222 
	}
}

225 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0 \

226 && 
deföed
 
__SSE2_MATH__


228 
__MATH_INLINE
 

229 
__NTH
 (
	$fmaxf
 (
__x
, 
__y
))

231 #ifde‡
__AVX__


232 
__ªs
;

233 
	`__asm
 ("vmaxs†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

234  
__ªs
;

236 
	`__asm
 ("maxs†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

237  
__x
;

239 
	}
}

240 
__MATH_INLINE
 

241 
__NTH
 (
	$fmax
 (
__x
, 
__y
))

243 #ifde‡
__AVX__


244 
__ªs
;

245 
	`__asm
 ("vmaxsd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

246  
__ªs
;

248 
	`__asm
 ("maxsd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

249  
__x
;

251 
	}
}

254 
__MATH_INLINE
 

255 
__NTH
 (
	$fmöf
 (
__x
, 
__y
))

257 #ifde‡
__AVX__


258 
__ªs
;

259 
	`__asm
 ("vmös†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

260  
__ªs
;

262 
	`__asm
 ("mös†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

263  
__x
;

265 
	}
}

266 
__MATH_INLINE
 

267 
__NTH
 (
	$fmö
 (
__x
, 
__y
))

269 #ifde‡
__AVX__


270 
__ªs
;

271 
	`__asm
 ("vmösd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

272  
__ªs
;

274 
	`__asm
 ("mösd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

275  
__x
;

277 
	}
}

280 
	g__END_NAMESPACE_C99


283 #i‡
deföed
 
__SSE4_1__
 && deföed 
__SSE2_MATH__


284 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


285 
__BEGIN_NAMESPACE_C99


288 
__MATH_INLINE
 

289 
__NTH
 (
	$röt
 (
__x
))

291 
__ªs
;

296 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

297  
__ªs
;

298 
	}
}

299 
__MATH_INLINE
 

300 
__NTH
 (
	$rötf
 (
__x
))

302 
__ªs
;

307 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

308  
__ªs
;

309 
	}
}

311 #ifde‡
__USE_ISOC99


313 
__MATH_INLINE
 

314 
__NTH
 (
	$√¨byöt
 (
__x
))

316 
__ªs
;

321 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

322  
__ªs
;

323 
	}
}

324 
__MATH_INLINE
 

325 
__NTH
 (
	$√¨byötf
 (
__x
))

327 
__ªs
;

332 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

333  
__ªs
;

334 
	}
}

337 
	g__END_NAMESPACE_C99


340 
__BEGIN_NAMESPACE_STD


342 
__MATH_INLINE
 

343 
__NTH
 (
	$˚û
 (
__x
))

345 
__ªs
;

346 
	`__asm
 ("roundsd $2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

347  
__ªs
;

348 
	}
}

349 
__END_NAMESPACE_STD


351 
__BEGIN_NAMESPACE_C99


352 
__MATH_INLINE
 

353 
__NTH
 (
	$˚ûf
 (
__x
))

355 
__ªs
;

356 
	`__asm
 ("rounds†$2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

357  
__ªs
;

358 
	}
}

359 
__END_NAMESPACE_C99


361 
__BEGIN_NAMESPACE_STD


363 
__MATH_INLINE
 

364 
__NTH
 (
	$Êo‹
 (
__x
))

366 
__ªs
;

367 
	`__asm
 ("roundsd $1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

368  
__ªs
;

369 
	}
}

370 
__END_NAMESPACE_STD


372 
__BEGIN_NAMESPACE_C99


373 
__MATH_INLINE
 

374 
__NTH
 (
	$Êo‹f
 (
__x
))

376 
__ªs
;

377 
	`__asm
 ("rounds†$1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

378  
__ªs
;

379 
	}
}

380 
	g__END_NAMESPACE_C99


385 #i‚de‡
__x86_64__


386 #i‡((!
deföed
 
__NO_MATH_INLINES
 || deföed 
__LIBC_INTERNAL_MATH_INLINES
) \

387 && 
deföed
 
	g__OPTIMIZE__
)

391 #unde‡
m©h_îrh™dlög


400 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


401 
	#__ölöe_m©h›
(
func
, 
›
) \

402 
	`__ölöe_m©h›_
 (, 
func
, 
›
) \

403 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

404 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

405 
	#__ölöe_m©h›NP
(
func
, 
›
) \

406 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
) \

407 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

408 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

410 
	#__ölöe_m©h›
(
func
, 
›
) \

411 
	`__ölöe_m©h›_
 (, 
func
, 
›
)

	)

412 
	#__ölöe_m©h›NP
(
func
, 
›
) \

413 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
)

	)

416 
	#__ölöe_m©h›_
(
Êﬂt_ty≥
, 
func
, 
›
) \

417 
	`__ölöe_m©h›_de˛_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

418 
	#__ölöe_m©h›NP_
(
Êﬂt_ty≥
, 
func
, 
›
) \

419 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

422 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


423 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

424 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
) \

425 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

426 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

427 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

428 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
) \

429 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

430 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

432 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

433 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
)

	)

434 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

435 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
)

	)

438 
	#__ölöe_m©h›_de˛_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

439 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

440 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
)

	)

442 
	#__ölöe_m©h›_de˛NP_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

443 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
__x
)) \

445 
Êﬂt_ty≥
 
__ªsu…
; \

446 
__asm
 
	`__vﬁ©ûe__
 (
›
 : "Ò" (
__ªsu…
Ë: 
∑øms
); \

447  
__ªsu…
; \

448 }

	)

451 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


452 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

453 
	`__ölöe_m©hcode_
 (, 
func
, 
¨g
, 
code
) \

454 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

455 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

456 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

457 
	`__ölöe_m©hcodeNP_
 (, 
func
, 
¨g
, 
code
) \

458 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

459 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

460 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

461 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

462 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

463 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

464 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

465 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

466 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

467 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

468 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

469 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

470 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

471 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

472 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

473 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

474 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

475 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

477 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

478 
	`__ölöe_m©hcode_
 (, 
func
, (
¨g
), 
code
)

	)

479 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

480 
	`__ölöe_m©hcodeNP_
 (, 
func
, (
¨g
), 
code
)

	)

481 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

482 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

483 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

484 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

485 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

486 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

487 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

488 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

491 
	#__ölöe_m©hcode_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

492 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

493 
	`__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
)

	)

495 
	#__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

496 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g
)) \

498 
code
; \

499 }

	)

502 
	#__ölöe_m©hcode2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

503 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

504 
	`__ölöe_m©hcodeNP2_
 (
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

506 
	#__ölöe_m©hcodeNP2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

507 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
)) \

509 
code
; \

510 }

	)

512 
	#__ölöe_m©hcode3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

513 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

514 
	`__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

516 
	#__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

517 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
, \

518 
Êﬂt_ty≥
 
¨g3
)) \

520 
code
; \

521 }

	)

525 #i‡!
deföed
 
__NO_MATH_INLINES
 && deföed 
__OPTIMIZE__


529 #ifde‡
__FAST_MATH__


530 #ifde‡
__USE_GNU


531 
	#__söcos_code
 \

532 
__co§
; \

533 
__sör
; \

534 
__swtmp
; \

535 
__asm
 
__vﬁ©ûe__
 \

550 : "Ò" (
__co§
), "=u" (
__sör
), "˜" (
__swtmp
Ë: "0" (
__x
)); \

551 *
__söx
 = 
__sör
; \

552 *
__cosx
 = 
__co§


	)

554 
__MATH_INLINE
 

555 
__NTH
 (
	$__söcos
 (
__x
, *
__söx
, *
__cosx
))

557 
__söcos_code
;

558 
	}
}

560 
__MATH_INLINE
 

561 
__NTH
 (
	$__söcosf
 (
__x
, *
__söx
, *
__cosx
))

563 
__söcos_code
;

564 
	}
}

566 
__MATH_INLINE
 

567 
__NTH
 (
	$__söco¶
 (
__x
, *
__söx
, *
__cosx
))

569 
__söcos_code
;

570 
	}
}

577 #i‡
__GNUC_PREREQ
 (3, 5)

578 
	#__expm1_code
 \

579 
__ãmp
; \

580 
__ãmp
 = 
	`__buûtö_expm1l
 (
__x
); \

581  
__ãmp
 ? __ãm∞: 
__x


	)

583 
	#__expm1_code
 \

584 
__vÆue
; \

585 
__exp⁄ít
; \

586 
__ãmp
; \

587 
__asm
 
__vﬁ©ûe__
 \

596 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

597 
__asm
 
__vﬁ©ûe__
 \

599 : "Ò" (
__ãmp
Ë: "0" (1.0), "u" (
__exp⁄ít
)); \

600 
__ãmp
 -= 1.0; \

601 
__ãmp
 +
__vÆue
; \

602  
__ãmp
 ? __ãm∞: 
__x


	)

604 
	$__ölöe_m©hcodeNP_
 (, 
__expm1l
, 
__x
, 
__expm1_code
)

606 #i‡
	`__GNUC_PREREQ
 (3, 4)

607 
	`__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
,  
	$__buûtö_ex∂
 (
__x
))

609 
	#__exp_code
 \

610 
__vÆue
; \

611 
__exp⁄ít
; \

612 
__asm
 
__vﬁ©ûe__
 \

620 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

621 
__vÆue
 += 1.0; \

622 
__asm
 
__vﬁ©ûe__
 \

624 : "Ò" (
__vÆue
Ë: "0" (__vÆue), "u" (
__exp⁄ít
)); \

625  
__vÆue


	)

626 
	$__ölöe_m©hcodeNP
 (
exp
, 
__x
, 
__exp_code
)

627 
	$__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
, 
__exp_code
)

631 #i‡!
	`__GNUC_PREREQ
 (3, 5)

632 
	`__ölöe_m©hcodeNP
 (
èn
, 
__x
, \

633 
__vÆue
; \

634 
__vÆue2
 
	`__©åibuã__
 ((
__unu£d__
)); \

635 
__asm
 
__vﬁ©ûe__
 \

637 : "Ò" (
__vÆue2
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

638  
__vÆue
)

643 #i‡
	`__GNUC_PREREQ
 (3, 4)

644 
	`__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
,

645  
	$__buûtö_©™2l
 (
__y
, 
__x
))

647 
	#__©™2_code
 \

648 
__vÆue
; \

649 
__asm
 
__vﬁ©ûe__
 \

651 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "st(1)"); \

652  
__vÆue


	)

653 #ifde‡
__FAST_MATH__


654 
	$__ölöe_m©hcodeNP2
 (
©™2
, 
__y
, 
__x
, 
__©™2_code
)

656 
	$__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
, 
__©™2_code
)

660 #i‡
deföed
 
__FAST_MATH__
 && !
	`__GNUC_PREREQ
 (3, 5)

661 
	`__ölöe_m©hcodeNP2
 (
fmod
, 
__x
, 
__y
, \

662 
__vÆue
; \

663 
__asm
 
__vﬁ©ûe__
 \

668 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "ax", "cc"); \

669  
__vÆue
)

673 #ifde‡
__FAST_MATH__


674 #i‡!
	`__GNUC_PREREQ
 (3,3)

675 
	`__ölöe_m©h›NP
 (
sqπ
, "fsqrt")

676 
	`__ölöe_m©h›NP_
 (, 
__sqπl
, "fsqrt")

677 
	#__libc_sqπl
(
n
Ë
	`__sqπl
 (n)

	)

679 
	#__libc_sqπl
(
n
Ë
	`__buûtö_sqπl
 (n)

	)

683 #i‡
	`__GNUC_PREREQ
 (2, 8)

684 
	`__ölöe_m©hcodeNP_
 (, 
Ábs
, 
__x
,  
	$__buûtö_Ábs
 (
__x
))

685 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


686 
	`__ölöe_m©hcodeNP_
 (, 
Ábsf
, 
__x
,  
	$__buûtö_Ábsf
 (
__x
))

687 
	`__ölöe_m©hcodeNP_
 (, 
Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

689 
	`__ölöe_m©hcodeNP_
 (, 
__Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

691 
	`__ölöe_m©h›
 (
Ábs
, "fabs")

692 
	`__ölöe_m©h›_
 (, 
__Áb¶
, "fabs")

695 #ifde‡
__FAST_MATH__


696 #i‡!
	`__GNUC_PREREQ
 (3, 4)

698 
	`__ölöe_m©h›NP
 (
sö
, "fsin")

700 
	`__ölöe_m©h›NP
 (
cos
, "fcos")

702 
	`__ölöe_m©h›_de˛NP
 (
log
, "Êd 2; fxch; fyl2x", "0" (
__x
) : "st(1)")

705 #i‡!
	`__GNUC_PREREQ
 (3, 5)

706 
	`__ölöe_m©h›_de˛NP
 (
log10
, "Êdlg2; fxch; fyl2x", "0" (
__x
) : "st(1)")

708 
	`__ölöe_m©hcodeNP
 (
asö
, 
__x
,  
	`__©™2l
 (__x, 
	`__libc_sqπl
 (1.0 - __x * __x)))

709 
	`__ölöe_m©hcodeNP
 (
acos
, 
__x
,  
	`__©™2l
 (
	`__libc_sqπl
 (1.0 - __x * __x), __x))

712 #i‡!
	`__GNUC_PREREQ
 (3, 4)

713 
	`__ölöe_m©h›_de˛NP
 (
©™
, "Êd1; f∑èn", "0" (
__x
) : "st(1)")

717 
	`__ölöe_m©hcode_
 (, 
__sgn1l
, 
__x
, \

718 
__exãnsi⁄__
 uni⁄ { 
__xld
; 
__xi
[3]; } 
__n
 = \

719 { 
__xld
: 
__x
 
	}
}; \

720 
	g__n
.
	g__xi
[2] = (
__n
.
__xi
[2] & 0x8000) | 0x3fff; \

721 
	g__n
.
	g__xi
[1] = 0x80000000; \

722 
	g__n
.
	g__xi
[0] = 0; \

723  
	g__n
.
	g__xld
)

726 #ifde‡
__FAST_MATH__


728 
__ölöe_m©hcodeNP
 (
söh
, 
__x
, \

729 
__exm1
 = 
__expm1l
 (
__Áb¶
 (
__x
)); \

730  0.5 * (
__exm1
 / (__exm1 + 1.0Ë+ __exm1Ë* 
	$__sgn1l
 (
__x
))

732 
	`__ölöe_m©hcodeNP
 (
cosh
, 
__x
, \

733 
__ex
 = 
	`__ex∂
 (
__x
); \

734  0.5 * (
__ex
 + 1.0 / __ex))

736 
	`__ölöe_m©hcodeNP
 (
ènh
, 
__x
, \

737 
__exm1
 = 
	`__expm1l
 (-
	`__Áb¶
 (
__x
 + __x)); \

738  
__exm1
 / (__exm1 + 2.0Ë* 
	`__sgn1l
 (-
__x
))

741 
	`__ölöe_m©hcodeNP
 (
Êo‹
, 
__x
, \

742 
__vÆue
; \

743 
__ign‹e
; \

744 
__cw
; \

745 
__cwtmp
; \

746 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

754 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

755 "=m" (
__cw
) \

756 : "0" (
__x
)); \

757  
__vÆue
)

759 
	`__ölöe_m©hcodeNP
 (
˚û
, 
__x
, \

760 
__vÆue
; \

761 
__ign‹e
; \

762 
__cw
; \

763 
__cwtmp
; \

764 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

772 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

773 "=m" (
__cw
) \

774 : "0" (
__x
)); \

775  
__vÆue
)

777 #ifde‡
__FAST_MATH__


778 
	#__ldexp_code
 \

779 
__vÆue
; \

780 
__asm
 
__vﬁ©ûe__
 \

782 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" ((Ë
__y
)); \

783  
__vÆue


	)

785 
__MATH_INLINE
 

786 
	`__NTH
 (
	$ldexp
 (
__x
, 
__y
))

788 
__ldexp_code
;

789 
	}
}

794 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


796 #ifde‡
__FAST_MATH__


797 
	$__ölöe_m©hcodeNP
 (
expm1
, 
__x
, 
__expm1_code
)

801 
	#__M_SQRT2
 1.41421356237309504880L

	)

803 #i‡!
	`__GNUC_PREREQ
 (3, 5)

804 
	`__ölöe_m©hcodeNP
 (
log1p
, 
__x
, \

805 
__vÆue
; \

806 i‡(
	`__Áb¶
 (
__x
Ë>1.0 - 0.5 * 
__M_SQRT2
) \

807 
__vÆue
 = 
	`logl
 (1.0 + 
__x
); \

809 
__asm
 
__vﬁ©ûe__
 \

813 : "Ò" (
__vÆue
Ë: "0" (
__x
) : "st(1)"); \

814  
__vÆue
)

819 
	`__ölöe_m©hcodeNP
 (
asöh
, 
__x
, \

820 
__y
 = 
	`__Áb¶
 (
__x
); \

821  (
	`log1∂
 (
__y
 * __y / (
	`__libc_sqπl
 (__y * __y + 1.0) + 1.0) + __y) \

822 * 
	$__sgn1l
 (
__x
)))

824 
	`__ölöe_m©hcodeNP
 (
acosh
, 
__x
, \

825  
	`logl
 (
__x
 + 
	`__libc_sqπl
 (__x - 1.0) * __libc_sqrtl (__x + 1.0)))

827 
	`__ölöe_m©hcodeNP
 (
©™h
, 
__x
, \

828 
__y
 = 
	`__Áb¶
 (
__x
); \

829  -0.5 * 
	`log1∂
 (-(
__y
 + __yË/ (1.0 + __y)Ë* 
	$__sgn1l
 (
__x
))

832 
	`__ölöe_m©hcodeNP2
 (
hypŸ
, 
__x
, 
__y
,

833  
	`__libc_sqπl
 (
__x
 * __x + 
__y
 * __y))

835 #i‡!
	`__GNUC_PREREQ
 (3, 5)

836 
	`__ölöe_m©hcodeNP
(
logb
, 
__x
, \

837 
__vÆue
; \

838 
__junk
; \

839 
__asm
 
__vﬁ©ûe__
 \

841 : "Ò" (
__junk
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

842  
__vÆue
)

848 #ifde‡
__USE_ISOC99


849 #ifde‡
__FAST_MATH__


851 #i‡!
	`__GNUC_PREREQ
 (3, 5)

852 
	`__ölöe_m©h›_de˛NP
 (
log2
, "Êd1; fxch; fyl2x", "0" (
__x
) : "st(1)")

855 
__MATH_INLINE
 

856 
	`__NTH
 (
	$ldexpf
 (
__x
, 
__y
))

858 
__ldexp_code
;

859 
	}
}

861 
__MATH_INLINE
 

862 
__NTH
 (
	$ldex∂
 (
__x
, 
__y
))

864 
__ldexp_code
;

865 
	}
}

867 
__ölöe_m©h›NP
 (
röt
, "frndint")

870 
	#__Ãöt_code
 \

871 
__Ãöåes
; \

872 
__asm__
 
__vﬁ©ûe__
 \

874 : "=m" (
__Ãöåes
Ë: "t" (
__x
) : "st"); \

875  
__Ãöåes


	)

876 
__MATH_INLINE
 

877 
__NTH
 (
	$Ãötf
 (
__x
))

879 
__Ãöt_code
;

880 
	}
}

881 
__MATH_INLINE
 

882 
__NTH
 (
	$Ãöt
 (
__x
))

884 
__Ãöt_code
;

885 
	}
}

886 
__MATH_INLINE
 

887 
__NTH
 (
	$Ãöé
 (
__x
))

889 
__Ãöt_code
;

890 
	}
}

891 #unde‡
__Ãöt_code


893 
	#__Œröt_code
 \

894 
__Œröåes
; \

895 
__asm__
 
__vﬁ©ûe__
 \

897 : "=m" (
__Œröåes
Ë: "t" (
__x
) : "st"); \

898  
__Œröåes


	)

899 
__MATH_INLINE
 

900 
__NTH
 (
	$Œrötf
 (
__x
))

902 
__Œröt_code
;

903 
	}
}

904 
__MATH_INLINE
 

905 
__NTH
 (
	$Œröt
 (
__x
))

907 
__Œröt_code
;

908 
	}
}

909 
__MATH_INLINE
 

910 
__NTH
 (
	$Œröé
 (
__x
))

912 
__Œröt_code
;

913 
	}
}

914 #unde‡
__Œröt_code


919 #ifde‡
__USE_MISC


921 #i‡
deföed
 
__FAST_MATH__
 && !
__GNUC_PREREQ
 (3, 5)

922 
__ölöe_m©hcodeNP2
 (
dªm
, 
__x
, 
__y
, \

923 
__vÆue
; \

924 
__˛obbîed
; \

925 
__asm
 
__vﬁ©ûe__
 \

930 : "Ò" (
__vÆue
), "=&a" (
__˛obbîed
Ë: "0" (
__x
), "u" (
__y
) : "cc"); \

931  
__vÆue
)

936 
__MATH_INLINE
 

937 
__NTH
 (
	$__föôe
 (
__x
))

939  (
__exãnsi⁄__


940 (((((uni⁄ { 
__d
; 
__i
[2]; }Ë{__d: 
__x
}).__i[1]

942 
	}
}

947 #unde‡
__©™2_code


948 #ifde‡
__FAST_MATH__


949 #unde‡
__expm1_code


950 #unde‡
__exp_code


951 #unde‡
__söcos_code


958 #ifde‡
__LIBC_INTERNAL_MATH_INLINES


959 
__ölöe_m©h›
 (
__õì754_sqπ
, "fsqrt")

960 
__ölöe_m©hcode2
 (
__õì754_©™2
, 
__y
, 
__x
,

961 
__vÆue
;

962 
__asm
 
__vﬁ©ûe__
 ("fpatan\n\t"

963 : "Ò" (
__vÆue
)

964 : "0" (
__x
), "u" (
__y
) : "st(1)");

965  
__vÆue
;)

	@/usr/include/bits/mman.h

19 #i‚de‡
_SYS_MMAN_H


32 
	#PROT_READ
 0x1

	)

33 
	#PROT_WRITE
 0x2

	)

34 
	#PROT_EXEC
 0x4

	)

35 
	#PROT_NONE
 0x0

	)

36 
	#PROT_GROWSDOWN
 0x01000000

	)

38 
	#PROT_GROWSUP
 0x02000000

	)

42 
	#MAP_SHARED
 0x01

	)

43 
	#MAP_PRIVATE
 0x02

	)

44 #ifde‡
__USE_MISC


45 
	#MAP_TYPE
 0x0‡

	)

49 
	#MAP_FIXED
 0x10

	)

50 #ifde‡
__USE_MISC


51 
	#MAP_FILE
 0

	)

52 
	#MAP_ANONYMOUS
 0x20

	)

53 
	#MAP_ANON
 
MAP_ANONYMOUS


	)

54 
	#MAP_32BIT
 0x40

	)

58 #ifde‡
__USE_MISC


59 
	#MAP_GROWSDOWN
 0x00100

	)

60 
	#MAP_DENYWRITE
 0x00800

	)

61 
	#MAP_EXECUTABLE
 0x01000

	)

62 
	#MAP_LOCKED
 0x02000

	)

63 
	#MAP_NORESERVE
 0x04000

	)

64 
	#MAP_POPULATE
 0x08000

	)

65 
	#MAP_NONBLOCK
 0x10000

	)

66 
	#MAP_STACK
 0x20000

	)

67 
	#MAP_HUGETLB
 0x40000

	)

71 
	#MS_ASYNC
 1

	)

72 
	#MS_SYNC
 4

	)

73 
	#MS_INVALIDATE
 2

	)

76 
	#MCL_CURRENT
 1

	)

77 
	#MCL_FUTURE
 2

	)

81 #ifde‡
__USE_GNU


82 
	#MREMAP_MAYMOVE
 1

	)

83 
	#MREMAP_FIXED
 2

	)

87 #ifde‡
__USE_BSD


88 
	#MADV_NORMAL
 0

	)

89 
	#MADV_RANDOM
 1

	)

90 
	#MADV_SEQUENTIAL
 2

	)

91 
	#MADV_WILLNEED
 3

	)

92 
	#MADV_DONTNEED
 4

	)

93 
	#MADV_REMOVE
 9

	)

94 
	#MADV_DONTFORK
 10

	)

95 
	#MADV_DOFORK
 11

	)

96 
	#MADV_MERGEABLE
 12

	)

97 
	#MADV_UNMERGEABLE
 13

	)

98 
	#MADV_HUGEPAGE
 14

	)

99 
	#MADV_NOHUGEPAGE
 15

	)

100 
	#MADV_DONTDUMP
 16

	)

102 
	#MADV_DODUMP
 17

	)

103 
	#MADV_HWPOISON
 100

	)

107 #ifde‡
__USE_XOPEN2K


108 
	#POSIX_MADV_NORMAL
 0

	)

109 
	#POSIX_MADV_RANDOM
 1

	)

110 
	#POSIX_MADV_SEQUENTIAL
 2

	)

111 
	#POSIX_MADV_WILLNEED
 3

	)

112 
	#POSIX_MADV_DONTNEED
 4

	)

	@/usr/include/bits/nan.h

19 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

28 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#NAN
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7fc00000UL }).
__d
)

	)

39 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

48 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__«n_uni⁄


49 
	g__©åibuã_u£d__
 = { 
__«n_byãs
 };

50 
	#NAN
 (
__«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/posix1_lim.h

24 #i‚def 
_BITS_POSIX1_LIM_H


25 
	#_BITS_POSIX1_LIM_H
 1

	)

31 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

34 
	#_POSIX_AIO_MAX
 1

	)

37 
	#_POSIX_ARG_MAX
 4096

	)

40 #ifde‡
__USE_XOPEN2K


41 
	#_POSIX_CHILD_MAX
 25

	)

43 
	#_POSIX_CHILD_MAX
 6

	)

47 
	#_POSIX_DELAYTIMER_MAX
 32

	)

51 
	#_POSIX_HOST_NAME_MAX
 255

	)

54 
	#_POSIX_LINK_MAX
 8

	)

57 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

60 
	#_POSIX_MAX_CANON
 255

	)

64 
	#_POSIX_MAX_INPUT
 255

	)

67 
	#_POSIX_MQ_OPEN_MAX
 8

	)

70 
	#_POSIX_MQ_PRIO_MAX
 32

	)

73 
	#_POSIX_NAME_MAX
 14

	)

76 #ifde‡
__USE_XOPEN2K


77 
	#_POSIX_NGROUPS_MAX
 8

	)

79 
	#_POSIX_NGROUPS_MAX
 0

	)

83 #ifde‡
__USE_XOPEN2K


84 
	#_POSIX_OPEN_MAX
 20

	)

86 
	#_POSIX_OPEN_MAX
 16

	)

89 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

96 
	#_POSIX_PATH_MAX
 256

	)

99 
	#_POSIX_PIPE_BUF
 512

	)

103 
	#_POSIX_RE_DUP_MAX
 255

	)

106 
	#_POSIX_RTSIG_MAX
 8

	)

109 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

112 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

115 
	#_POSIX_SIGQUEUE_MAX
 32

	)

118 
	#_POSIX_SSIZE_MAX
 32767

	)

121 
	#_POSIX_STREAM_MAX
 8

	)

124 
	#_POSIX_SYMLINK_MAX
 255

	)

128 
	#_POSIX_SYMLOOP_MAX
 8

	)

131 
	#_POSIX_TIMER_MAX
 32

	)

134 
	#_POSIX_TTY_NAME_MAX
 9

	)

137 #ifde‡
__USE_XOPEN2K


138 
	#_POSIX_TZNAME_MAX
 6

	)

140 
	#_POSIX_TZNAME_MAX
 3

	)

143 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


145 
	#_POSIX_QLIMIT
 1

	)

149 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

152 
	#_POSIX_UIO_MAXIOV
 16

	)

156 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

160 
	~<bôs/loˇl_lim.h
>

163 #i‚def 
SSIZE_MAX


164 
	#SSIZE_MAX
 
LONG_MAX


	)

171 #i‚def 
NGROUPS_MAX


172 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

22 #i‚def 
_BITS_POSIX2_LIM_H


23 
	#_BITS_POSIX2_LIM_H
 1

	)

27 
	#_POSIX2_BC_BASE_MAX
 99

	)

30 
	#_POSIX2_BC_DIM_MAX
 2048

	)

33 
	#_POSIX2_BC_SCALE_MAX
 99

	)

36 
	#_POSIX2_BC_STRING_MAX
 1000

	)

40 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

44 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

47 
	#_POSIX2_LINE_MAX
 2048

	)

51 
	#_POSIX2_RE_DUP_MAX
 255

	)

55 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

62 #i‚def 
BC_BASE_MAX


63 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

65 #i‚def 
BC_DIM_MAX


66 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

68 #i‚def 
BC_SCALE_MAX


69 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

71 #i‚def 
BC_STRING_MAX


72 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

74 #i‚def 
COLL_WEIGHTS_MAX


75 
	#COLL_WEIGHTS_MAX
 255

	)

77 #i‚def 
EXPR_NEST_MAX


78 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

80 #i‚def 
LINE_MAX


81 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

83 #i‚def 
CHARCLASS_NAME_MAX


84 
	#CHARCLASS_NAME_MAX
 2048

	)

88 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

29 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

32 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

35 
	#_POSIX_FSYNC
 200809L

	)

38 
	#_POSIX_MAPPED_FILES
 200809L

	)

41 
	#_POSIX_MEMLOCK
 200809L

	)

44 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

47 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

50 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

54 
	#_POSIX_VDISABLE
 '\0'

	)

57 
	#_POSIX_NO_TRUNC
 1

	)

60 
	#_XOPEN_REALTIME
 1

	)

63 
	#_XOPEN_REALTIME_THREADS
 1

	)

66 
	#_XOPEN_SHM
 1

	)

69 
	#_POSIX_THREADS
 200809L

	)

72 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

73 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

76 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

79 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

85 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

89 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

91 #ifde‡
__USE_XOPEN2K8


93 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

96 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

100 
	#_POSIX_SEMAPHORES
 200809L

	)

103 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

106 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

107 
	#_POSIX_ASYNC_IO
 1

	)

109 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

111 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

114 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

117 
	#_LFS_LARGEFILE
 1

	)

118 
	#_LFS64_LARGEFILE
 1

	)

119 
	#_LFS64_STDIO
 1

	)

122 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

125 
	#_POSIX_CPUTIME
 0

	)

128 
	#_POSIX_THREAD_CPUTIME
 0

	)

131 
	#_POSIX_REGEXP
 1

	)

134 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

137 
	#_POSIX_SHELL
 1

	)

140 
	#_POSIX_TIMEOUTS
 200809L

	)

143 
	#_POSIX_SPIN_LOCKS
 200809L

	)

146 
	#_POSIX_SPAWN
 200809L

	)

149 
	#_POSIX_TIMERS
 200809L

	)

152 
	#_POSIX_BARRIERS
 200809L

	)

155 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

158 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

161 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

164 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

167 
	#_POSIX_ADVISORY_INFO
 200809L

	)

170 
	#_POSIX_IPV6
 200809L

	)

173 
	#_POSIX_RAW_SOCKETS
 200809L

	)

176 
	#_POSIX2_CHAR_TERM
 200809L

	)

179 
	#_POSIX_SPORADIC_SERVER
 -1

	)

180 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_TRACE
 -1

	)

184 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

185 
	#_POSIX_TRACE_INHERIT
 -1

	)

186 
	#_POSIX_TRACE_LOG
 -1

	)

189 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

192 
	#_XOPEN_STREAMS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

18 #i‚de‡
_BITS_PTHREADTYPES_H


19 
	#_BITS_PTHREADTYPES_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

26 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

27 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

29 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

30 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

31 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

32 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

33 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

35 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

37 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

38 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

39 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

40 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

41 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

43 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

46 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

47 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

48 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

49 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

50 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

51 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

52 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

53 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

54 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

60 
	t±hªad_t
;

63 
	u±hªad_©å_t


65 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

66 
	m__Æign
;

68 #i‚de‡
__have_±hªad_©å_t


69 
±hªad_©å_t
 
	t±hªad_©å_t
;

70 
	#__have_±hªad_©å_t
 1

	)

74 #ifde‡
__x86_64__


75 
	s__±hªad_öã∫Æ_li°


77 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

78 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

79 } 
	t__±hªad_li°_t
;

81 
	s__±hªad_öã∫Æ_¶i°


83 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

84 } 
	t__±hªad_¶i°_t
;

92 
	s__±hªad_muãx_s


94 
	m__lock
;

95 
	m__cou¡
;

96 
	m__ow√r
;

97 #ifde‡
__x86_64__


98 
	m__nu£rs
;

102 
	m__köd
;

103 #ifde‡
__x86_64__


104 
	m__•ös
;

105 
__±hªad_li°_t
 
	m__li°
;

106 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

108 
	m__nu£rs
;

109 
__exãnsi⁄__
 union

111 
	m__•ös
;

112 
__±hªad_¶i°_t
 
	m__li°
;

115 } 
	m__d©a
;

116 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

117 
	m__Æign
;

118 } 
	t±hªad_muãx_t
;

122 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

123 
	m__Æign
;

124 } 
	t±hªad_muãx©å_t
;

133 
	m__lock
;

134 
	m__fuãx
;

135 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

136 
__exãnsi⁄__
 
	m__wakeup_£q
;

137 
__exãnsi⁄__
 
	m__wokí_£q
;

138 *
	m__muãx
;

139 
	m__nwaôîs
;

140 
	m__brﬂdˇ°_£q
;

141 } 
	m__d©a
;

142 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

143 
__exãnsi⁄__
 
	m__Æign
;

144 } 
	t±hªad_c⁄d_t
;

148 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

149 
	m__Æign
;

150 } 
	t±hªad_c⁄d©å_t
;

154 
	t±hªad_key_t
;

158 
	t±hªad_⁄˚_t
;

161 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


166 #ifde‡
__x86_64__


169 
	m__lock
;

170 
	m__ƒ_ªadîs
;

171 
	m__ªadîs_wakeup
;

172 
	m__wrôî_wakeup
;

173 
	m__ƒ_ªadîs_queued
;

174 
	m__ƒ_wrôîs_queued
;

175 
	m__wrôî
;

176 
	m__sh¨ed
;

177 
	m__∑d1
;

178 
	m__∑d2
;

181 
	m__Êags
;

182 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

183 } 
	m__d©a
;

187 
	m__lock
;

188 
	m__ƒ_ªadîs
;

189 
	m__ªadîs_wakeup
;

190 
	m__wrôî_wakeup
;

191 
	m__ƒ_ªadîs_queued
;

192 
	m__ƒ_wrôîs_queued
;

195 
	m__Êags
;

196 
	m__sh¨ed
;

197 
	m__∑d1
;

198 
	m__∑d2
;

199 
	m__wrôî
;

200 } 
	m__d©a
;

202 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

203 
	m__Æign
;

204 } 
	t±hªad_rwlock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

209 
	m__Æign
;

210 } 
	t±hªad_rwlock©å_t
;

214 #ifde‡
__USE_XOPEN2K


216 vﬁ©ûê
	t±hªad_•ölock_t
;

223 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

224 
	m__Æign
;

225 } 
	t±hªad_b¨rõr_t
;

229 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

230 
	m__Æign
;

231 } 
	t±hªad_b¨rõøâr_t
;

235 #i‚de‡
__x86_64__


237 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/resource.h

19 #i‚de‡
_SYS_RESOURCE_H


23 
	~<bôs/ty≥s.h
>

31 
	e__æimô_ªsour˚


34 
	mRLIMIT_CPU
 = 0,

35 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

38 
	mRLIMIT_FSIZE
 = 1,

39 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

42 
	mRLIMIT_DATA
 = 2,

43 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

46 
	mRLIMIT_STACK
 = 3,

47 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

50 
	mRLIMIT_CORE
 = 4,

51 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

57 
	m__RLIMIT_RSS
 = 5,

58 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

61 
	mRLIMIT_NOFILE
 = 7,

62 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

63 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

64 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

67 
	mRLIMIT_AS
 = 9,

68 
	#RLIMIT_AS
 
RLIMIT_AS


	)

71 
	m__RLIMIT_NPROC
 = 6,

72 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

75 
	m__RLIMIT_MEMLOCK
 = 8,

76 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

79 
	m__RLIMIT_LOCKS
 = 10,

80 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

83 
	m__RLIMIT_SIGPENDING
 = 11,

84 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

87 
	m__RLIMIT_MSGQUEUE
 = 12,

88 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

93 
	m__RLIMIT_NICE
 = 13,

94 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

98 
	m__RLIMIT_RTPRIO
 = 14,

99 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

104 
	m__RLIMIT_RTTIME
 = 15,

105 
	#RLIMIT_RTTIME
 
__RLIMIT_RTTIME


	)

107 
	m__RLIMIT_NLIMITS
 = 16,

108 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


109 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

110 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

114 #i‚de‡
__USE_FILE_OFFSET64


115 
	#RLIM_INFINITY
 ((
__æim_t
Ë-1)

	)

117 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

120 #ifde‡
__USE_LARGEFILE64


121 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

125 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

126 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

130 #i‚de‡
__USE_FILE_OFFSET64


131 
__æim_t
 
	tæim_t
;

133 
__æim64_t
 
	tæim_t
;

135 #ifde‡
__USE_LARGEFILE64


136 
__æim64_t
 
	tæim64_t
;

139 
	sæimô


142 
æim_t
 
	mæim_cur
;

144 
æim_t
 
	mæim_max
;

147 #ifde‡
__USE_LARGEFILE64


148 
	sæimô64


151 
æim64_t
 
	mæim_cur
;

153 
æim64_t
 
	mæim_max
;

158 
	e__rußge_who


161 
	mRUSAGE_SELF
 = 0,

162 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

165 
	mRUSAGE_CHILDREN
 = -1

166 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

168 #ifde‡
__USE_GNU


171 
	mRUSAGE_THREAD
 = 1

172 
	#RUSAGE_THREAD
 
RUSAGE_THREAD


	)

174 
	#RUSAGE_LWP
 
RUSAGE_THREAD


	)

178 
	#__√ed_timevÆ


	)

179 
	~<bôs/time.h
>

187 
	srußge


190 
timevÆ
 
	mru_utime
;

192 
timevÆ
 
	mru_°ime
;

194 
__exãnsi⁄__
 union

196 
	mru_maxrss
;

197 
__sysˇŒ_¶⁄g_t
 
	m__ru_maxrss_w‹d
;

202 
__exãnsi⁄__
 union

204 
	mru_ixrss
;

205 
__sysˇŒ_¶⁄g_t
 
	m__ru_ixrss_w‹d
;

208 
__exãnsi⁄__
 union

210 
	mru_idrss
;

211 
__sysˇŒ_¶⁄g_t
 
	m__ru_idrss_w‹d
;

214 
__exãnsi⁄__
 union

216 
	mru_i§ss
;

217 
__sysˇŒ_¶⁄g_t
 
	m__ru_i§ss_w‹d
;

221 
__exãnsi⁄__
 union

223 
	mru_möÊt
;

224 
__sysˇŒ_¶⁄g_t
 
	m__ru_möÊt_w‹d
;

227 
__exãnsi⁄__
 union

229 
	mru_majÊt
;

230 
__sysˇŒ_¶⁄g_t
 
	m__ru_majÊt_w‹d
;

233 
__exãnsi⁄__
 union

235 
	mru_nsw≠
;

236 
__sysˇŒ_¶⁄g_t
 
	m__ru_nsw≠_w‹d
;

240 
__exãnsi⁄__
 union

242 
	mru_öblock
;

243 
__sysˇŒ_¶⁄g_t
 
	m__ru_öblock_w‹d
;

246 
__exãnsi⁄__
 union

248 
	mru_oublock
;

249 
__sysˇŒ_¶⁄g_t
 
	m__ru_oublock_w‹d
;

252 
__exãnsi⁄__
 union

254 
	mru_msg¢d
;

255 
__sysˇŒ_¶⁄g_t
 
	m__ru_msg¢d_w‹d
;

258 
__exãnsi⁄__
 union

260 
	mru_msgrcv
;

261 
__sysˇŒ_¶⁄g_t
 
	m__ru_msgrcv_w‹d
;

264 
__exãnsi⁄__
 union

266 
	mru_nsig«ls
;

267 
__sysˇŒ_¶⁄g_t
 
	m__ru_nsig«ls_w‹d
;

272 
__exãnsi⁄__
 union

274 
	mru_nvcsw
;

275 
__sysˇŒ_¶⁄g_t
 
	m__ru_nvcsw_w‹d
;

279 
__exãnsi⁄__
 union

281 
	mru_nivcsw
;

282 
__sysˇŒ_¶⁄g_t
 
	m__ru_nivcsw_w‹d
;

287 
	#PRIO_MIN
 -20

	)

288 
	#PRIO_MAX
 20

	)

292 
	e__¥i‹ôy_which


294 
	mPRIO_PROCESS
 = 0,

295 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

296 
	mPRIO_PGRP
 = 1,

297 
	#PRIO_PGRP
 
PRIO_PGRP


	)

298 
	mPRIO_USER
 = 2

299 
	#PRIO_USER
 
PRIO_USER


	)

303 
	g__BEGIN_DECLS


305 #ifde‡
__USE_GNU


307 #i‚de‡
__USE_FILE_OFFSET64


308 
	$¥limô
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

309 c⁄° 
æimô
 *
__√w_limô
,

310 
æimô
 *
__ﬁd_limô
Ë
__THROW
;

312 #ifde‡
__REDIRECT_NTH


313 
	`__REDIRECT_NTH
 (
¥limô
, (
__pid_t
 
__pid
,

314 
__æimô_ªsour˚
 
__ªsour˚
,

315 c⁄° 
æimô
 *
__√w_limô
,

316 
æimô
 *
__ﬁd_limô
), 
¥limô64
);

318 
	#¥limô
 
¥limô64


	)

321 #ifde‡
__USE_LARGEFILE64


322 
	$¥limô64
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

323 c⁄° 
æimô64
 *
__√w_limô
,

324 
æimô64
 *
__ﬁd_limô
Ë
__THROW
;

328 
__END_DECLS


	@/usr/include/bits/sched.h

21 #i‚de‡
__√ed_sched∑øm


23 #i‚de‡
_SCHED_H


29 
	#SCHED_OTHER
 0

	)

30 
	#SCHED_FIFO
 1

	)

31 
	#SCHED_RR
 2

	)

32 #ifde‡
__USE_GNU


33 
	#SCHED_BATCH
 3

	)

34 
	#SCHED_IDLE
 5

	)

36 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

39 #ifde‡
__USE_GNU


41 
	#CSIGNAL
 0x000000f‡

	)

42 
	#CLONE_VM
 0x00000100

	)

43 
	#CLONE_FS
 0x00000200

	)

44 
	#CLONE_FILES
 0x00000400

	)

45 
	#CLONE_SIGHAND
 0x00000800

	)

46 
	#CLONE_PTRACE
 0x00002000

	)

47 
	#CLONE_VFORK
 0x00004000

	)

49 
	#CLONE_PARENT
 0x00008000

	)

51 
	#CLONE_THREAD
 0x00010000

	)

52 
	#CLONE_NEWNS
 0x00020000

	)

53 
	#CLONE_SYSVSEM
 0x00040000

	)

54 
	#CLONE_SETTLS
 0x00080000

	)

55 
	#CLONE_PARENT_SETTID
 0x00100000

	)

57 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

59 
	#CLONE_DETACHED
 0x00400000

	)

60 
	#CLONE_UNTRACED
 0x00800000

	)

62 
	#CLONE_CHILD_SETTID
 0x01000000

	)

64 
	#CLONE_NEWUTS
 0x04000000

	)

65 
	#CLONE_NEWIPC
 0x08000000

	)

66 
	#CLONE_NEWUSER
 0x10000000

	)

67 
	#CLONE_NEWPID
 0x20000000

	)

68 
	#CLONE_NEWNET
 0x40000000

	)

69 
	#CLONE_IO
 0x80000000

	)

73 
	ssched_∑øm


75 
	m__sched_¥i‹ôy
;

78 
	g__BEGIN_DECLS


80 #ifde‡
__USE_GNU


82 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

83 
__Êags
, *
__¨g
, ...Ë
__THROW
;

86 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

89 
	$sched_gë˝u
 (Ë
__THROW
;

92 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

96 
__END_DECLS


100 #i‡!
deföed
 
__deföed_sched∑øm
 \

101 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

102 
	#__deföed_sched∑øm
 1

	)

104 
	s__sched_∑øm


106 
__sched_¥i‹ôy
;

108 #unde‡
__√ed_sched∑øm


112 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


113 
	#__˝u_£t_t_deföed


	)

115 
	#__CPU_SETSIZE
 1024

	)

116 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

119 
	t__˝u_mask
;

122 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

123 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

128 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

129 } 
	t˝u_£t_t
;

132 #i‡
	`__GNUC_PREREQ
 (2, 91)

133 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

134 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

136 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

138 
size_t
 
__i
; \

139 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

140 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

141 
__i
 = 0; __ò< 
__imax
; ++__i) \

142 
__bôs
[
__i
] = 0; \

143 
	}
} 0)

	)

145 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

146 (
__exãnsi⁄__
 \

147 ({ 
size_t
 
__˝u
 = (
˝u
); \

148 
__˝u
 < 8 * (
£tsize
) \

149 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

150 |
	`__CPUMASK
 (
__˝u
)) \

151 : 0; }))

	)

152 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

153 (
__exãnsi⁄__
 \

154 ({ 
size_t
 
__˝u
 = (
˝u
); \

155 
__˝u
 < 8 * (
£tsize
) \

156 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

157 &~
	`__CPUMASK
 (
__˝u
)) \

158 : 0; }))

	)

159 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

160 (
__exãnsi⁄__
 \

161 ({ 
size_t
 
__˝u
 = (
˝u
); \

162 
__˝u
 < 8 * (
£tsize
) \

163 ? ((((c⁄° 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

164 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

165 : 0; }))

	)

167 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

168 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

170 #i‡
__GNUC_PREREQ
 (2, 91)

171 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

172 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

174 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

175 (
__exãnsi⁄__
 \

176 ({ c⁄° 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

177 c⁄° 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

178 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

179 
size_t
 
__i
; \

180 
__i
 = 0; __ò< 
__imax
; ++__i) \

181 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

183 
__i
 =
__imax
; }))

	)

186 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

187 (
__exãnsi⁄__
 \

188 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

189 c⁄° 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

190 c⁄° 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

191 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

192 
size_t
 
__i
; \

193 
__i
 = 0; __ò< 
__imax
; ++__i) \

194 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

195 
__de°
; }))

	)

197 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

198 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

199 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

200 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

202 
__BEGIN_DECLS


204 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

205 
__THROW
;

206 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

207 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

209 
__END_DECLS


	@/usr/include/bits/semaphore.h

19 #i‚de‡
_SEMAPHORE_H


23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_SEM_T
 32

	)

28 
	#__SIZEOF_SEM_T
 16

	)

33 
	#SEM_FAILED
 ((
£m_t
 *Ë0)

	)

38 
	m__size
[
__SIZEOF_SEM_T
];

39 
	m__Æign
;

40 } 
	t£m_t
;

	@/usr/include/bits/setjmp.h

19 #i‚de‡
_BITS_SETJMP_H


20 
	#_BITS_SETJMP_H
 1

	)

22 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


26 
	~<bôs/w‹dsize.h
>

28 #i‚de‡
_ASM


30 #i‡
__WORDSIZE
 == 64

31 
	t__jmp_buf
[8];

32 #ñi‡
deföed
 
__x86_64__


33 
	t__jmp_buf
[8];

35 
	t__jmp_buf
[6];

	@/usr/include/bits/setjmp2.h

19 #i‚de‡
_SETJMP_H


24 #ifde‡
__REDIRECT_NTH


25 
__REDIRECT_NTHNL
 (
l⁄gjmp
,

26 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

27 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

28 
__REDIRECT_NTHNL
 (
_l⁄gjmp
,

29 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

30 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

31 
__REDIRECT_NTHNL
 (
sigl⁄gjmp
,

32 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

33 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

35 
__l⁄gjmp_chk
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

36 
__THROWNL
 
__©åibuã__
 ((
__n‹ëu∫__
));

37 
	#l⁄gjmp
 
__l⁄gjmp_chk


	)

38 
	#_l⁄gjmp
 
__l⁄gjmp_chk


	)

39 
	#sigl⁄gjmp
 
__l⁄gjmp_chk


	)

	@/usr/include/bits/sigset.h

20 #i‚def 
_SIGSET_H_ty≥s


21 
	#_SIGSET_H_ty≥s
 1

	)

23 
	t__sig_©omic_t
;

27 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

30 
	m__vÆ
[
_SIGSET_NWORDS
];

31 } 
	t__sig£t_t
;

42 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


43 
	#_SIGSET_H_‚s
 1

	)

45 #i‚de‡
_EXTERN_INLINE


46 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

50 
	#__sigmask
(
sig
) \

51 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

54 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

56 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

57 
	#__sigem±y£t
(
£t
) \

58 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

59 
sig£t_t
 *
__£t
 = (
£t
); \

60 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

61 0; }))

	)

62 
	#__sigfûl£t
(
£t
) \

63 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

64 
sig£t_t
 *
__£t
 = (
£t
); \

65 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

66 0; }))

	)

68 #ifde‡
__USE_GNU


72 
	#__sigi£m±y£t
(
£t
) \

73 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

74 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

75 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

76 !
__ªt
 && --
__˙t
 >= 0) \

77 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

78 
__ªt
 =0; }))

	)

79 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

80 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

81 
sig£t_t
 *
__de°
 = (
de°
); \

82 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

83 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

84 --
__˙t
 >= 0) \

85 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

86 & 
__right
->
__vÆ
[
__˙t
]); \

87 0; }))

	)

88 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

89 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

90 
sig£t_t
 *
__de°
 = (
de°
); \

91 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

92 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

93 --
__˙t
 >= 0) \

94 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

95 | 
__right
->
__vÆ
[
__˙t
]); \

96 0; }))

	)

103 
__sigismembî
 (c⁄° 
__sig£t_t
 *, );

104 
__sigadd£t
 (
__sig£t_t
 *, );

105 
__sigdñ£t
 (
__sig£t_t
 *, );

107 #ifde‡
__USE_EXTERN_INLINES


108 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

109 
_EXTERN_INLINE
 \

110 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

112 
__mask
 = 
	`__sigmask
 (
__sig
); \

113 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

114  
BODY
; \

115 }

	)

117 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
) ? 1 : 0, const)

118 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

119 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

121 #unde‡
__SIGSETFN


	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
__BEGIN_NAMESPACE_STD


24 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

25 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

26 
	$__LDBL_REDIR_DECL
 (
•rötf
)

27 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

28 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

29 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

30 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

31 && !
deföed
 
__REDIRECT
 \

32 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

33 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

37 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

41 
__END_NAMESPACE_STD


43 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

46 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

47 
__END_NAMESPACE_C99


50 #ifdef 
__USE_ISOC99


51 
__BEGIN_NAMESPACE_C99


52 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

53 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

54 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

55 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

58 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

62 
__END_NAMESPACE_C99


65 #ifde‡
__USE_XOPEN2K8


66 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

67 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

70 #ifde‡
__USE_GNU


71 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

73 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

74 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

75 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

78 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


79 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

81 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


82 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

85 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

90 #ifde‡
__USE_XOPEN2K8


91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

94 #ifde‡
__USE_GNU


95 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

96 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

97 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

98 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_STDIO_H


23 #i‚de‡
__exã∫_ölöe


24 
	#__STDIO_INLINE
 
ölöe


	)

26 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

30 #ifde‡
__USE_EXTERN_INLINES


33 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

35 
__STDIO_INLINE
 

36 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

38  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

39 
	}
}

43 
__STDIO_INLINE
 

44 
	$gëch¨
 ()

46  
	`_IO_gëc
 (
°dö
);

47 
	}
}

50 #ifde‡
__USE_MISC


52 
__STDIO_INLINE
 

53 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

55  
	`_IO_gëc_u∆ocked
 (
__Â
);

56 
	}
}

60 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


62 
__STDIO_INLINE
 

63 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

65  
	`_IO_gëc_u∆ocked
 (
__Â
);

66 
	}
}

69 
__STDIO_INLINE
 

70 
	$gëch¨_u∆ocked
 ()

72  
	`_IO_gëc_u∆ocked
 (
°dö
);

73 
	}
}

78 
__STDIO_INLINE
 

79 
	$putch¨
 (
__c
)

81  
	`_IO_putc
 (
__c
, 
°dout
);

82 
	}
}

85 #ifde‡
__USE_MISC


87 
__STDIO_INLINE
 

88 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

90  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

91 
	}
}

95 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


97 
__STDIO_INLINE
 

98 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

100  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

101 
	}
}

104 
__STDIO_INLINE
 

105 
	$putch¨_u∆ocked
 (
__c
)

107  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

108 
	}
}

112 #ifdef 
__USE_GNU


114 
__STDIO_INLINE
 
_IO_ssize_t


115 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

117  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

118 
	}
}

122 #ifde‡
__USE_MISC


124 
__STDIO_INLINE
 

125 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

127  
	`_IO_„of_u∆ocked
 (
__°ªam
);

128 
	}
}

131 
__STDIO_INLINE
 

132 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

134  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

135 
	}
}

141 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

142 && !
deföed
 
	g__˝lu•lus


144 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

145 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

146 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

147 && (
size_t
Ë(
size
) != 0) \

148 ? ({ *
__±r
 = (*Ë(
±r
); \

149 
FILE
 *
__°ªam
 = (
°ªam
); \

150 
size_t
 
__˙t
; \

151 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

152 
__˙t
 > 0; --__cnt) \

154 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

155 i‡(
__c
 =
EOF
) \

157 *
__±r
++ = 
__c
; \

159 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

160 / (
size_t
Ë(
size
); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

165 (Ë(
n
), (
size_t
) 0) \

166 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

168 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

169 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

170 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

171 && (
size_t
Ë(
size
) != 0) \

172 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

173 
FILE
 *
__°ªam
 = (
°ªam
); \

174 
size_t
 
__˙t
; \

175 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

176 
__˙t
 > 0; --__cnt) \

177 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

179 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

180 / (
size_t
Ë(
size
); }) \

181 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

182 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

184 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

185 (Ë(
n
), (
size_t
) 0) \

186 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

190 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_STDIO_H


23 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

24 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

25 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

26 c⁄° *
__ª°ri˘
 
__f‹m©
,

27 
_G_va_li°
 
__≠
Ë
__THROW
;

29 #ifde‡
__va_¨g_∑ck


30 
__f‹tify_fun˘i⁄
 

31 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

33  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

34 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

35 
	}
}

36 #ñi‡!
deföed
 
__˝lu•lus


37 
	#•rötf
(
°r
, ...) \

38 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

39 
__VA_ARGS__
)

	)

42 
__f‹tify_fun˘i⁄
 

43 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

44 
_G_va_li°
 
__≠
))

46  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

47 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

48 
	}
}

50 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


52 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

53 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

54 ...Ë
__THROW
;

55 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 
_G_va_li°
 
__≠
Ë
__THROW
;

59 #ifde‡
__va_¨g_∑ck


60 
__f‹tify_fun˘i⁄
 

61 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

62 c⁄° *
__ª°ri˘
 
__fmt
, ...))

64  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

65 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

66 
	}
}

67 #ñi‡!
deföed
 
__˝lu•lus


68 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

69 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

70 
__VA_ARGS__
)

	)

73 
__f‹tify_fun˘i⁄
 

74 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

75 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

77  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

78 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

79 
	}
}

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

85 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

86 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

87 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

88 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

90 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

91 
_G_va_li°
 
__≠
);

93 #ifde‡
__va_¨g_∑ck


94 
__f‹tify_fun˘i⁄
 

95 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

97  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

98 
	`__va_¨g_∑ck
 ());

99 
	}
}

101 
__f‹tify_fun˘i⁄
 

102 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

104  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

105 
	}
}

106 #ñi‡!
deföed
 
__˝lu•lus


107 
	#¥ötf
(...) \

108 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

109 
	#Ârötf
(
°ªam
, ...) \

110 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

113 
__f‹tify_fun˘i⁄
 

114 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

116 #ifde‡
__USE_EXTERN_INLINES


117  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

119  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

121 
	}
}

123 
__f‹tify_fun˘i⁄
 

124 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

125 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

127  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

128 
	}
}

130 #ifde‡
__USE_XOPEN2K8


131 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

132 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

133 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

134 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

135 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

137 #ifde‡
__va_¨g_∑ck


138 
__f‹tify_fun˘i⁄
 

139 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

141  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

142 
	`__va_¨g_∑ck
 ());

143 
	}
}

144 #ñi‡!
deföed
 
__˝lu•lus


145 
	#d¥ötf
(
fd
, ...) \

146 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

149 
__f‹tify_fun˘i⁄
 

150 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

152  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

153 
	}
}

156 #ifde‡
__USE_GNU


158 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

159 c⁄° *
__ª°ri˘
 
__fmt
, ...)

160 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

161 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

164 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

165 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

167 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

168 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

169 
__Êag
,

170 c⁄° *
__ª°ri˘
 
__f‹m©
,

171 
_G_va_li°
 
__¨gs
)

172 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

174 #ifde‡
__va_¨g_∑ck


175 
__f‹tify_fun˘i⁄
 

176 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

178  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

179 
	`__va_¨g_∑ck
 ());

180 
	}
}

182 
__f‹tify_fun˘i⁄
 

183 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

186  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

187 
	`__va_¨g_∑ck
 ());

188 
	}
}

190 
__f‹tify_fun˘i⁄
 

191 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

192 c⁄° *
__ª°ri˘
 
__fmt
, ...))

194  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

195 
	`__va_¨g_∑ck
 ());

196 
	}
}

197 #ñi‡!
deföed
 
__˝lu•lus


198 
	#a•rötf
(
±r
, ...) \

199 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

200 
	#__a•rötf
(
±r
, ...) \

201 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

202 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

203 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

206 
__f‹tify_fun˘i⁄
 

207 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

208 
_G_va_li°
 
__≠
))

210  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

211 
	}
}

213 
__f‹tify_fun˘i⁄
 

214 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

215 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

217  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

218 
__≠
);

219 
	}
}

225 #i‡!
deföed
 
__USE_ISOC11
 \

226 || (
deföed
 
	g__˝lu•lus
 && __˝lu•lu†<201103L && !deföed 
__USE_GNU
)

227 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

228 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

229 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

232 
__f‹tify_fun˘i⁄
 
__wur
 *

233 
	$gës
 (*
__°r
)

235 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

236  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

237  
	`__gës_w¨n
 (
__°r
);

238 
	}
}

241 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

242 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

243 *
	`__REDIRECT
 (
__fgës_Æüs
,

244 (*
__ª°ri˘
 
__s
, 
__n
,

245 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

246 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

247 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

248 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

249 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

252 
__f‹tify_fun˘i⁄
 
__wur
 *

253 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

255 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

257 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

258  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

260 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

261  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

263  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

264 
	}
}

266 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

269 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

270 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

271 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

272 
‰ód
Ë
__wur
;

273 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

274 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

275 
size_t
 
__size
, size_à
__n
,

276 
FILE
 *
__ª°ri˘
 
__°ªam
),

277 
__‰ód_chk
)

278 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

281 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


282 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

283 
FILE
 *
__ª°ri˘
 
__°ªam
)

285 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

287 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

288 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

289 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

290  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

292 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

293  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

295  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

296 
	}
}

298 #ifde‡
__USE_GNU


299 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

300 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

302 (*
__ª°ri˘
 
__s
, 
__n
,

303 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

304 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

305 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

306 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

307 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

310 
__f‹tify_fun˘i⁄
 
__wur
 *

311 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

313 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

315 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

316  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

318 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

319  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

321  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

322 
	}
}

325 #ifde‡
__USE_MISC


326 #unde‡
‰ód_u∆ocked


327 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

330 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

331 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

332 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

333 
‰ód_u∆ocked
Ë
__wur
;

334 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

335 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

336 
size_t
 
__size
, size_à
__n
,

337 
FILE
 *
__ª°ri˘
 
__°ªam
),

338 
__‰ód_u∆ocked_chk
)

339 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

342 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


343 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

344 
FILE
 *
__ª°ri˘
 
__°ªam
)

346 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

349 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

350 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

351  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

352 
__°ªam
);

354 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

355  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

356 
__°ªam
);

359 #ifde‡
__USE_EXTERN_INLINES


360 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

361 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

362 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

363 && 
__size
 * 
__n
 <= 8)

365 
size_t
 
__˙t
 = 
__size
 * 
__n
;

366 *
__˝å
 = (*Ë
__±r
;

367 i‡(
__˙t
 == 0)

370 ; 
__˙t
 > 0; --__cnt)

372 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

373 i‡(
__c
 =
EOF
)

375 *
__˝å
++ = 
__c
;

377  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

380  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

381 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


22 #ifde‡
_STDIO_H


23 
	#L_tm≤am
 20

	)

24 
	#TMP_MAX
 238328

	)

25 
	#FILENAME_MAX
 4096

	)

27 #ifde‡
__USE_POSIX


28 
	#L_˘îmid
 9

	)

29 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


30 
	#L_cu£rid
 9

	)

35 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

40 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


41 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__BEGIN_NAMESPACE_STD


25 
__exã∫_ölöe
 

26 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

28  
	`°πod
 (
__≈å
, (**Ë
NULL
);

29 
	}
}

30 
	g__END_NAMESPACE_STD


	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
__BEGIN_NAMESPACE_C99


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

26 
__END_NAMESPACE_C99


29 #ifde‡
__USE_GNU


30 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

33 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


34 #ifde‡
__USE_MISC


35 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

36 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

39 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string.h

19 #i‚de‡
_STRING_H


24 
	#_STRING_ARCH_u«lig√d
 1

	)

28 #i‡!
deföed
 
__x86_64__
 && (deföed 
__i486__
 || deföed 
__≥¡ium__
 \

29 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

30 || 
deföed
 
	g__noc⁄a__
 || deföed 
	g__©om__
 \

31 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__c‹ei7__
 \

32 || 
deföed
 
	g__k6__
 || deföed 
	g__geode__
 \

33 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

34 || 
deföed
 
	g__amdÁm10__
)

38 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

39 && 
deföed
 
	g__GNUC__
 && __GNUC__ >2 && !
__BOUNDED_POINTERS__


41 #i‚de‡
__STRING_INLINE


42 #i‚de‡
__exã∫_ölöe


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

51 ((((c⁄° *Ë(
§c
))[
idx
 + 1] << 8) \

52 | ((c⁄° *Ë(
§c
))[
idx
])

	)

53 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

54 (((((c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

55 | ((c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

56 | ((c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

57 | ((c⁄° *Ë(
§c
))[
idx
])

	)

61 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

62 
	#mem˝y
(
de°
, 
§c
, 
n
) \

63 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

64 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

65 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

66 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

67 ((
n
) == 0 \

68 ? (
de°
) \

69 : (((
n
) % 4 == 0) \

70 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

71 : (((
n
) % 2 == 0) \

72 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

73 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

75 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
,

76 
size_t
 
__n
);

78 
__STRING_INLINE
 *

79 
	$__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

81 
__d0
, 
__d1
;

82 *
__tmp
 = 
__de°
;

83 
__asm__
 
__vﬁ©ûe__


91 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

92 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

94  
__de°
;

95 
	}
}

97 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
,

98 
size_t
 
__n
);

100 
__STRING_INLINE
 *

101 
	$__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

103 
__d0
, 
__d1
;

104 *
__tmp
 = 
__de°
;

105 
__asm__
 
__vﬁ©ûe__


118 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

119 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

121  
__de°
;

122 
	}
}

124 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
);

126 
__STRING_INLINE
 *

127 
	$__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

129 
__d0
, 
__d1
, 
__d2
;

130 *
__tmp
 = 
__de°
;

131 
__asm__
 
__vﬁ©ûe__


142 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

143 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

144 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

145 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

147  
__de°
;

148 
	}
}

150 
	#_HAVE_STRING_ARCH_memmove
 1

	)

151 #i‚de‡
_FORCE_INLINES


154 
	#memmove
(
de°
, 
§c
, 
n
Ë
	`__memmove_g
 (de°, src,Ç)

	)

156 
__STRING_INLINE
 *
	$__memmove_g
 (*, c⁄° *, 
size_t
)

157 
	`__asm__
 ("memmove");

159 
__STRING_INLINE
 *

160 
	$__memmove_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

162 
__d0
, 
__d1
, 
__d2
;

163 *
__tmp
 = 
__de°
;

164 i‡(
__de°
 < 
__§c
)

165 
__asm__
 
__vﬁ©ûe__


168 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

169 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

170 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

171 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

173 
__asm__
 
__vﬁ©ûe__


177 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

178 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

179 : "0" (
__n
), "1" (__¿- 1 + (c⁄° *Ë
__§c
),

180 "2" (
__n
 - 1 + (*Ë
__tmp
),

181 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

182  
__de°
;

183 
	}
}

187 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

188 #i‚de‡
_FORCE_INLINES


189 #i‚de‡
__PIC__


191 
__STRING_INLINE
 

192 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

194 
__d0
, 
__d1
, 
__d2
;

195 
__ªs
;

196 
__asm__
 
__vﬁ©ûe__


204 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

205 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

206 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

207 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

209  
__ªs
;

210 
	}
}

215 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

216 
	#_USE_STRING_ARCH_mem£t
 1

	)

217 
	#mem£t
(
s
, 
c
, 
n
) \

218 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

219 ? ((
n
) == 1 \

220 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

221 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

222 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

223 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

224 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

225 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

226 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

227 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

228 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

230 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

231 *((*Ë
__s
Ë(Ë(
c
); \

232 
__s
; })

	)

234 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

235 ({ *
__s
 = (
s
); \

237 
__ui
; \

238 
__usi
; \

239 
__uc
; \

240 } *
__u
 = 
__s
; \

241 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

247 i‡((
n
) == 3 || (n) >= 5) \

248 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

251 
n
) \

254 
__u
->
__ui
 = 
__c
; \

255 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

257 
__u
->
__ui
 = 
__c
; \

258 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

260 
__u
->
__ui
 = 
__c
; \

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

263 
__u
->
__usi
 = (Ë
__c
; \

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

265 
__u
->
__uc
 = (Ë
__c
; \

269 
__u
->
__ui
 = 
__c
; \

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

272 
__u
->
__ui
 = 
__c
; \

273 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

275 
__u
->
__ui
 = 
__c
; \

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

278 
__u
->
__usi
 = (Ë
__c
; \

282 
__u
->
__ui
 = 
__c
; \

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

285 
__u
->
__ui
 = 
__c
; \

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

288 
__u
->
__ui
 = 
__c
; \

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

291 
__u
->
__uc
 = (Ë
__c
; \

295 
__u
->
__ui
 = 
__c
; \

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

298 
__u
->
__ui
 = 
__c
; \

299 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

301 
__u
->
__ui
 = 
__c
; \

302 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

304 
__u
->
__ui
 = 
__c
; \

309 
__s
; })

	)

311 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

312 (((
n
) % 4 == 0) \

313 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

314 
n
) \

315 : (((
n
) % 2 == 0) \

316 ? 
	`__mem£t_c˙_by2
 (
s
, \

317 ((Ë((Ë(
c
))) * 0x01010101,\

318 
n
) \

319 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

321 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

322 
size_t
 
__n
);

324 
__STRING_INLINE
 *

325 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

327 *
__tmp
 = 
__s
;

328 
__d0
;

329 #ifde‡
__i686__


330 
__asm__
 
__vﬁ©ûe__


333 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

334 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

335 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

338 
__asm__
 
__vﬁ©ûe__


344 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

345 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

346 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

349  
__s
;

350 
	}
}

352 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

353 
size_t
 
__n
);

355 
__STRING_INLINE
 *

356 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

358 
__d0
, 
__d1
;

359 *
__tmp
 = 
__s
;

360 #ifde‡
__i686__


361 
__asm__
 
__vﬁ©ûe__


365 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

366 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

367 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

370 
__asm__
 
__vﬁ©ûe__


376 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

377 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

378 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

381  
__s
;

382 
	}
}

384 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

385 (((
n
) % 4 == 0) \

386 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

387 : (((
n
) % 2 == 0) \

388 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

389 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

391 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

393 
__STRING_INLINE
 *

394 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

396 *
__tmp
 = 
__s
;

397 
__d0
;

398 
__asm__
 
__vﬁ©ûe__


408 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

409 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

410 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

412  
__s
;

413 
	}
}

415 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

417 
__STRING_INLINE
 *

418 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

420 
__d0
, 
__d1
;

421 *
__tmp
 = 
__s
;

422 
__asm__
 
__vﬁ©ûe__


433 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

434 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

435 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

437  
__s
;

438 
	}
}

442 
	#_HAVE_STRING_ARCH_memchr
 1

	)

443 #i‚de‡
_FORCE_INLINES


444 
__STRING_INLINE
 *

445 
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

447 
__d0
;

448 #ifde‡
__i686__


449 
__d1
;

451 *
__ªs
;

452 i‡(
__n
 == 0)

453  
NULL
;

454 #ifde‡
__i686__


455 
__asm__
 
__vﬁ©ûe__


459 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

460 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

461 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

464 
__asm__
 
__vﬁ©ûe__


470 : "=D" (
__ªs
), "=&c" (
__d0
)

471 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

472 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

475  
__ªs
 - 1;

476 
	}
}

479 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

480 #i‚de‡
_FORCE_INLINES


481 
__STRING_INLINE
 *
__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
);

483 
__STRING_INLINE
 *

484 
	$__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

486 
__d0
;

487 #ifde‡
__i686__


488 
__d1
;

490 *
__ªs
;

491 i‡(
__n
 == 0)

492  
NULL
;

493 #ifde‡
__i686__


494 
__asm__
 
__vﬁ©ûe__


500 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

501 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

502 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

505 
__asm__
 
__vﬁ©ûe__


512 : "=D" (
__ªs
), "=&c" (
__d0
)

513 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

514 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

517  
__ªs
;

518 
	}
}

519 #ifde‡
__USE_GNU


520 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

525 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

526 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

528 #i‚de‡
_FORCE_INLINES


529 
__STRING_INLINE
 *

530 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

532 
__d0
;

533 *
__ªs
;

534 
__asm__
 
__vﬁ©ûe__


537 : "=D" (
__ªs
), "=&c" (
__d0
)

538 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

539 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

541  
__ªs
 - 1;

542 
	}
}

543 #ifde‡
__USE_GNU


544 
__STRING_INLINE
 *

545 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

547  
	`__øwmemchr
 (
__s
, 
__c
);

548 
	}
}

554 
	#_HAVE_STRING_ARCH_°æí
 1

	)

555 
	#°æí
(
°r
) \

556 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

557 ? 
	`__buûtö_°æí
 (
°r
) \

558 : 
	`__°æí_g
 (
°r
)))

	)

559 
__STRING_INLINE
 
size_t
 
__°æí_g
 (c⁄° *
__°r
);

561 
__STRING_INLINE
 
size_t


562 
	$__°æí_g
 (c⁄° *
__°r
)

564 
__dummy
;

565 c⁄° *
__tmp
 = 
__°r
;

566 
__asm__
 
__vﬁ©ûe__


572 : "Ù" (
__tmp
), "=&q" (
__dummy
)

573 : "0" (
__°r
),

574 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

576  
__tmp
 - 
__°r
 - 1;

577 
	}
}

581 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

582 
	#°r˝y
(
de°
, 
§c
) \

583 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

584 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

585 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

586 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

587 (c⁄° *Ë(
§c
), \

588 
	`°æí
 (
§c
) + 1)) \

589 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

591 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

592 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

594 
__ui
; \

595 
__usi
; \

596 
__uc
; \

597 
__c
; \

598 } *
__u
 = (*Ë
__de°
; \

599 
§˛í
) \

602 
__u
->
__uc
 = '\0'; \

605 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

608 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

609 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

610 
__u
->
__uc
 = '\0'; \

613 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

616 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

617 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

618 
__u
->
__uc
 = '\0'; \

621 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

622 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

623 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

626 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

627 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

628 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

629 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

630 
__u
->
__uc
 = '\0'; \

633 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

635 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

638 (*Ë
__de°
; }))

	)

640 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, c⁄° *
__§c
);

642 
__STRING_INLINE
 *

643 
	$__°r˝y_g
 (*
__de°
, c⁄° *
__§c
)

645 *
__tmp
 = 
__de°
;

646 
__dummy
;

647 
__asm__
 
__vﬁ©ûe__


656 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

657 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

658 : "0" (
__§c
), "1" (
__tmp
),

659 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

661  
__de°
;

662 
	}
}

665 #ifde‡
__USE_GNU


666 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

668 
	#__°p˝y
(
de°
, 
§c
) \

669 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

670 ? (
	`°æí
 (
§c
) + 1 <= 8 \

671 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

672 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

673 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

674 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

675 ((
§˛í
) % 4 == 0 \

676 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

677 : ((
§˛í
) % 2 == 0 \

678 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

679 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

682 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

684 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

685 (
	`__exãnsi⁄__
 ({ union { \

686 
__ui
; \

687 
__usi
; \

688 
__uc
; \

689 
__c
; \

690 } *
__u
 = (*Ë(
de°
); \

691 
§˛í
) \

694 
__u
->
__uc
 = '\0'; \

697 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

698 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

701 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

702 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

703 
__u
->
__uc
 = '\0'; \

706 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

707 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

710 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

711 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

712 
__u
->
__uc
 = '\0'; \

715 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

716 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

717 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

718 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

721 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

722 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

723 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

724 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

725 
__u
->
__uc
 = '\0'; \

728 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

729 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

730 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

731 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

734 (*Ë
__u
; }))

	)

736 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
,

737 
size_t
 
__§˛í
);

739 
__STRING_INLINE
 *

740 
	$__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

742 *
__tmp
 = 
__de°
;

743 
__d0
, 
__d1
;

744 
__asm__
 
__vﬁ©ûe__


752 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

753 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

755  
__tmp
;

756 
	}
}

758 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
,

759 
size_t
 
__§˛í
);

761 
__STRING_INLINE
 *

762 
	$__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

764 *
__tmp
 = 
__de°
;

765 
__d0
, 
__d1
;

766 
__asm__
 
__vﬁ©ûe__


779 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

780 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

781 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

782 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

784  
__tmp
 + 2;

785 
	}
}

787 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
,

788 
size_t
 
__§˛í
);

790 
__STRING_INLINE
 *

791 
	$__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

793 
__d0
, 
__d1
;

794 *
__tmp
 = 
__de°
;

795 
__asm__
 
__vﬁ©ûe__


806 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

807 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

808 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

809 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

811  
__tmp
;

812 
	}
}

814 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, c⁄° *
__§c
);

816 
__STRING_INLINE
 *

817 
	$__°p˝y_g
 (*
__de°
, c⁄° *
__§c
)

819 *
__tmp
 = 
__de°
;

820 
__dummy
;

821 
__asm__
 
__vﬁ©ûe__


830 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

831 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

832 : "0" (
__§c
), "1" (
__tmp
),

833 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

835  
__tmp
 - 1;

836 
	}
}

841 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

842 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

843 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

844 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

845 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

846 (c⁄° *Ë(
§c
), 
n
) \

847 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

848 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

849 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

850 (((
§˛í
) % 4 == 0) \

851 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

852 : (((
§˛í
) % 2 == 0) \

853 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

854 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

856 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[],

857 
size_t
 
__§˛í
, size_à
__n
);

859 
__STRING_INLINE
 *

860 
	$__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

862 *
__tmp
 = 
__de°
;

863 
__dummy1
, 
__dummy2
;

864 
__asm__
 
__vﬁ©ûe__


872 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

873 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

874 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

875 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

877 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

878  
__de°
;

879 
	}
}

881 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[],

882 
size_t
 
__§˛í
, size_à
__n
);

884 
__STRING_INLINE
 *

885 
	$__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

887 *
__tmp
 = 
__de°
;

888 
__dummy1
, 
__dummy2
;

889 
__asm__
 
__vﬁ©ûe__


902 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

903 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

904 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

905 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

907 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

908  
__de°
;

909 
	}
}

911 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[],

912 
size_t
 
__§˛í
, size_à
__n
);

914 
__STRING_INLINE
 *

915 
	$__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

917 
__d0
, 
__d1
;

918 *
__tmp
 = 
__de°
;

919 
__asm__
 
__vﬁ©ûe__


930 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

931 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

932 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

933 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

935 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

936  
__de°
;

937 
	}
}

939 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
,

940 
size_t
 
__n
);

942 
__STRING_INLINE
 *

943 
	$__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

945 *
__tmp
 = 
__de°
;

946 
__dummy
;

947 i‡(
__n
 > 0)

948 
__asm__
 
__vﬁ©ûe__


964 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

965 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

968  
__de°
;

969 
	}
}

973 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

974 
	#°rˇt
(
de°
, 
§c
) \

975 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

976 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

977 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

979 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[],

980 
size_t
 
__§˛í
);

982 
__STRING_INLINE
 *

983 
	$__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
)

985 #ifde‡
__i686__


986 
__d0
;

987 *
__tmp
;

988 
__asm__
 
__vﬁ©ûe__


990 : "=D" (
__tmp
), "=&c" (
__d0
),

991 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

992 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

993 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

995 --
__tmp
;

997 *
__tmp
 = 
__de°
 - 1;

998 
__asm__
 
__vﬁ©ûe__


1003 : "Ù" (
__tmp
),

1004 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1005 : "0" (
__tmp
),

1006 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1009 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

1010  
__de°
;

1011 
	}
}

1013 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, c⁄° *
__§c
);

1015 
__STRING_INLINE
 *

1016 
	$__°rˇt_g
 (*
__de°
, c⁄° *
__§c
)

1018 *
__tmp
 = 
__de°
 - 1;

1019 
__dummy
;

1020 
__asm__
 
__vﬁ©ûe__


1032 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1033 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1034 : "1" (
__tmp
), "2" (
__§c
),

1035 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1037  
__de°
;

1038 
	}
}

1042 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1043 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1044 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1045 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1046 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1047 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1048 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1049 (c⁄° *Ë(
§c
), \

1050 (
n
)Ë0, 
__de°
)) \

1051 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1053 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[],

1054 
size_t
 
__n
);

1056 
__STRING_INLINE
 *

1057 
	$__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__n
)

1059 *
__tmp
 = 
__de°
;

1060 
__dummy
;

1061 #ifde‡
__i686__


1062 
__asm__
 
__vﬁ©ûe__


1076 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1077 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1080 --
__tmp
;

1081 
__asm__
 
__vﬁ©ûe__


1098 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1099 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1102  
__de°
;

1103 
	}
}

1107 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1108 
	#°rcmp
(
s1
, 
s2
) \

1109 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1110 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1111 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1112 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

1113 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1114 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1115 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1116 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1117 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1118 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1119 (c⁄° *Ë(
s2
), \

1120 
	`°æí
 (
s1
)) \

1121 : 
	`__°rcmp_cg
 ((c⁄° *Ë(
s1
), \

1122 (c⁄° *Ë(
s2
), \

1123 
	`°æí
 (
s1
))) \

1124 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1125 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1126 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1127 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1128 (c⁄° *Ë(
s2
), \

1129 
	`°æí
 (
s2
)) \

1130 : 
	`__°rcmp_gc
 ((c⁄° *Ë(
s1
), \

1131 (c⁄° *Ë(
s2
), \

1132 
	`°æí
 (
s2
))) \

1133 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1135 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1136 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1137 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1139 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1140 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1142 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1143 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1144 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1147 
__ªsu…
; }))

	)

1149 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1150 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = (
s2
); \

1151 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1152 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1154 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1155 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1157 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1158 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1159 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1162 
__ªsu…
; }))

	)

1164 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1165 (
	`__exãnsi⁄__
 ({ c⁄° *
__s1
 = (
s1
); \

1166 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1167 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1169 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1170 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1172 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1173 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1174 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1177 
__ªsu…
; }))

	)

1179 
__STRING_INLINE
 
__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
);

1181 
__STRING_INLINE
 

1182 
	$__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
)

1184 
__ªs
;

1185 
__asm__
 
__vﬁ©ûe__


1201 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1202 : "1" (
__s1
), "2" (
__s2
),

1203 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1204 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1206  
__ªs
;

1207 
	}
}

1211 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1212 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1213 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1214 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1215 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1216 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1217 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1219 
__STRING_INLINE
 
__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
,

1220 
size_t
 
__n
);

1222 
__STRING_INLINE
 

1223 
	$__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

1225 
__ªs
;

1226 
__asm__
 
__vﬁ©ûe__


1245 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1246 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1247 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1248 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1250  
__ªs
;

1251 
	}
}

1255 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1256 
	#_USE_STRING_ARCH_°rchr
 1

	)

1257 
	#°rchr
(
s
, 
c
) \

1258 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1259 ? ((
c
) == '\0' \

1260 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1261 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1262 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1264 
__STRING_INLINE
 *
__°rchr_c
 (c⁄° *
__s
, 
__c
);

1266 
__STRING_INLINE
 *

1267 
	$__°rchr_c
 (c⁄° *
__s
, 
__c
)

1269 
__d0
;

1270 *
__ªs
;

1271 
__asm__
 
__vﬁ©ûe__


1281 : "Ù" (
__ªs
), "=&a" (
__d0
)

1282 : "0" (
__s
), "1" (
__c
),

1283 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1285  
__ªs
;

1286 
	}
}

1288 
__STRING_INLINE
 *
__°rchr_g
 (c⁄° *
__s
, 
__c
);

1290 
__STRING_INLINE
 *

1291 
	$__°rchr_g
 (c⁄° *
__s
, 
__c
)

1293 
__d0
;

1294 *
__ªs
;

1295 
__asm__
 
__vﬁ©ûe__


1306 : "Ù" (
__ªs
), "=&a" (
__d0
)

1307 : "0" (
__s
), "1" (
__c
),

1308 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1310  
__ªs
;

1311 
	}
}

1315 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1316 
	#__°rch∫ul
(
s
, 
c
) \

1317 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1318 ? ((
c
) == '\0' \

1319 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1320 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1321 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1323 
__STRING_INLINE
 *
__°rch∫ul_c
 (c⁄° *
__s
, 
__c
);

1325 
__STRING_INLINE
 *

1326 
	$__°rch∫ul_c
 (c⁄° *
__s
, 
__c
)

1328 
__d0
;

1329 *
__ªs
;

1330 
__asm__
 
__vﬁ©ûe__


1340 : "Ù" (
__ªs
), "=&a" (
__d0
)

1341 : "0" (
__s
), "1" (
__c
),

1342 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1344  
__ªs
;

1345 
	}
}

1347 
__STRING_INLINE
 *
__°rch∫ul_g
 (c⁄° *
__s
, 
__c
);

1349 
__STRING_INLINE
 *

1350 
	$__°rch∫ul_g
 (c⁄° *
__s
, 
__c
)

1352 
__d0
;

1353 *
__ªs
;

1354 
__asm__
 
__vﬁ©ûe__


1365 : "Ù" (
__ªs
), "=&a" (
__d0
)

1366 : "0" (
__s
), "1" (
__c
),

1367 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1369  
__ªs
;

1370 
	}
}

1371 #ifde‡
__USE_GNU


1372 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1376 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1378 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1379 
	#ödex
(
s
, 
c
) \

1380 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1381 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1382 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1387 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1388 
	#°ºchr
(
s
, 
c
) \

1389 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1390 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1391 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1393 #ifde‡
__i686__


1394 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1396 
__STRING_INLINE
 *

1397 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1399 
__d0
, 
__d1
;

1400 *
__ªs
;

1401 
__asm__
 
__vﬁ©ûe__


1409 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1410 : "0" (1), "1" (
__s
), "2" (
__c
),

1411 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1413  
__ªs
 - 1;

1414 
	}
}

1416 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1418 
__STRING_INLINE
 *

1419 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1421 
__d0
, 
__d1
;

1422 *
__ªs
;

1423 
__asm__
 
__vﬁ©ûe__


1432 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1433 : "0" (1), "1" (
__s
), "2" (
__c
),

1434 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1436  
__ªs
 - 1;

1437 
	}
}

1439 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1441 
__STRING_INLINE
 *

1442 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1444 
__d0
, 
__d1
;

1445 *
__ªs
;

1446 
__asm__
 
__vﬁ©ûe__


1456 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1457 : "0" (0), "1" (
__s
), "2" (
__c
),

1458 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1460  
__ªs
;

1461 
	}
}

1463 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1465 
__STRING_INLINE
 *

1466 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1468 
__d0
, 
__d1
;

1469 *
__ªs
;

1470 
__asm__
 
__vﬁ©ûe__


1481 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1482 : "0" (0), "1" (
__s
), "2" (
__c
),

1483 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1485  
__ªs
;

1486 
	}
}

1490 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1492 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1493 
	#rödex
(
s
, 
c
) \

1494 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1495 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1496 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1502 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1503 
	#°rc•n
(
s
, 
ªje˘
) \

1504 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1505 ? ((
ªje˘
)[0] == '\0' \

1506 ? 
	`°æí
 (
s
) \

1507 : ((
ªje˘
)[1] == '\0' \

1508 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1509 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1510 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1512 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

1514 #i‚de‡
_FORCE_INLINES


1515 
__STRING_INLINE
 
size_t


1516 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

1518 
__d0
;

1519 *
__ªs
;

1520 
__asm__
 
__vﬁ©ûe__


1529 : "Ù" (
__ªs
), "=&a" (
__d0
)

1530 : "0" (
__s
), "1" (
__ªje˘
),

1531 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1533  (
__ªs
 - 1Ë- 
__s
;

1534 
	}
}

1537 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[],

1538 
size_t
 
__ªje˘_Àn
);

1540 
__STRING_INLINE
 
size_t


1541 
	$__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1543 
__d0
, 
__d1
, 
__d2
;

1544 c⁄° *
__ªs
;

1545 
__asm__
 
__vﬁ©ûe__


1556 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1557 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1559  (
__ªs
 - 1Ë- 
__s
;

1560 
	}
}

1562 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
);

1563 #ifde‡
__PIC__


1565 
__STRING_INLINE
 
size_t


1566 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1568 
__d0
, 
__d1
, 
__d2
;

1569 c⁄° *
__ªs
;

1570 
__asm__
 
__vﬁ©ûe__


1587 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1588 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1590  (
__ªs
 - 1Ë- 
__s
;

1591 
	}
}

1593 
__STRING_INLINE
 
size_t


1594 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1596 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1597 c⁄° *
__ªs
;

1598 
__asm__
 
__vﬁ©ûe__


1612 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1613 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1616  (
__ªs
 - 1Ë- 
__s
;

1617 
	}
}

1623 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1624 
	#°r•n
(
s
, 
ac˚±
) \

1625 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1626 ? ((
ac˚±
)[0] == '\0' \

1627 ? ((Ë(
s
), 0) \

1628 : ((
ac˚±
)[1] == '\0' \

1629 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1630 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1631 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1633 #i‚de‡
_FORCE_INLINES


1634 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1636 
__STRING_INLINE
 
size_t


1637 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1639 
__d0
;

1640 *
__ªs
;

1642 
__asm__
 
__vﬁ©ûe__


1648 : "Ù" (
__ªs
), "=&q" (
__d0
)

1649 : "0" (
__s
), "1" (
__ac˚±
),

1650 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1652  (
__ªs
 - 1Ë- 
__s
;

1653 
	}
}

1656 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1657 
size_t
 
__ac˚±_Àn
);

1659 
__STRING_INLINE
 
size_t


1660 
	$__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1662 
__d0
, 
__d1
, 
__d2
;

1663 c⁄° *
__ªs
;

1664 
__asm__
 
__vﬁ©ûe__


1675 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1676 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1679 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1680 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1682  (
__ªs
 - 1Ë- 
__s
;

1683 
	}
}

1685 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1686 #ifde‡
__PIC__


1688 
__STRING_INLINE
 
size_t


1689 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1691 
__d0
, 
__d1
, 
__d2
;

1692 c⁄° *
__ªs
;

1693 
__asm__
 
__vﬁ©ûe__


1709 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1710 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1712  (
__ªs
 - 1Ë- 
__s
;

1713 
	}
}

1715 
__STRING_INLINE
 
size_t


1716 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1718 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1719 c⁄° *
__ªs
;

1720 
__asm__
 
__vﬁ©ûe__


1734 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1735 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1737  (
__ªs
 - 1Ë- 
__s
;

1738 
	}
}

1743 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1744 
	#°Ωbrk
(
s
, 
ac˚±
) \

1745 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1746 ? ((
ac˚±
)[0] == '\0' \

1747 ? ((Ë(
s
), (*) 0) \

1748 : ((
ac˚±
)[1] == '\0' \

1749 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1750 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1751 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1753 
__STRING_INLINE
 *
__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1754 
size_t
 
__ac˚±_Àn
);

1756 
__STRING_INLINE
 *

1757 
	$__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1759 
__d0
, 
__d1
, 
__d2
;

1760 *
__ªs
;

1761 
__asm__
 
__vﬁ©ûe__


1776 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1777 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1779  
__ªs
;

1780 
	}
}

1782 
__STRING_INLINE
 *
__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1783 #ifde‡
__PIC__


1785 
__STRING_INLINE
 *

1786 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1788 
__d0
, 
__d1
, 
__d2
;

1789 *
__ªs
;

1790 
__asm__
 
__vﬁ©ûe__


1811 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1812 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1814  
__ªs
;

1815 
	}
}

1817 
__STRING_INLINE
 *

1818 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1820 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1821 *
__ªs
;

1822 
__asm__
 
__vﬁ©ûe__


1841 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1842 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1844  
__ªs
;

1845 
	}
}

1850 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1851 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1852 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1853 ? ((
√edÀ
)[0] == '\0' \

1854 ? (
hay°ack
) \

1855 : ((
√edÀ
)[1] == '\0' \

1856 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1857 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1858 
	`°æí
 (
√edÀ
)))) \

1859 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1863 
__STRING_INLINE
 *
__°r°r_cg
 (c⁄° *
__hay°ack
,

1864 c⁄° 
__√edÀ
[],

1865 
size_t
 
__√edÀ_Àn
);

1867 
__STRING_INLINE
 *

1868 
	$__°r°r_cg
 (c⁄° *
__hay°ack
, c⁄° 
__√edÀ
[],

1869 
size_t
 
__√edÀ_Àn
)

1871 
__d0
, 
__d1
, 
__d2
;

1872 *
__ªs
;

1873 
__asm__
 
__vﬁ©ûe__


1886 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1887 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1889  
__ªs
;

1890 
	}
}

1892 
__STRING_INLINE
 *
__°r°r_g
 (c⁄° *
__hay°ack
,

1893 c⁄° *
__√edÀ
);

1894 #ifde‡
__PIC__


1896 
__STRING_INLINE
 *

1897 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1899 
__d0
, 
__d1
, 
__d2
;

1900 *
__ªs
;

1901 
__asm__
 
__vﬁ©ûe__


1920 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1921 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1922 "d" (
__√edÀ
)

1924  
__ªs
;

1925 
	}
}

1927 
__STRING_INLINE
 *

1928 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1930 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1931 *
__ªs
;

1932 
__asm__
 
__vﬁ©ûe__


1949 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1950 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1951 "b" (
__√edÀ
)

1953  
__ªs
;

1954 
	}
}

1960 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1961 #ifde‡
__i686__


1962 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1963 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1964 ? 
	`__buûtö_ffs
 (
w‹d
) \

1965 : ({ 
__˙t
, 
__tmp
; \

1966 
__asm__
 
__vﬁ©ûe__
 \

1969 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1970 : "rm" (
w‹d
), "1" (-1)); \

1971 
__˙t
 + 1; }))

	)

1973 #i‚de‡
ff¶


1974 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1979 #i‚de‡
_FORCE_INLINES


1980 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

20 #i‚de‡
_STRING_H


24 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


41 #i‚de‡
__STRING_INLINE


42 #ifde‡
__˝lu•lus


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

49 #i‡
_STRING_ARCH_u«lig√d


51 
	~<ídün.h
>

52 
	~<bôs/ty≥s.h
>

54 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


55 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

56 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

57 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

58 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

59 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

60 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

61 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

62 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

64 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

65 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

66 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1])

	)

67 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

68 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

69 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

70 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

71 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3])

	)

76 
	#__STRING2_COPY_TYPE
(
N
) \

77 °ru˘ { 
__¨r
[
N
]; } \

78 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

79 
	t__STRING2_COPY_TYPE
 (2);

80 
__STRING2_COPY_TYPE
 (3);

81 
__STRING2_COPY_TYPE
 (4);

82 
__STRING2_COPY_TYPE
 (5);

83 
__STRING2_COPY_TYPE
 (6);

84 
__STRING2_COPY_TYPE
 (7);

85 
__STRING2_COPY_TYPE
 (8);

86 #unde‡
__STRING2_COPY_TYPE


92 
	#__°rög2_1b±r_p
(
__x
) \

93 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

96 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


97 #i‡!
__GNUC_PREREQ
 (3, 0)

98 #i‡
_STRING_ARCH_u«lig√d


99 
	#mem£t
(
s
, 
c
, 
n
) \

100 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

101 ? ((
n
) == 1 \

102 ? 
	`__mem£t_1
 (
s
, 
c
) \

103 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

104 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

105 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

106 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

108 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

109 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

111 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

112 ({ *
__s
 = (
s
); \

114 
__ui
; \

115 
__usi
; \

116 
__uc
; \

117 } *
__u
 = 
__s
; \

118 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

121 (Ë(
n
)) \

124 
__u
->
__ui
 = 
__c
 * 0x01010101; \

125 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

127 
__u
->
__ui
 = 
__c
 * 0x01010101; \

128 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

130 
__u
->
__ui
 = 
__c
 * 0x01010101; \

131 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

133 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

134 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

135 
__u
->
__uc
 = (Ë
__c
; \

139 
__u
->
__ui
 = 
__c
 * 0x01010101; \

140 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

142 
__u
->
__ui
 = 
__c
 * 0x01010101; \

143 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

145 
__u
->
__ui
 = 
__c
 * 0x01010101; \

146 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

148 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

152 
__u
->
__ui
 = 
__c
 * 0x01010101; \

153 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

155 
__u
->
__ui
 = 
__c
 * 0x01010101; \

156 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

158 
__u
->
__ui
 = 
__c
 * 0x01010101; \

159 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

161 
__u
->
__uc
 = (Ë
__c
; \

165 
__u
->
__ui
 = 
__c
 * 0x01010101; \

166 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

168 
__u
->
__ui
 = 
__c
 * 0x01010101; \

169 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

171 
__u
->
__ui
 = 
__c
 * 0x01010101; \

172 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

174 
__u
->
__ui
 = 
__c
 * 0x01010101; \

179 
__s
; })

	)

181 
	#mem£t
(
s
, 
c
, 
n
) \

182 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

183 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

184 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

193 #i‡
__GNUC_PREREQ
 (2, 91)

194 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

202 #ifde‡
__USE_GNU


203 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


204 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


205 #i‡
__GNUC_PREREQ
 (3, 4)

206 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

207 #ñi‡
__GNUC_PREREQ
 (3, 0)

208 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

209 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

210 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

211 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

212 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

214 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

215 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

216 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

217 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

218 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

222 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

225 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


226 #i‡
_STRING_ARCH_u«lig√d


227 #i‚de‡
_FORCE_INLINES


228 
	#__memp˝y_¨gs
(
§c
) \

229 ((c⁄° *Ë(
§c
))[0], ((const *) (src))[2], \

230 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[6], \

231 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

236 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

237 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

238 
__uöt32_t
, 
size_t
);

239 
__STRING_INLINE
 *

240 
	$__memp˝y_smÆl
 (*
__de°1
,

241 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

242 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

243 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

244 
size_t
 
__§˛í
)

247 
__uöt32_t
 
__ui
;

248 
__uöt16_t
 
__usi
;

249 
__uc
;

250 
__c
;

251 } *
__u
 = 
__de°1
;

252 (Ë
__§˛í
)

255 
__u
->
__c
 = 
__§c0_1
;

256 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

259 
__u
->
__usi
 = 
__§c0_2
;

260 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

263 
__u
->
__usi
 = 
__§c0_2
;

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

265 
__u
->
__c
 = 
__§c2_1
;

266 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

269 
__u
->
__ui
 = 
__§c0_4
;

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

273 
__u
->
__ui
 = 
__§c0_4
;

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

275 
__u
->
__c
 = 
__§c4_1
;

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

279 
__u
->
__ui
 = 
__§c0_4
;

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

281 
__u
->
__usi
 = 
__§c4_2
;

282 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

285 
__u
->
__ui
 = 
__§c0_4
;

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

287 
__u
->
__usi
 = 
__§c4_2
;

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

289 
__u
->
__c
 = 
__§c6_1
;

290 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

293 
__u
->
__ui
 = 
__§c0_4
;

294 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

295 
__u
->
__ui
 = 
__§c4_4
;

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

299  (*Ë
__u
;

300 
	}
}

302 #i‚de‡
_FORCE_INLINES


303 
	#__memp˝y_¨gs
(
§c
) \

304 ((c⁄° *Ë(
§c
))[0], \

305 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

306 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1] } }), \

307 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

308 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

309 ((c⁄° *Ë(
§c
))[2] } }), \

310 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

311 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

312 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3] } }), \

313 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

314 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

315 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

316 ((c⁄° *Ë(
§c
))[4] } }), \

317 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

318 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

319 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

320 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5] } }), \

321 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

322 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

323 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

324 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

325 ((c⁄° *Ë(
§c
))[6] } }), \

326 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

327 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

328 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

329 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

330 ((c⁄° *Ë(
§c
))[6], ((c⁄° *Ë(§c))[7] } })

	)

332 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

333 
__STRING2_COPY_ARR3
,

334 
__STRING2_COPY_ARR4
,

335 
__STRING2_COPY_ARR5
,

336 
__STRING2_COPY_ARR6
,

337 
__STRING2_COPY_ARR7
,

338 
__STRING2_COPY_ARR8
, 
size_t
);

339 
__STRING_INLINE
 *

340 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

341 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

342 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

343 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

344 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

347 
__c
;

348 
__STRING2_COPY_ARR2
 
__sˇ2
;

349 
__STRING2_COPY_ARR3
 
__sˇ3
;

350 
__STRING2_COPY_ARR4
 
__sˇ4
;

351 
__STRING2_COPY_ARR5
 
__sˇ5
;

352 
__STRING2_COPY_ARR6
 
__sˇ6
;

353 
__STRING2_COPY_ARR7
 
__sˇ7
;

354 
__STRING2_COPY_ARR8
 
__sˇ8
;

355 } *
__u
 = 
__de°
;

356 (Ë
__§˛í
)

359 
__u
->
__c
 = 
__§c1
;

362 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

365 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

368 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

371 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

374 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

377 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

380 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

383  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

384 
	}
}

392 #i‚de‡
_HAVE_STRING_ARCH_°rchr


393 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

394 #i‡
__GNUC_PREREQ
 (3, 2)

395 
	#°rchr
(
s
, 
c
) \

396 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

397 && (
c
) == '\0' \

398 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

399 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

401 
	#°rchr
(
s
, 
c
) \

402 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

403 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

404 : 
	`°rchr
 (
s
, 
c
)))

	)

410 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

411 || 
deföed
 
	g_FORCE_INLINES


412 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

413 
	#°r˝y
(
de°
, 
§c
) \

414 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

415 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

416 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

417 
	`°æí
 (
§c
) + 1) \

418 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

419 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

422 #i‡
_STRING_ARCH_u«lig√d


423 #i‚de‡
_FORCE_INLINES


424 
	#__°r˝y_¨gs
(
§c
) \

425 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

430 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

431 
__uöt32_t
, __uöt32_t, 
size_t
);

432 
__STRING_INLINE
 *

433 
	$__°r˝y_smÆl
 (*
__de°
,

434 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

435 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

436 
size_t
 
__§˛í
)

439 
__uöt32_t
 
__ui
;

440 
__uöt16_t
 
__usi
;

441 
__uc
;

442 } *
__u
 = (*Ë
__de°
;

443 (Ë
__§˛í
)

446 
__u
->
__uc
 = '\0';

449 
__u
->
__usi
 = 
__§c0_2
;

452 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

454 
__u
->
__uc
 = '\0';

457 
__u
->
__ui
 = 
__§c0_4
;

460 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

462 
__u
->
__uc
 = '\0';

465 
__u
->
__ui
 = 
__§c0_4
;

466 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

467 
__u
->
__usi
 = 
__§c4_2
;

470 
__u
->
__ui
 = 
__§c0_4
;

471 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

472 
__u
->
__usi
 = 
__§c4_2
;

473 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

474 
__u
->
__uc
 = '\0';

477 
__u
->
__ui
 = 
__§c0_4
;

478 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

479 
__u
->
__ui
 = 
__§c4_4
;

482  
__de°
;

483 
	}
}

485 #i‚de‡
_FORCE_INLINES


486 
	#__°r˝y_¨gs
(
§c
) \

487 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

488 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

489 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

490 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

492 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

493 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

494 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

495 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

496 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

497 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

499 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

500 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

501 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

502 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

503 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

504 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

505 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

506 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

508 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

509 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

510 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

511 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

512 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

514 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

515 
__STRING2_COPY_ARR3
,

516 
__STRING2_COPY_ARR4
,

517 
__STRING2_COPY_ARR5
,

518 
__STRING2_COPY_ARR6
,

519 
__STRING2_COPY_ARR7
,

520 
__STRING2_COPY_ARR8
, 
size_t
);

521 
__STRING_INLINE
 *

522 
	$__°r˝y_smÆl
 (*
__de°
,

523 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

524 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

525 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

526 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

529 
__c
;

530 
__STRING2_COPY_ARR2
 
__sˇ2
;

531 
__STRING2_COPY_ARR3
 
__sˇ3
;

532 
__STRING2_COPY_ARR4
 
__sˇ4
;

533 
__STRING2_COPY_ARR5
 
__sˇ5
;

534 
__STRING2_COPY_ARR6
 
__sˇ6
;

535 
__STRING2_COPY_ARR7
 
__sˇ7
;

536 
__STRING2_COPY_ARR8
 
__sˇ8
;

537 } *
__u
 = (*Ë
__de°
;

538 (Ë
__§˛í
)

541 
__u
->
__c
 = '\0';

544 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

547 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

550 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

553 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

556 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

559 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

562 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

565  
__de°
;

566 
	}
}

572 #ifde‡
__USE_GNU


573 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


574 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


575 #i‡
__GNUC_PREREQ
 (3, 4)

576 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

577 #ñi‡
__GNUC_PREREQ
 (3, 0)

578 
	#__°p˝y
(
de°
, 
§c
) \

579 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

580 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

581 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

582 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

584 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

586 
	#__°p˝y
(
de°
, 
§c
) \

587 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

588 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

589 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

590 
	`°æí
 (
§c
) + 1) \

591 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

593 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

597 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

600 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


601 #i‡
_STRING_ARCH_u«lig√d


602 #i‚de‡
_FORCE_INLINES


603 
	#__°p˝y_¨gs
(
§c
) \

604 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

609 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

610 
__uöt32_t
, __uöt32_t, 
size_t
);

611 
__STRING_INLINE
 *

612 
	$__°p˝y_smÆl
 (*
__de°
,

613 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

614 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

615 
size_t
 
__§˛í
)

618 
__ui
;

619 
__usi
;

620 
__uc
;

621 
__c
;

622 } *
__u
 = (*Ë
__de°
;

623 (Ë
__§˛í
)

626 
__u
->
__uc
 = '\0';

629 
__u
->
__usi
 = 
__§c0_2
;

630 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

633 
__u
->
__usi
 = 
__§c0_2
;

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

635 
__u
->
__uc
 = '\0';

638 
__u
->
__ui
 = 
__§c0_4
;

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

642 
__u
->
__ui
 = 
__§c0_4
;

643 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

644 
__u
->
__uc
 = '\0';

647 
__u
->
__ui
 = 
__§c0_4
;

648 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

649 
__u
->
__usi
 = 
__§c4_2
;

650 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

653 
__u
->
__ui
 = 
__§c0_4
;

654 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

655 
__u
->
__usi
 = 
__§c4_2
;

656 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

657 
__u
->
__uc
 = '\0';

660 
__u
->
__ui
 = 
__§c0_4
;

661 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

662 
__u
->
__ui
 = 
__§c4_4
;

663 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

666  &
__u
->
__c
;

667 
	}
}

669 #i‚de‡
_FORCE_INLINES


670 
	#__°p˝y_¨gs
(
§c
) \

671 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

672 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

673 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

674 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

676 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

677 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

678 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

679 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

680 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

681 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

683 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

684 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

685 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

686 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

687 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

688 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

689 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

690 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

692 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

693 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

694 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

695 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

696 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

698 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

699 
__STRING2_COPY_ARR3
,

700 
__STRING2_COPY_ARR4
,

701 
__STRING2_COPY_ARR5
,

702 
__STRING2_COPY_ARR6
,

703 
__STRING2_COPY_ARR7
,

704 
__STRING2_COPY_ARR8
, 
size_t
);

705 
__STRING_INLINE
 *

706 
	$__°p˝y_smÆl
 (*
__de°
,

707 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

708 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

709 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

710 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

713 
__c
;

714 
__STRING2_COPY_ARR2
 
__sˇ2
;

715 
__STRING2_COPY_ARR3
 
__sˇ3
;

716 
__STRING2_COPY_ARR4
 
__sˇ4
;

717 
__STRING2_COPY_ARR5
 
__sˇ5
;

718 
__STRING2_COPY_ARR6
 
__sˇ6
;

719 
__STRING2_COPY_ARR7
 
__sˇ7
;

720 
__STRING2_COPY_ARR8
 
__sˇ8
;

721 } *
__u
 = (*Ë
__de°
;

722 (Ë
__§˛í
)

725 
__u
->
__c
 = '\0';

728 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

731 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

734 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

737 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

740 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

743 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

746 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

749  
__de°
 + 
__§˛í
 - 1;

750 
	}
}

758 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


759 #i‡
__GNUC_PREREQ
 (3, 2)

760 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

762 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

763 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

764 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

765 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

766 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

773 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


774 #ifde‡
_USE_STRING_ARCH_°rchr


775 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

776 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

777 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

778 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

779 ? 
	`°rˇt
 (
__de°
, 
§c
) \

780 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

781 
§c
, 
n
)Ë'\0', 
__de°
)) \

782 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

783 #ñi‡
__GNUC_PREREQ
 (3, 2)

784 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

786 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

787 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

788 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

789 ? 
	`°rˇt
 (
de°
, 
§c
) \

790 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

797 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


798 #i‡
__GNUC_PREREQ
 (3, 2)

799 
	#°rcmp
(
s1
, 
s2
) \

800 
__exãnsi⁄__
 \

801 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

802 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

803 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

804 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

805 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

806 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

807 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

808 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

809 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

810 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

811 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

812 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

813 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

814 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

815 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

816 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

817 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

819 
	#°rcmp
(
s1
, 
s2
) \

820 
__exãnsi⁄__
 \

821 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

822 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

823 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

824 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

825 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

826 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

827 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

828 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

829 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

830 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

831 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

832 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

833 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

834 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

835 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

836 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

837 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

838 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

841 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

842 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

843 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

844 - ((c⁄° *Ë(c⁄° *)(
s2
))[0]); \

845 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

847 
__ªsu…
 = (((const *) \

848 (c⁄° *Ë(
s1
))[1] \

850 (c⁄° *Ë(
s2
))[1]); \

851 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

853 
__ªsu…
 = \

855 (c⁄° *Ë(
s1
))[2] \

857 (c⁄° *Ë(
s2
))[2]); \

858 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

859 
__ªsu…
 = \

861 (c⁄° *Ë(
s1
))[3] \

863 (c⁄° *Ë(
s2
))[3]); \

866 
__ªsu…
; }))

	)

868 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

869 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = \

870 (c⁄° *Ë(c⁄° *Ë(
s2
); \

871 
__ªsu…
 = \

872 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

873 - 
__s2
[0]); \

874 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

876 
__ªsu…
 = (((const *) \

877 (c⁄° *Ë(
s1
))[1] - 
__s2
[1]); \

878 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

880 
__ªsu…
 = (((const *) \

881 (c⁄° *Ë(
s1
))[2] - 
__s2
[2]); \

882 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

883 
__ªsu…
 = (((const *) \

884 (c⁄° *Ë(
s1
))[3] \

885 - 
__s2
[3]); \

888 
__ªsu…
; }))

	)

890 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

891 (
	`__exãnsi⁄__
 ({ c⁄° *
__s1
 = \

892 (c⁄° *Ë(c⁄° *Ë(
s1
); \

893 
__ªsu…
 = \

894 
__s1
[0] - ((const *) \

895 (c⁄° *Ë(
s2
))[0]; \

896 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

898 
__ªsu…
 = (
__s1
[1] \

900 (c⁄° *Ë(
s2
))[1]); \

901 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

903 
__ªsu…
 = \

904 (
__s1
[2] - ((const *) \

905 (c⁄° *Ë(
s2
))[2]); \

906 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

907 
__ªsu…
 = \

908 (
__s1
[3] \

910 (c⁄° *Ë(
s2
))[3]); \

913 
__ªsu…
; }))

	)

918 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


919 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

920 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

921 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

922 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

923 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

924 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

925 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

931 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


932 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


933 #i‡
__GNUC_PREREQ
 (3, 2)

934 
	#°rc•n
(
s
, 
ªje˘
) \

935 
__exãnsi⁄__
 \

936 ({ 
__r0
, 
__r1
, 
__r2
; \

937 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

938 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

939 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

940 : ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

941 ? 
	`°æí
 (
s
) \

942 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

943 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

944 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

945 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

946 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

947 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

948 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

951 
	#°rc•n
(
s
, 
ªje˘
) \

952 
__exãnsi⁄__
 \

953 ({ 
__r0
, 
__r1
, 
__r2
; \

954 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

955 ? ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

956 ? 
	`°æí
 (
s
) \

957 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

958 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

959 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

960 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

961 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

962 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

963 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

968 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

969 
__STRING_INLINE
 
size_t


970 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

972 
size_t
 
__ªsu…
 = 0;

973 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

974 ++
__ªsu…
;

975  
__ªsu…
;

976 
	}
}

978 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
,

979 
__ªje˘2
);

980 
__STRING_INLINE
 
size_t


981 
	$__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
)

983 
size_t
 
__ªsu…
 = 0;

984 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


985 && 
__s
[
__ªsu…
] !
__ªje˘2
)

986 ++
__ªsu…
;

987  
__ªsu…
;

988 
	}
}

990 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
,

991 
__ªje˘2
, 
__ªje˘3
);

992 
__STRING_INLINE
 
size_t


993 
	$__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
,

994 
__ªje˘3
)

996 
size_t
 
__ªsu…
 = 0;

997 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


998 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

999 ++
__ªsu…
;

1000  
__ªsu…
;

1001 
	}
}

1007 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1008 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1009 #i‡
__GNUC_PREREQ
 (3, 2)

1010 
	#°r•n
(
s
, 
ac˚±
) \

1011 
__exãnsi⁄__
 \

1012 ({ 
__a0
, 
__a1
, 
__a2
; \

1013 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1014 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1015 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1016 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1017 ? ((Ë(
s
), (
size_t
) 0) \

1018 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1019 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1020 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1021 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1022 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1023 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1024 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1027 
	#°r•n
(
s
, 
ac˚±
) \

1028 
__exãnsi⁄__
 \

1029 ({ 
__a0
, 
__a1
, 
__a2
; \

1030 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1031 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1032 ? ((Ë(
s
), (
size_t
) 0) \

1033 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1034 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1035 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1036 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1037 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1038 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1039 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1044 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1045 
__STRING_INLINE
 
size_t


1046 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1048 
size_t
 
__ªsu…
 = 0;

1050 
__s
[
__ªsu…
] =
__ac˚±
)

1051 ++
__ªsu…
;

1052  
__ªsu…
;

1053 
	}
}

1055 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1056 
__ac˚±2
);

1057 
__STRING_INLINE
 
size_t


1058 
	$__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1060 
size_t
 
__ªsu…
 = 0;

1062 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1063 ++
__ªsu…
;

1064  
__ªsu…
;

1065 
	}
}

1067 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1068 
__ac˚±2
, 
__ac˚±3
);

1069 
__STRING_INLINE
 
size_t


1070 
	$__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1072 
size_t
 
__ªsu…
 = 0;

1074 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1075 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1076 ++
__ªsu…
;

1077  
__ªsu…
;

1078 
	}
}

1083 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1084 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1085 #i‡
__GNUC_PREREQ
 (3, 2)

1086 
	#°Ωbrk
(
s
, 
ac˚±
) \

1087 
__exãnsi⁄__
 \

1088 ({ 
__a0
, 
__a1
, 
__a2
; \

1089 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1090 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1091 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1092 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1093 ? ((Ë(
s
), (*Ë
NULL
) \

1094 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1095 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1096 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1097 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1098 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1099 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1100 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1103 
	#°Ωbrk
(
s
, 
ac˚±
) \

1104 
__exãnsi⁄__
 \

1105 ({ 
__a0
, 
__a1
, 
__a2
; \

1106 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1107 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1108 ? ((Ë(
s
), (*Ë
NULL
) \

1109 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1110 ? 
	`°rchr
 (
s
, 
__a0
) \

1111 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1112 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1113 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1114 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1115 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1120 
__STRING_INLINE
 *
__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1121 
__ac˚±2
);

1122 
__STRING_INLINE
 *

1123 
	$__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1126 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1127 ++
__s
;

1128  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1129 
	}
}

1131 
__STRING_INLINE
 *
__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1132 
__ac˚±2
, 
__ac˚±3
);

1133 
__STRING_INLINE
 *

1134 
	$__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1137 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1138 && *
__s
 !
__ac˚±3
)

1139 ++
__s
;

1140  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1141 
	}
}

1147 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1148 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1149 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1150 ? (((c⁄° *Ë(
√edÀ
))[0] == '\0' \

1151 ? (*Ë(
size_t
Ë(
hay°ack
) \

1152 : (((c⁄° *Ë(
√edÀ
))[1] == '\0' \

1153 ? 
	`°rchr
 (
hay°ack
, \

1154 ((c⁄° *Ë(
√edÀ
))[0]) \

1155 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1156 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1160 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1161 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1162 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1163 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1164 && ((c⁄° *Ë(
£p
))[0] != '\0' \

1165 && ((c⁄° *Ë(
£p
))[1] == '\0' \

1166 ? 
	`__°πok_r_1c
 (
s
, ((c⁄° *Ë(
£p
))[0], 
√xç
) \

1167 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1170 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1171 
__STRING_INLINE
 *

1172 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1174 *
__ªsu…
;

1175 i‡(
__s
 =
NULL
)

1176 
__s
 = *
__√xç
;

1177 *
__s
 =
__£p
)

1178 ++
__s
;

1179 
__ªsu…
 = 
NULL
;

1180 i‡(*
__s
 != '\0')

1182 
__ªsu…
 = 
__s
++;

1183 *
__s
 != '\0')

1184 i‡(*
__s
++ =
__£p
)

1186 
__s
[-1] = '\0';

1190 *
__√xç
 = 
__s
;

1191  
__ªsu…
;

1192 
	}
}

1193 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1194 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1199 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1200 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1202 *
__°r£p_g
 (**
__°rögp
, c⁄° *
__dñim
);

1203 
	#__°r£p
(
s
, 
ªje˘
) \

1204 
__exãnsi⁄__
 \

1205 ({ 
__r0
, 
__r1
, 
__r2
; \

1206 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1207 && (
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], \

1208 ((c⁄° *Ë(
ªje˘
))[0] != '\0') \

1209 ? ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], \

1210 ((c⁄° *Ë(
ªje˘
))[1] == '\0') \

1211 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1212 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

1213 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1214 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

1215 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1216 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1217 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1220 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1221 
__STRING_INLINE
 *

1222 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1224 *
__ªtvÆ
 = *
__s
;

1225 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1226 *(*
__s
)++ = '\0';

1227  
__ªtvÆ
;

1228 
	}
}

1230 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1231 
__STRING_INLINE
 *

1232 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1234 *
__ªtvÆ
 = *
__s
;

1235 i‡(
__ªtvÆ
 !
NULL
)

1237 *
__˝
 = 
__ªtvÆ
;

1240 i‡(*
__˝
 == '\0')

1242 
__˝
 = 
NULL
;

1245 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1247 *
__˝
++ = '\0';

1250 ++
__˝
;

1252 *
__s
 = 
__˝
;

1254  
__ªtvÆ
;

1255 
	}
}

1257 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1258 
__ªje˘3
);

1259 
__STRING_INLINE
 *

1260 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1262 *
__ªtvÆ
 = *
__s
;

1263 i‡(
__ªtvÆ
 !
NULL
)

1265 *
__˝
 = 
__ªtvÆ
;

1268 i‡(*
__˝
 == '\0')

1270 
__˝
 = 
NULL
;

1273 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1275 *
__˝
++ = '\0';

1278 ++
__˝
;

1280 *
__s
 = 
__˝
;

1282  
__ªtvÆ
;

1283 
	}
}

1284 #ifde‡
__USE_BSD


1285 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1292 #ifde‡
__USE_MISC


1294 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1295 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1296 
	~<°dlib.h
>

1299 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1301 *
	$__°rdup
 (c⁄° *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1302 
	#__°rdup
(
s
) \

1303 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1304 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1305 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1306 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1307 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1308 i‡(
__ªtvÆ
 !
NULL
) \

1309 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1310 
__ªtvÆ
; 
	}
})) \

1311 : 
	`__°rdup
 (
s
)))

	)

1313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1314 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1318 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1320 *
	$__°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

1321 
__THROW
 
__©åibuã_mÆloc__
;

1322 
	#__°∫dup
(
s
, 
n
) \

1323 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1324 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1325 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1326 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1327 
size_t
 
__n
 = (
n
); \

1328 *
__ªtvÆ
; \

1329 i‡(
__n
 < 
__Àn
) \

1330 
__Àn
 = 
__n
 + 1; \

1331 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1332 i‡(
__ªtvÆ
 !
NULL
) \

1334 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1335 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1336 
__Àn
 - 1); \

1338 
__ªtvÆ
; 
	}
})) \

1339 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1341 #ifde‡
__USE_GNU


1342 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1348 #i‚de‡
_FORCE_INLINES


1349 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

18 #i‚de‡
_STRING_H


22 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

25 #i‚de‡
__˝lu•lus


29 #unde‡
mem˝y


30 #unde‡
memmove


31 #unde‡
mem£t


32 #unde‡
°rˇt


33 #unde‡
°r˝y


34 #unde‡
°∫ˇt


35 #unde‡
°∫˝y


36 #ifde‡
__USE_GNU


37 #unde‡
memp˝y


38 #unde‡
°p˝y


40 #ifde‡
__USE_BSD


41 #unde‡
bc›y


42 #unde‡
bzîo


47 
__f‹tify_fun˘i⁄
 *

48 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

49 
size_t
 
__Àn
))

51  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

52 
	}
}

54 
__f‹tify_fun˘i⁄
 *

55 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

57  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

58 
	}
}

60 #ifde‡
__USE_GNU


61 
__f‹tify_fun˘i⁄
 *

62 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

63 
size_t
 
__Àn
))

65  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

66 
	}
}

75 
__f‹tify_fun˘i⁄
 *

76 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

79 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

81 
	`__w¨n_mem£t_zîo_Àn
 ();

82  
__de°
;

84  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

85 
	}
}

87 #ifde‡
__USE_BSD


88 
__f‹tify_fun˘i⁄
 

89 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

91 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

92 
	}
}

94 
__f‹tify_fun˘i⁄
 

95 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

97 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

98 
	}
}

101 
__f‹tify_fun˘i⁄
 *

102 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

104  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

105 
	}
}

107 #ifde‡
__USE_GNU


108 
__f‹tify_fun˘i⁄
 *

109 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

111  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

112 
	}
}

116 
__f‹tify_fun˘i⁄
 *

117 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

118 
size_t
 
__Àn
))

120  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

121 
	}
}

124 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

125 
size_t
 
__de°Àn
Ë
__THROW
;

126 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

127 
size_t
 
__n
), 
°≤˝y
);

129 
__f‹tify_fun˘i⁄
 *

130 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

132 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

133 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

134  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

135  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

136 
	}
}

139 
__f‹tify_fun˘i⁄
 *

140 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

142  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

143 
	}
}

146 
__f‹tify_fun˘i⁄
 *

147 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

148 
size_t
 
__Àn
))

150  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

151 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_BSD


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/syscall.h

3 #i‚de‡
_SYSCALL_H


8 #i‡!
deföed
 
__x86_64__


9 
	#SYS__Œ£ek
 
__NR__Œ£ek


	)

10 
	#SYS__√w£À˘
 
__NR__√w£À˘


	)

11 
	#SYS__sys˘l
 
__NR__sys˘l


	)

12 
	#SYS_ac˚ss
 
__NR_ac˚ss


	)

13 
	#SYS_ac˘
 
__NR_ac˘


	)

14 
	#SYS_add_key
 
__NR_add_key


	)

15 
	#SYS_adjtimex
 
__NR_adjtimex


	)

16 
	#SYS_afs_sysˇŒ
 
__NR_afs_sysˇŒ


	)

17 
	#SYS_Æ¨m
 
__NR_Æ¨m


	)

18 
	#SYS_bdÊush
 
__NR_bdÊush


	)

19 
	#SYS_bªak
 
__NR_bªak


	)

20 
	#SYS_brk
 
__NR_brk


	)

21 
	#SYS_ˇpgë
 
__NR_ˇpgë


	)

22 
	#SYS_ˇp£t
 
__NR_ˇp£t


	)

23 
	#SYS_chdú
 
__NR_chdú


	)

24 
	#SYS_chmod
 
__NR_chmod


	)

25 
	#SYS_chown
 
__NR_chown


	)

26 
	#SYS_chown32
 
__NR_chown32


	)

27 
	#SYS_chroŸ
 
__NR_chroŸ


	)

28 
	#SYS_˛ock_adjtime
 
__NR_˛ock_adjtime


	)

29 
	#SYS_˛ock_gëªs
 
__NR_˛ock_gëªs


	)

30 
	#SYS_˛ock_gëtime
 
__NR_˛ock_gëtime


	)

31 
	#SYS_˛ock_«no¶ìp
 
__NR_˛ock_«no¶ìp


	)

32 
	#SYS_˛ock_£âime
 
__NR_˛ock_£âime


	)

33 
	#SYS_˛⁄e
 
__NR_˛⁄e


	)

34 
	#SYS_˛o£
 
__NR_˛o£


	)

35 
	#SYS_¸ót
 
__NR_¸ót


	)

36 
	#SYS_¸óã_moduÀ
 
__NR_¸óã_moduÀ


	)

37 
	#SYS_dñëe_moduÀ
 
__NR_dñëe_moduÀ


	)

38 
	#SYS_dup
 
__NR_dup


	)

39 
	#SYS_dup2
 
__NR_dup2


	)

40 
	#SYS_dup3
 
__NR_dup3


	)

41 
	#SYS_ïﬁl_¸óã
 
__NR_ïﬁl_¸óã


	)

42 
	#SYS_ïﬁl_¸óã1
 
__NR_ïﬁl_¸óã1


	)

43 
	#SYS_ïﬁl_˘l
 
__NR_ïﬁl_˘l


	)

44 
	#SYS_ïﬁl_pwaô
 
__NR_ïﬁl_pwaô


	)

45 
	#SYS_ïﬁl_waô
 
__NR_ïﬁl_waô


	)

46 
	#SYS_evítfd
 
__NR_evítfd


	)

47 
	#SYS_evítfd2
 
__NR_evítfd2


	)

48 
	#SYS_execve
 
__NR_execve


	)

49 
	#SYS_exô
 
__NR_exô


	)

50 
	#SYS_exô_group
 
__NR_exô_group


	)

51 
	#SYS_Ác˚sßt
 
__NR_Ác˚sßt


	)

52 
	#SYS_Ádvi£64
 
__NR_Ádvi£64


	)

53 
	#SYS_Ádvi£64_64
 
__NR_Ádvi£64_64


	)

54 
	#SYS_ÁŒoˇã
 
__NR_ÁŒoˇã


	)

55 
	#SYS_ÁnŸify_öô
 
__NR_ÁnŸify_öô


	)

56 
	#SYS_ÁnŸify_m¨k
 
__NR_ÁnŸify_m¨k


	)

57 
	#SYS_fchdú
 
__NR_fchdú


	)

58 
	#SYS_fchmod
 
__NR_fchmod


	)

59 
	#SYS_fchmod©
 
__NR_fchmod©


	)

60 
	#SYS_fchown
 
__NR_fchown


	)

61 
	#SYS_fchown32
 
__NR_fchown32


	)

62 
	#SYS_fchow«t
 
__NR_fchow«t


	)

63 
	#SYS_f˙é
 
__NR_f˙é


	)

64 
	#SYS_f˙é64
 
__NR_f˙é64


	)

65 
	#SYS_fd©async
 
__NR_fd©async


	)

66 
	#SYS_fgëx©å
 
__NR_fgëx©å


	)

67 
	#SYS_föô_moduÀ
 
__NR_föô_moduÀ


	)

68 
	#SYS_Êi°x©å
 
__NR_Êi°x©å


	)

69 
	#SYS_Êock
 
__NR_Êock


	)

70 
	#SYS_f‹k
 
__NR_f‹k


	)

71 
	#SYS_‰emovex©å
 
__NR_‰emovex©å


	)

72 
	#SYS_f£tx©å
 
__NR_f£tx©å


	)

73 
	#SYS_f°©
 
__NR_f°©


	)

74 
	#SYS_f°©64
 
__NR_f°©64


	)

75 
	#SYS_f°©©64
 
__NR_f°©©64


	)

76 
	#SYS_f°©fs
 
__NR_f°©fs


	)

77 
	#SYS_f°©fs64
 
__NR_f°©fs64


	)

78 
	#SYS_fsync
 
__NR_fsync


	)

79 
	#SYS_·ime
 
__NR_·ime


	)

80 
	#SYS_·runˇã
 
__NR_·runˇã


	)

81 
	#SYS_·runˇã64
 
__NR_·runˇã64


	)

82 
	#SYS_fuãx
 
__NR_fuãx


	)

83 
	#SYS_futimeßt
 
__NR_futimeßt


	)

84 
	#SYS_gë_kî√l_syms
 
__NR_gë_kî√l_syms


	)

85 
	#SYS_gë_mempﬁicy
 
__NR_gë_mempﬁicy


	)

86 
	#SYS_gë_robu°_li°
 
__NR_gë_robu°_li°


	)

87 
	#SYS_gë_thªad_¨ó
 
__NR_gë_thªad_¨ó


	)

88 
	#SYS_gë˝u
 
__NR_gë˝u


	)

89 
	#SYS_gëcwd
 
__NR_gëcwd


	)

90 
	#SYS_gëdíts
 
__NR_gëdíts


	)

91 
	#SYS_gëdíts64
 
__NR_gëdíts64


	)

92 
	#SYS_gëegid
 
__NR_gëegid


	)

93 
	#SYS_gëegid32
 
__NR_gëegid32


	)

94 
	#SYS_gëeuid
 
__NR_gëeuid


	)

95 
	#SYS_gëeuid32
 
__NR_gëeuid32


	)

96 
	#SYS_gëgid
 
__NR_gëgid


	)

97 
	#SYS_gëgid32
 
__NR_gëgid32


	)

98 
	#SYS_gëgroups
 
__NR_gëgroups


	)

99 
	#SYS_gëgroups32
 
__NR_gëgroups32


	)

100 
	#SYS_gëôimî
 
__NR_gëôimî


	)

101 
	#SYS_gëpgid
 
__NR_gëpgid


	)

102 
	#SYS_gëpgΩ
 
__NR_gëpgΩ


	)

103 
	#SYS_gëpid
 
__NR_gëpid


	)

104 
	#SYS_gëpmsg
 
__NR_gëpmsg


	)

105 
	#SYS_gëµid
 
__NR_gëµid


	)

106 
	#SYS_gë¥i‹ôy
 
__NR_gë¥i‹ôy


	)

107 
	#SYS_gëªsgid
 
__NR_gëªsgid


	)

108 
	#SYS_gëªsgid32
 
__NR_gëªsgid32


	)

109 
	#SYS_gëªsuid
 
__NR_gëªsuid


	)

110 
	#SYS_gëªsuid32
 
__NR_gëªsuid32


	)

111 
	#SYS_gëæimô
 
__NR_gëæimô


	)

112 
	#SYS_gërußge
 
__NR_gërußge


	)

113 
	#SYS_gësid
 
__NR_gësid


	)

114 
	#SYS_gëtid
 
__NR_gëtid


	)

115 
	#SYS_gëtimeofday
 
__NR_gëtimeofday


	)

116 
	#SYS_gëuid
 
__NR_gëuid


	)

117 
	#SYS_gëuid32
 
__NR_gëuid32


	)

118 
	#SYS_gëx©å
 
__NR_gëx©å


	)

119 
	#SYS_gây
 
__NR_gây


	)

120 
	#SYS_idÀ
 
__NR_idÀ


	)

121 
	#SYS_öô_moduÀ
 
__NR_öô_moduÀ


	)

122 
	#SYS_öŸify_add_w©ch
 
__NR_öŸify_add_w©ch


	)

123 
	#SYS_öŸify_öô
 
__NR_öŸify_öô


	)

124 
	#SYS_öŸify_öô1
 
__NR_öŸify_öô1


	)

125 
	#SYS_öŸify_rm_w©ch
 
__NR_öŸify_rm_w©ch


	)

126 
	#SYS_io_ˇn˚l
 
__NR_io_ˇn˚l


	)

127 
	#SYS_io_de°roy
 
__NR_io_de°roy


	)

128 
	#SYS_io_gëevíts
 
__NR_io_gëevíts


	)

129 
	#SYS_io_£tup
 
__NR_io_£tup


	)

130 
	#SYS_io_submô
 
__NR_io_submô


	)

131 
	#SYS_io˘l
 
__NR_io˘l


	)

132 
	#SYS_i›îm
 
__NR_i›îm


	)

133 
	#SYS_i›l
 
__NR_i›l


	)

134 
	#SYS_i›rio_gë
 
__NR_i›rio_gë


	)

135 
	#SYS_i›rio_£t
 
__NR_i›rio_£t


	)

136 
	#SYS_ùc
 
__NR_ùc


	)

137 
	#SYS_kcmp
 
__NR_kcmp


	)

138 
	#SYS_kexec_lﬂd
 
__NR_kexec_lﬂd


	)

139 
	#SYS_key˘l
 
__NR_key˘l


	)

140 
	#SYS_kûl
 
__NR_kûl


	)

141 
	#SYS_lchown
 
__NR_lchown


	)

142 
	#SYS_lchown32
 
__NR_lchown32


	)

143 
	#SYS_lgëx©å
 
__NR_lgëx©å


	)

144 
	#SYS_lök
 
__NR_lök


	)

145 
	#SYS_lök©
 
__NR_lök©


	)

146 
	#SYS_li°x©å
 
__NR_li°x©å


	)

147 
	#SYS_Œi°x©å
 
__NR_Œi°x©å


	)

148 
	#SYS_lock
 
__NR_lock


	)

149 
	#SYS_lookup_dcookõ
 
__NR_lookup_dcookõ


	)

150 
	#SYS_Ãemovex©å
 
__NR_Ãemovex©å


	)

151 
	#SYS_l£ek
 
__NR_l£ek


	)

152 
	#SYS_l£tx©å
 
__NR_l£tx©å


	)

153 
	#SYS_l°©
 
__NR_l°©


	)

154 
	#SYS_l°©64
 
__NR_l°©64


	)

155 
	#SYS_madvi£
 
__NR_madvi£


	)

156 
	#SYS_mböd
 
__NR_mböd


	)

157 
	#SYS_migøã_∑ges
 
__NR_migøã_∑ges


	)

158 
	#SYS_möc‹e
 
__NR_möc‹e


	)

159 
	#SYS_mkdú
 
__NR_mkdú


	)

160 
	#SYS_mkdú©
 
__NR_mkdú©


	)

161 
	#SYS_mknod
 
__NR_mknod


	)

162 
	#SYS_mknod©
 
__NR_mknod©


	)

163 
	#SYS_mlock
 
__NR_mlock


	)

164 
	#SYS_mlockÆl
 
__NR_mlockÆl


	)

165 
	#SYS_mm≠
 
__NR_mm≠


	)

166 
	#SYS_mm≠2
 
__NR_mm≠2


	)

167 
	#SYS_modify_ldt
 
__NR_modify_ldt


	)

168 
	#SYS_mou¡
 
__NR_mou¡


	)

169 
	#SYS_move_∑ges
 
__NR_move_∑ges


	)

170 
	#SYS_m¥Ÿe˘
 
__NR_m¥Ÿe˘


	)

171 
	#SYS_mpx
 
__NR_mpx


	)

172 
	#SYS_mq_gë£èâr
 
__NR_mq_gë£èâr


	)

173 
	#SYS_mq_nŸify
 
__NR_mq_nŸify


	)

174 
	#SYS_mq_›í
 
__NR_mq_›í


	)

175 
	#SYS_mq_timedª˚ive
 
__NR_mq_timedª˚ive


	)

176 
	#SYS_mq_timed£nd
 
__NR_mq_timed£nd


	)

177 
	#SYS_mq_u∆ök
 
__NR_mq_u∆ök


	)

178 
	#SYS_mªm≠
 
__NR_mªm≠


	)

179 
	#SYS_msync
 
__NR_msync


	)

180 
	#SYS_mu∆ock
 
__NR_mu∆ock


	)

181 
	#SYS_mu∆ockÆl
 
__NR_mu∆ockÆl


	)

182 
	#SYS_munm≠
 
__NR_munm≠


	)

183 
	#SYS_«me_to_h™dÀ_©
 
__NR_«me_to_h™dÀ_©


	)

184 
	#SYS_«no¶ìp
 
__NR_«no¶ìp


	)

185 
	#SYS_nfs£rv˘l
 
__NR_nfs£rv˘l


	)

186 
	#SYS_ni˚
 
__NR_ni˚


	)

187 
	#SYS_ﬁdf°©
 
__NR_ﬁdf°©


	)

188 
	#SYS_ﬁdl°©
 
__NR_ﬁdl°©


	)

189 
	#SYS_ﬁdﬁdu«me
 
__NR_ﬁdﬁdu«me


	)

190 
	#SYS_ﬁd°©
 
__NR_ﬁd°©


	)

191 
	#SYS_ﬁdu«me
 
__NR_ﬁdu«me


	)

192 
	#SYS_›í
 
__NR_›í


	)

193 
	#SYS_›í_by_h™dÀ_©
 
__NR_›í_by_h™dÀ_©


	)

194 
	#SYS_›í©
 
__NR_›í©


	)

195 
	#SYS_∑u£
 
__NR_∑u£


	)

196 
	#SYS_≥rf_evít_›í
 
__NR_≥rf_evít_›í


	)

197 
	#SYS_≥rs⁄Æôy
 
__NR_≥rs⁄Æôy


	)

198 
	#SYS_pùe
 
__NR_pùe


	)

199 
	#SYS_pùe2
 
__NR_pùe2


	)

200 
	#SYS_pivŸ_roŸ
 
__NR_pivŸ_roŸ


	)

201 
	#SYS_pﬁl
 
__NR_pﬁl


	)

202 
	#SYS_µﬁl
 
__NR_µﬁl


	)

203 
	#SYS_¥˘l
 
__NR_¥˘l


	)

204 
	#SYS_¥ód64
 
__NR_¥ód64


	)

205 
	#SYS_¥ódv
 
__NR_¥ódv


	)

206 
	#SYS_¥limô64
 
__NR_¥limô64


	)

207 
	#SYS_¥o˚ss_vm_ªadv
 
__NR_¥o˚ss_vm_ªadv


	)

208 
	#SYS_¥o˚ss_vm_wrôev
 
__NR_¥o˚ss_vm_wrôev


	)

209 
	#SYS_¥of
 
__NR_¥of


	)

210 
	#SYS_¥ofû
 
__NR_¥ofû


	)

211 
	#SYS_p£À˘6
 
__NR_p£À˘6


	)

212 
	#SYS_±ø˚
 
__NR_±ø˚


	)

213 
	#SYS_puçmsg
 
__NR_puçmsg


	)

214 
	#SYS_pwrôe64
 
__NR_pwrôe64


	)

215 
	#SYS_pwrôev
 
__NR_pwrôev


	)

216 
	#SYS_quîy_moduÀ
 
__NR_quîy_moduÀ


	)

217 
	#SYS_quŸa˘l
 
__NR_quŸa˘l


	)

218 
	#SYS_ªad
 
__NR_ªad


	)

219 
	#SYS_ªadahód
 
__NR_ªadahód


	)

220 
	#SYS_ªaddú
 
__NR_ªaddú


	)

221 
	#SYS_ªadlök
 
__NR_ªadlök


	)

222 
	#SYS_ªadlök©
 
__NR_ªadlök©


	)

223 
	#SYS_ªadv
 
__NR_ªadv


	)

224 
	#SYS_ªboŸ
 
__NR_ªboŸ


	)

225 
	#SYS_ªcvmmsg
 
__NR_ªcvmmsg


	)

226 
	#SYS_ªm≠_fûe_∑ges
 
__NR_ªm≠_fûe_∑ges


	)

227 
	#SYS_ªmovex©å
 
__NR_ªmovex©å


	)

228 
	#SYS_ª«me
 
__NR_ª«me


	)

229 
	#SYS_ª«mót
 
__NR_ª«mót


	)

230 
	#SYS_ªque°_key
 
__NR_ªque°_key


	)

231 
	#SYS_ª°¨t_sysˇŒ
 
__NR_ª°¨t_sysˇŒ


	)

232 
	#SYS_rmdú
 
__NR_rmdú


	)

233 
	#SYS_π_siga˘i⁄
 
__NR_π_siga˘i⁄


	)

234 
	#SYS_π_sig≥ndög
 
__NR_π_sig≥ndög


	)

235 
	#SYS_π_sig¥ocmask
 
__NR_π_sig¥ocmask


	)

236 
	#SYS_π_sigqueueöfo
 
__NR_π_sigqueueöfo


	)

237 
	#SYS_π_sigªtu∫
 
__NR_π_sigªtu∫


	)

238 
	#SYS_π_sigsu•íd
 
__NR_π_sigsu•íd


	)

239 
	#SYS_π_sigtimedwaô
 
__NR_π_sigtimedwaô


	)

240 
	#SYS_π_tgsigqueueöfo
 
__NR_π_tgsigqueueöfo


	)

241 
	#SYS_sched_gë_¥i‹ôy_max
 
__NR_sched_gë_¥i‹ôy_max


	)

242 
	#SYS_sched_gë_¥i‹ôy_mö
 
__NR_sched_gë_¥i‹ôy_mö


	)

243 
	#SYS_sched_gëafföôy
 
__NR_sched_gëafföôy


	)

244 
	#SYS_sched_gë∑øm
 
__NR_sched_gë∑øm


	)

245 
	#SYS_sched_gëscheduÀr
 
__NR_sched_gëscheduÀr


	)

246 
	#SYS_sched_º_gë_öãrvÆ
 
__NR_sched_º_gë_öãrvÆ


	)

247 
	#SYS_sched_£èfföôy
 
__NR_sched_£èfföôy


	)

248 
	#SYS_sched_£ç¨am
 
__NR_sched_£ç¨am


	)

249 
	#SYS_sched_£tscheduÀr
 
__NR_sched_£tscheduÀr


	)

250 
	#SYS_sched_yõld
 
__NR_sched_yõld


	)

251 
	#SYS_£À˘
 
__NR_£À˘


	)

252 
	#SYS_£ndfûe
 
__NR_£ndfûe


	)

253 
	#SYS_£ndfûe64
 
__NR_£ndfûe64


	)

254 
	#SYS_£ndmmsg
 
__NR_£ndmmsg


	)

255 
	#SYS_£t_mempﬁicy
 
__NR_£t_mempﬁicy


	)

256 
	#SYS_£t_robu°_li°
 
__NR_£t_robu°_li°


	)

257 
	#SYS_£t_thªad_¨ó
 
__NR_£t_thªad_¨ó


	)

258 
	#SYS_£t_tid_addªss
 
__NR_£t_tid_addªss


	)

259 
	#SYS_£tdomaö«me
 
__NR_£tdomaö«me


	)

260 
	#SYS_£tfsgid
 
__NR_£tfsgid


	)

261 
	#SYS_£tfsgid32
 
__NR_£tfsgid32


	)

262 
	#SYS_£tfsuid
 
__NR_£tfsuid


	)

263 
	#SYS_£tfsuid32
 
__NR_£tfsuid32


	)

264 
	#SYS_£tgid
 
__NR_£tgid


	)

265 
	#SYS_£tgid32
 
__NR_£tgid32


	)

266 
	#SYS_£tgroups
 
__NR_£tgroups


	)

267 
	#SYS_£tgroups32
 
__NR_£tgroups32


	)

268 
	#SYS_£tho°«me
 
__NR_£tho°«me


	)

269 
	#SYS_£tôimî
 
__NR_£tôimî


	)

270 
	#SYS_£äs
 
__NR_£äs


	)

271 
	#SYS_£çgid
 
__NR_£çgid


	)

272 
	#SYS_£çri‹ôy
 
__NR_£çri‹ôy


	)

273 
	#SYS_£åegid
 
__NR_£åegid


	)

274 
	#SYS_£åegid32
 
__NR_£åegid32


	)

275 
	#SYS_£åesgid
 
__NR_£åesgid


	)

276 
	#SYS_£åesgid32
 
__NR_£åesgid32


	)

277 
	#SYS_£åesuid
 
__NR_£åesuid


	)

278 
	#SYS_£åesuid32
 
__NR_£åesuid32


	)

279 
	#SYS_£åeuid
 
__NR_£åeuid


	)

280 
	#SYS_£åeuid32
 
__NR_£åeuid32


	)

281 
	#SYS_£ålimô
 
__NR_£ålimô


	)

282 
	#SYS_£tsid
 
__NR_£tsid


	)

283 
	#SYS_£âimeofday
 
__NR_£âimeofday


	)

284 
	#SYS_£tuid
 
__NR_£tuid


	)

285 
	#SYS_£tuid32
 
__NR_£tuid32


	)

286 
	#SYS_£tx©å
 
__NR_£tx©å


	)

287 
	#SYS_sgëmask
 
__NR_sgëmask


	)

288 
	#SYS_siga˘i⁄
 
__NR_siga˘i⁄


	)

289 
	#SYS_sigÆt°ack
 
__NR_sigÆt°ack


	)

290 
	#SYS_sig«l
 
__NR_sig«l


	)

291 
	#SYS_sig«lfd
 
__NR_sig«lfd


	)

292 
	#SYS_sig«lfd4
 
__NR_sig«lfd4


	)

293 
	#SYS_sig≥ndög
 
__NR_sig≥ndög


	)

294 
	#SYS_sig¥ocmask
 
__NR_sig¥ocmask


	)

295 
	#SYS_sigªtu∫
 
__NR_sigªtu∫


	)

296 
	#SYS_sigsu•íd
 
__NR_sigsu•íd


	)

297 
	#SYS_sockëˇŒ
 
__NR_sockëˇŒ


	)

298 
	#SYS_•li˚
 
__NR_•li˚


	)

299 
	#SYS_s£tmask
 
__NR_s£tmask


	)

300 
	#SYS_°©
 
__NR_°©


	)

301 
	#SYS_°©64
 
__NR_°©64


	)

302 
	#SYS_°©fs
 
__NR_°©fs


	)

303 
	#SYS_°©fs64
 
__NR_°©fs64


	)

304 
	#SYS_°ime
 
__NR_°ime


	)

305 
	#SYS_°ty
 
__NR_°ty


	)

306 
	#SYS_sw≠off
 
__NR_sw≠off


	)

307 
	#SYS_sw≠⁄
 
__NR_sw≠⁄


	)

308 
	#SYS_symlök
 
__NR_symlök


	)

309 
	#SYS_symlök©
 
__NR_symlök©


	)

310 
	#SYS_sync
 
__NR_sync


	)

311 
	#SYS_sync_fûe_ønge
 
__NR_sync_fûe_ønge


	)

312 
	#SYS_syncfs
 
__NR_syncfs


	)

313 
	#SYS_sysfs
 
__NR_sysfs


	)

314 
	#SYS_sysöfo
 
__NR_sysöfo


	)

315 
	#SYS_sy¶og
 
__NR_sy¶og


	)

316 
	#SYS_ãe
 
__NR_ãe


	)

317 
	#SYS_tgkûl
 
__NR_tgkûl


	)

318 
	#SYS_time
 
__NR_time


	)

319 
	#SYS_timî_¸óã
 
__NR_timî_¸óã


	)

320 
	#SYS_timî_dñëe
 
__NR_timî_dñëe


	)

321 
	#SYS_timî_gëovîrun
 
__NR_timî_gëovîrun


	)

322 
	#SYS_timî_gëtime
 
__NR_timî_gëtime


	)

323 
	#SYS_timî_£âime
 
__NR_timî_£âime


	)

324 
	#SYS_timîfd_¸óã
 
__NR_timîfd_¸óã


	)

325 
	#SYS_timîfd_gëtime
 
__NR_timîfd_gëtime


	)

326 
	#SYS_timîfd_£âime
 
__NR_timîfd_£âime


	)

327 
	#SYS_times
 
__NR_times


	)

328 
	#SYS_tkûl
 
__NR_tkûl


	)

329 
	#SYS_åunˇã
 
__NR_åunˇã


	)

330 
	#SYS_åunˇã64
 
__NR_åunˇã64


	)

331 
	#SYS_ugëæimô
 
__NR_ugëæimô


	)

332 
	#SYS_ulimô
 
__NR_ulimô


	)

333 
	#SYS_umask
 
__NR_umask


	)

334 
	#SYS_umou¡
 
__NR_umou¡


	)

335 
	#SYS_umou¡2
 
__NR_umou¡2


	)

336 
	#SYS_u«me
 
__NR_u«me


	)

337 
	#SYS_u∆ök
 
__NR_u∆ök


	)

338 
	#SYS_u∆ök©
 
__NR_u∆ök©


	)

339 
	#SYS_unsh¨e
 
__NR_unsh¨e


	)

340 
	#SYS_u£lib
 
__NR_u£lib


	)

341 
	#SYS_u°©
 
__NR_u°©


	)

342 
	#SYS_utime
 
__NR_utime


	)

343 
	#SYS_utimíßt
 
__NR_utimíßt


	)

344 
	#SYS_utimes
 
__NR_utimes


	)

345 
	#SYS_vf‹k
 
__NR_vf‹k


	)

346 
	#SYS_vh™gup
 
__NR_vh™gup


	)

347 
	#SYS_vm86
 
__NR_vm86


	)

348 
	#SYS_vm86ﬁd
 
__NR_vm86ﬁd


	)

349 
	#SYS_vm•li˚
 
__NR_vm•li˚


	)

350 
	#SYS_v£rvî
 
__NR_v£rvî


	)

351 
	#SYS_waô4
 
__NR_waô4


	)

352 
	#SYS_waôid
 
__NR_waôid


	)

353 
	#SYS_waôpid
 
__NR_waôpid


	)

354 
	#SYS_wrôe
 
__NR_wrôe


	)

355 
	#SYS_wrôev
 
__NR_wrôev


	)

357 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


358 
	#SYS__sys˘l
 
__NR__sys˘l


	)

359 
	#SYS_ac˚±
 
__NR_ac˚±


	)

360 
	#SYS_ac˚±4
 
__NR_ac˚±4


	)

361 
	#SYS_ac˚ss
 
__NR_ac˚ss


	)

362 
	#SYS_ac˘
 
__NR_ac˘


	)

363 
	#SYS_add_key
 
__NR_add_key


	)

364 
	#SYS_adjtimex
 
__NR_adjtimex


	)

365 
	#SYS_afs_sysˇŒ
 
__NR_afs_sysˇŒ


	)

366 
	#SYS_Æ¨m
 
__NR_Æ¨m


	)

367 
	#SYS_¨ch_¥˘l
 
__NR_¨ch_¥˘l


	)

368 
	#SYS_böd
 
__NR_böd


	)

369 
	#SYS_brk
 
__NR_brk


	)

370 
	#SYS_ˇpgë
 
__NR_ˇpgë


	)

371 
	#SYS_ˇp£t
 
__NR_ˇp£t


	)

372 
	#SYS_chdú
 
__NR_chdú


	)

373 
	#SYS_chmod
 
__NR_chmod


	)

374 
	#SYS_chown
 
__NR_chown


	)

375 
	#SYS_chroŸ
 
__NR_chroŸ


	)

376 
	#SYS_˛ock_adjtime
 
__NR_˛ock_adjtime


	)

377 
	#SYS_˛ock_gëªs
 
__NR_˛ock_gëªs


	)

378 
	#SYS_˛ock_gëtime
 
__NR_˛ock_gëtime


	)

379 
	#SYS_˛ock_«no¶ìp
 
__NR_˛ock_«no¶ìp


	)

380 
	#SYS_˛ock_£âime
 
__NR_˛ock_£âime


	)

381 
	#SYS_˛⁄e
 
__NR_˛⁄e


	)

382 
	#SYS_˛o£
 
__NR_˛o£


	)

383 
	#SYS_c⁄√˘
 
__NR_c⁄√˘


	)

384 
	#SYS_¸ót
 
__NR_¸ót


	)

385 
	#SYS_¸óã_moduÀ
 
__NR_¸óã_moduÀ


	)

386 
	#SYS_dñëe_moduÀ
 
__NR_dñëe_moduÀ


	)

387 
	#SYS_dup
 
__NR_dup


	)

388 
	#SYS_dup2
 
__NR_dup2


	)

389 
	#SYS_dup3
 
__NR_dup3


	)

390 
	#SYS_ïﬁl_¸óã
 
__NR_ïﬁl_¸óã


	)

391 
	#SYS_ïﬁl_¸óã1
 
__NR_ïﬁl_¸óã1


	)

392 
	#SYS_ïﬁl_˘l
 
__NR_ïﬁl_˘l


	)

393 
	#SYS_ïﬁl_˘l_ﬁd
 
__NR_ïﬁl_˘l_ﬁd


	)

394 
	#SYS_ïﬁl_pwaô
 
__NR_ïﬁl_pwaô


	)

395 
	#SYS_ïﬁl_waô
 
__NR_ïﬁl_waô


	)

396 
	#SYS_ïﬁl_waô_ﬁd
 
__NR_ïﬁl_waô_ﬁd


	)

397 
	#SYS_evítfd
 
__NR_evítfd


	)

398 
	#SYS_evítfd2
 
__NR_evítfd2


	)

399 
	#SYS_execve
 
__NR_execve


	)

400 
	#SYS_exô
 
__NR_exô


	)

401 
	#SYS_exô_group
 
__NR_exô_group


	)

402 
	#SYS_Ác˚sßt
 
__NR_Ác˚sßt


	)

403 
	#SYS_Ádvi£64
 
__NR_Ádvi£64


	)

404 
	#SYS_ÁŒoˇã
 
__NR_ÁŒoˇã


	)

405 
	#SYS_ÁnŸify_öô
 
__NR_ÁnŸify_öô


	)

406 
	#SYS_ÁnŸify_m¨k
 
__NR_ÁnŸify_m¨k


	)

407 
	#SYS_fchdú
 
__NR_fchdú


	)

408 
	#SYS_fchmod
 
__NR_fchmod


	)

409 
	#SYS_fchmod©
 
__NR_fchmod©


	)

410 
	#SYS_fchown
 
__NR_fchown


	)

411 
	#SYS_fchow«t
 
__NR_fchow«t


	)

412 
	#SYS_f˙é
 
__NR_f˙é


	)

413 
	#SYS_fd©async
 
__NR_fd©async


	)

414 
	#SYS_fgëx©å
 
__NR_fgëx©å


	)

415 
	#SYS_föô_moduÀ
 
__NR_föô_moduÀ


	)

416 
	#SYS_Êi°x©å
 
__NR_Êi°x©å


	)

417 
	#SYS_Êock
 
__NR_Êock


	)

418 
	#SYS_f‹k
 
__NR_f‹k


	)

419 
	#SYS_‰emovex©å
 
__NR_‰emovex©å


	)

420 
	#SYS_f£tx©å
 
__NR_f£tx©å


	)

421 
	#SYS_f°©
 
__NR_f°©


	)

422 
	#SYS_f°©fs
 
__NR_f°©fs


	)

423 
	#SYS_fsync
 
__NR_fsync


	)

424 
	#SYS_·runˇã
 
__NR_·runˇã


	)

425 
	#SYS_fuãx
 
__NR_fuãx


	)

426 
	#SYS_futimeßt
 
__NR_futimeßt


	)

427 
	#SYS_gë_kî√l_syms
 
__NR_gë_kî√l_syms


	)

428 
	#SYS_gë_mempﬁicy
 
__NR_gë_mempﬁicy


	)

429 
	#SYS_gë_robu°_li°
 
__NR_gë_robu°_li°


	)

430 
	#SYS_gë_thªad_¨ó
 
__NR_gë_thªad_¨ó


	)

431 
	#SYS_gë˝u
 
__NR_gë˝u


	)

432 
	#SYS_gëcwd
 
__NR_gëcwd


	)

433 
	#SYS_gëdíts
 
__NR_gëdíts


	)

434 
	#SYS_gëdíts64
 
__NR_gëdíts64


	)

435 
	#SYS_gëegid
 
__NR_gëegid


	)

436 
	#SYS_gëeuid
 
__NR_gëeuid


	)

437 
	#SYS_gëgid
 
__NR_gëgid


	)

438 
	#SYS_gëgroups
 
__NR_gëgroups


	)

439 
	#SYS_gëôimî
 
__NR_gëôimî


	)

440 
	#SYS_gë≥î«me
 
__NR_gë≥î«me


	)

441 
	#SYS_gëpgid
 
__NR_gëpgid


	)

442 
	#SYS_gëpgΩ
 
__NR_gëpgΩ


	)

443 
	#SYS_gëpid
 
__NR_gëpid


	)

444 
	#SYS_gëpmsg
 
__NR_gëpmsg


	)

445 
	#SYS_gëµid
 
__NR_gëµid


	)

446 
	#SYS_gë¥i‹ôy
 
__NR_gë¥i‹ôy


	)

447 
	#SYS_gëªsgid
 
__NR_gëªsgid


	)

448 
	#SYS_gëªsuid
 
__NR_gëªsuid


	)

449 
	#SYS_gëæimô
 
__NR_gëæimô


	)

450 
	#SYS_gërußge
 
__NR_gërußge


	)

451 
	#SYS_gësid
 
__NR_gësid


	)

452 
	#SYS_gësock«me
 
__NR_gësock«me


	)

453 
	#SYS_gësock›t
 
__NR_gësock›t


	)

454 
	#SYS_gëtid
 
__NR_gëtid


	)

455 
	#SYS_gëtimeofday
 
__NR_gëtimeofday


	)

456 
	#SYS_gëuid
 
__NR_gëuid


	)

457 
	#SYS_gëx©å
 
__NR_gëx©å


	)

458 
	#SYS_öô_moduÀ
 
__NR_öô_moduÀ


	)

459 
	#SYS_öŸify_add_w©ch
 
__NR_öŸify_add_w©ch


	)

460 
	#SYS_öŸify_öô
 
__NR_öŸify_öô


	)

461 
	#SYS_öŸify_öô1
 
__NR_öŸify_öô1


	)

462 
	#SYS_öŸify_rm_w©ch
 
__NR_öŸify_rm_w©ch


	)

463 
	#SYS_io_ˇn˚l
 
__NR_io_ˇn˚l


	)

464 
	#SYS_io_de°roy
 
__NR_io_de°roy


	)

465 
	#SYS_io_gëevíts
 
__NR_io_gëevíts


	)

466 
	#SYS_io_£tup
 
__NR_io_£tup


	)

467 
	#SYS_io_submô
 
__NR_io_submô


	)

468 
	#SYS_io˘l
 
__NR_io˘l


	)

469 
	#SYS_i›îm
 
__NR_i›îm


	)

470 
	#SYS_i›l
 
__NR_i›l


	)

471 
	#SYS_i›rio_gë
 
__NR_i›rio_gë


	)

472 
	#SYS_i›rio_£t
 
__NR_i›rio_£t


	)

473 
	#SYS_kcmp
 
__NR_kcmp


	)

474 
	#SYS_kexec_lﬂd
 
__NR_kexec_lﬂd


	)

475 
	#SYS_key˘l
 
__NR_key˘l


	)

476 
	#SYS_kûl
 
__NR_kûl


	)

477 
	#SYS_lchown
 
__NR_lchown


	)

478 
	#SYS_lgëx©å
 
__NR_lgëx©å


	)

479 
	#SYS_lök
 
__NR_lök


	)

480 
	#SYS_lök©
 
__NR_lök©


	)

481 
	#SYS_li°í
 
__NR_li°í


	)

482 
	#SYS_li°x©å
 
__NR_li°x©å


	)

483 
	#SYS_Œi°x©å
 
__NR_Œi°x©å


	)

484 
	#SYS_lookup_dcookõ
 
__NR_lookup_dcookõ


	)

485 
	#SYS_Ãemovex©å
 
__NR_Ãemovex©å


	)

486 
	#SYS_l£ek
 
__NR_l£ek


	)

487 
	#SYS_l£tx©å
 
__NR_l£tx©å


	)

488 
	#SYS_l°©
 
__NR_l°©


	)

489 
	#SYS_madvi£
 
__NR_madvi£


	)

490 
	#SYS_mböd
 
__NR_mböd


	)

491 
	#SYS_migøã_∑ges
 
__NR_migøã_∑ges


	)

492 
	#SYS_möc‹e
 
__NR_möc‹e


	)

493 
	#SYS_mkdú
 
__NR_mkdú


	)

494 
	#SYS_mkdú©
 
__NR_mkdú©


	)

495 
	#SYS_mknod
 
__NR_mknod


	)

496 
	#SYS_mknod©
 
__NR_mknod©


	)

497 
	#SYS_mlock
 
__NR_mlock


	)

498 
	#SYS_mlockÆl
 
__NR_mlockÆl


	)

499 
	#SYS_mm≠
 
__NR_mm≠


	)

500 
	#SYS_modify_ldt
 
__NR_modify_ldt


	)

501 
	#SYS_mou¡
 
__NR_mou¡


	)

502 
	#SYS_move_∑ges
 
__NR_move_∑ges


	)

503 
	#SYS_m¥Ÿe˘
 
__NR_m¥Ÿe˘


	)

504 
	#SYS_mq_gë£èâr
 
__NR_mq_gë£èâr


	)

505 
	#SYS_mq_nŸify
 
__NR_mq_nŸify


	)

506 
	#SYS_mq_›í
 
__NR_mq_›í


	)

507 
	#SYS_mq_timedª˚ive
 
__NR_mq_timedª˚ive


	)

508 
	#SYS_mq_timed£nd
 
__NR_mq_timed£nd


	)

509 
	#SYS_mq_u∆ök
 
__NR_mq_u∆ök


	)

510 
	#SYS_mªm≠
 
__NR_mªm≠


	)

511 
	#SYS_msg˘l
 
__NR_msg˘l


	)

512 
	#SYS_msggë
 
__NR_msggë


	)

513 
	#SYS_msgrcv
 
__NR_msgrcv


	)

514 
	#SYS_msg¢d
 
__NR_msg¢d


	)

515 
	#SYS_msync
 
__NR_msync


	)

516 
	#SYS_mu∆ock
 
__NR_mu∆ock


	)

517 
	#SYS_mu∆ockÆl
 
__NR_mu∆ockÆl


	)

518 
	#SYS_munm≠
 
__NR_munm≠


	)

519 
	#SYS_«me_to_h™dÀ_©
 
__NR_«me_to_h™dÀ_©


	)

520 
	#SYS_«no¶ìp
 
__NR_«no¶ìp


	)

521 
	#SYS_√wf°©©
 
__NR_√wf°©©


	)

522 
	#SYS_nfs£rv˘l
 
__NR_nfs£rv˘l


	)

523 
	#SYS_›í
 
__NR_›í


	)

524 
	#SYS_›í_by_h™dÀ_©
 
__NR_›í_by_h™dÀ_©


	)

525 
	#SYS_›í©
 
__NR_›í©


	)

526 
	#SYS_∑u£
 
__NR_∑u£


	)

527 
	#SYS_≥rf_evít_›í
 
__NR_≥rf_evít_›í


	)

528 
	#SYS_≥rs⁄Æôy
 
__NR_≥rs⁄Æôy


	)

529 
	#SYS_pùe
 
__NR_pùe


	)

530 
	#SYS_pùe2
 
__NR_pùe2


	)

531 
	#SYS_pivŸ_roŸ
 
__NR_pivŸ_roŸ


	)

532 
	#SYS_pﬁl
 
__NR_pﬁl


	)

533 
	#SYS_µﬁl
 
__NR_µﬁl


	)

534 
	#SYS_¥˘l
 
__NR_¥˘l


	)

535 
	#SYS_¥ód64
 
__NR_¥ód64


	)

536 
	#SYS_¥ódv
 
__NR_¥ódv


	)

537 
	#SYS_¥limô64
 
__NR_¥limô64


	)

538 
	#SYS_¥o˚ss_vm_ªadv
 
__NR_¥o˚ss_vm_ªadv


	)

539 
	#SYS_¥o˚ss_vm_wrôev
 
__NR_¥o˚ss_vm_wrôev


	)

540 
	#SYS_p£À˘6
 
__NR_p£À˘6


	)

541 
	#SYS_±ø˚
 
__NR_±ø˚


	)

542 
	#SYS_puçmsg
 
__NR_puçmsg


	)

543 
	#SYS_pwrôe64
 
__NR_pwrôe64


	)

544 
	#SYS_pwrôev
 
__NR_pwrôev


	)

545 
	#SYS_quîy_moduÀ
 
__NR_quîy_moduÀ


	)

546 
	#SYS_quŸa˘l
 
__NR_quŸa˘l


	)

547 
	#SYS_ªad
 
__NR_ªad


	)

548 
	#SYS_ªadahód
 
__NR_ªadahód


	)

549 
	#SYS_ªadlök
 
__NR_ªadlök


	)

550 
	#SYS_ªadlök©
 
__NR_ªadlök©


	)

551 
	#SYS_ªadv
 
__NR_ªadv


	)

552 
	#SYS_ªboŸ
 
__NR_ªboŸ


	)

553 
	#SYS_ªcv‰om
 
__NR_ªcv‰om


	)

554 
	#SYS_ªcvmmsg
 
__NR_ªcvmmsg


	)

555 
	#SYS_ªcvmsg
 
__NR_ªcvmsg


	)

556 
	#SYS_ªm≠_fûe_∑ges
 
__NR_ªm≠_fûe_∑ges


	)

557 
	#SYS_ªmovex©å
 
__NR_ªmovex©å


	)

558 
	#SYS_ª«me
 
__NR_ª«me


	)

559 
	#SYS_ª«mót
 
__NR_ª«mót


	)

560 
	#SYS_ªque°_key
 
__NR_ªque°_key


	)

561 
	#SYS_ª°¨t_sysˇŒ
 
__NR_ª°¨t_sysˇŒ


	)

562 
	#SYS_rmdú
 
__NR_rmdú


	)

563 
	#SYS_π_siga˘i⁄
 
__NR_π_siga˘i⁄


	)

564 
	#SYS_π_sig≥ndög
 
__NR_π_sig≥ndög


	)

565 
	#SYS_π_sig¥ocmask
 
__NR_π_sig¥ocmask


	)

566 
	#SYS_π_sigqueueöfo
 
__NR_π_sigqueueöfo


	)

567 
	#SYS_π_sigªtu∫
 
__NR_π_sigªtu∫


	)

568 
	#SYS_π_sigsu•íd
 
__NR_π_sigsu•íd


	)

569 
	#SYS_π_sigtimedwaô
 
__NR_π_sigtimedwaô


	)

570 
	#SYS_π_tgsigqueueöfo
 
__NR_π_tgsigqueueöfo


	)

571 
	#SYS_sched_gë_¥i‹ôy_max
 
__NR_sched_gë_¥i‹ôy_max


	)

572 
	#SYS_sched_gë_¥i‹ôy_mö
 
__NR_sched_gë_¥i‹ôy_mö


	)

573 
	#SYS_sched_gëafföôy
 
__NR_sched_gëafföôy


	)

574 
	#SYS_sched_gë∑øm
 
__NR_sched_gë∑øm


	)

575 
	#SYS_sched_gëscheduÀr
 
__NR_sched_gëscheduÀr


	)

576 
	#SYS_sched_º_gë_öãrvÆ
 
__NR_sched_º_gë_öãrvÆ


	)

577 
	#SYS_sched_£èfföôy
 
__NR_sched_£èfföôy


	)

578 
	#SYS_sched_£ç¨am
 
__NR_sched_£ç¨am


	)

579 
	#SYS_sched_£tscheduÀr
 
__NR_sched_£tscheduÀr


	)

580 
	#SYS_sched_yõld
 
__NR_sched_yõld


	)

581 
	#SYS_£curôy
 
__NR_£curôy


	)

582 
	#SYS_£À˘
 
__NR_£À˘


	)

583 
	#SYS_£m˘l
 
__NR_£m˘l


	)

584 
	#SYS_£mgë
 
__NR_£mgë


	)

585 
	#SYS_£m›
 
__NR_£m›


	)

586 
	#SYS_£mtimed›
 
__NR_£mtimed›


	)

587 
	#SYS_£ndfûe
 
__NR_£ndfûe


	)

588 
	#SYS_£ndmmsg
 
__NR_£ndmmsg


	)

589 
	#SYS_£ndmsg
 
__NR_£ndmsg


	)

590 
	#SYS_£ndto
 
__NR_£ndto


	)

591 
	#SYS_£t_mempﬁicy
 
__NR_£t_mempﬁicy


	)

592 
	#SYS_£t_robu°_li°
 
__NR_£t_robu°_li°


	)

593 
	#SYS_£t_thªad_¨ó
 
__NR_£t_thªad_¨ó


	)

594 
	#SYS_£t_tid_addªss
 
__NR_£t_tid_addªss


	)

595 
	#SYS_£tdomaö«me
 
__NR_£tdomaö«me


	)

596 
	#SYS_£tfsgid
 
__NR_£tfsgid


	)

597 
	#SYS_£tfsuid
 
__NR_£tfsuid


	)

598 
	#SYS_£tgid
 
__NR_£tgid


	)

599 
	#SYS_£tgroups
 
__NR_£tgroups


	)

600 
	#SYS_£tho°«me
 
__NR_£tho°«me


	)

601 
	#SYS_£tôimî
 
__NR_£tôimî


	)

602 
	#SYS_£äs
 
__NR_£äs


	)

603 
	#SYS_£çgid
 
__NR_£çgid


	)

604 
	#SYS_£çri‹ôy
 
__NR_£çri‹ôy


	)

605 
	#SYS_£åegid
 
__NR_£åegid


	)

606 
	#SYS_£åesgid
 
__NR_£åesgid


	)

607 
	#SYS_£åesuid
 
__NR_£åesuid


	)

608 
	#SYS_£åeuid
 
__NR_£åeuid


	)

609 
	#SYS_£ålimô
 
__NR_£ålimô


	)

610 
	#SYS_£tsid
 
__NR_£tsid


	)

611 
	#SYS_£tsock›t
 
__NR_£tsock›t


	)

612 
	#SYS_£âimeofday
 
__NR_£âimeofday


	)

613 
	#SYS_£tuid
 
__NR_£tuid


	)

614 
	#SYS_£tx©å
 
__NR_£tx©å


	)

615 
	#SYS_shm©
 
__NR_shm©


	)

616 
	#SYS_shm˘l
 
__NR_shm˘l


	)

617 
	#SYS_shmdt
 
__NR_shmdt


	)

618 
	#SYS_shmgë
 
__NR_shmgë


	)

619 
	#SYS_shutdown
 
__NR_shutdown


	)

620 
	#SYS_sigÆt°ack
 
__NR_sigÆt°ack


	)

621 
	#SYS_sig«lfd
 
__NR_sig«lfd


	)

622 
	#SYS_sig«lfd4
 
__NR_sig«lfd4


	)

623 
	#SYS_sockë
 
__NR_sockë


	)

624 
	#SYS_sockë∑ú
 
__NR_sockë∑ú


	)

625 
	#SYS_•li˚
 
__NR_•li˚


	)

626 
	#SYS_°©
 
__NR_°©


	)

627 
	#SYS_°©fs
 
__NR_°©fs


	)

628 
	#SYS_sw≠off
 
__NR_sw≠off


	)

629 
	#SYS_sw≠⁄
 
__NR_sw≠⁄


	)

630 
	#SYS_symlök
 
__NR_symlök


	)

631 
	#SYS_symlök©
 
__NR_symlök©


	)

632 
	#SYS_sync
 
__NR_sync


	)

633 
	#SYS_sync_fûe_ønge
 
__NR_sync_fûe_ønge


	)

634 
	#SYS_syncfs
 
__NR_syncfs


	)

635 
	#SYS_sysfs
 
__NR_sysfs


	)

636 
	#SYS_sysöfo
 
__NR_sysöfo


	)

637 
	#SYS_sy¶og
 
__NR_sy¶og


	)

638 
	#SYS_ãe
 
__NR_ãe


	)

639 
	#SYS_tgkûl
 
__NR_tgkûl


	)

640 
	#SYS_time
 
__NR_time


	)

641 
	#SYS_timî_¸óã
 
__NR_timî_¸óã


	)

642 
	#SYS_timî_dñëe
 
__NR_timî_dñëe


	)

643 
	#SYS_timî_gëovîrun
 
__NR_timî_gëovîrun


	)

644 
	#SYS_timî_gëtime
 
__NR_timî_gëtime


	)

645 
	#SYS_timî_£âime
 
__NR_timî_£âime


	)

646 
	#SYS_timîfd_¸óã
 
__NR_timîfd_¸óã


	)

647 
	#SYS_timîfd_gëtime
 
__NR_timîfd_gëtime


	)

648 
	#SYS_timîfd_£âime
 
__NR_timîfd_£âime


	)

649 
	#SYS_times
 
__NR_times


	)

650 
	#SYS_tkûl
 
__NR_tkûl


	)

651 
	#SYS_åunˇã
 
__NR_åunˇã


	)

652 
	#SYS_tuxˇŒ
 
__NR_tuxˇŒ


	)

653 
	#SYS_umask
 
__NR_umask


	)

654 
	#SYS_umou¡2
 
__NR_umou¡2


	)

655 
	#SYS_u«me
 
__NR_u«me


	)

656 
	#SYS_u∆ök
 
__NR_u∆ök


	)

657 
	#SYS_u∆ök©
 
__NR_u∆ök©


	)

658 
	#SYS_unsh¨e
 
__NR_unsh¨e


	)

659 
	#SYS_u£lib
 
__NR_u£lib


	)

660 
	#SYS_u°©
 
__NR_u°©


	)

661 
	#SYS_utime
 
__NR_utime


	)

662 
	#SYS_utimíßt
 
__NR_utimíßt


	)

663 
	#SYS_utimes
 
__NR_utimes


	)

664 
	#SYS_vf‹k
 
__NR_vf‹k


	)

665 
	#SYS_vh™gup
 
__NR_vh™gup


	)

666 
	#SYS_vm•li˚
 
__NR_vm•li˚


	)

667 
	#SYS_v£rvî
 
__NR_v£rvî


	)

668 
	#SYS_waô4
 
__NR_waô4


	)

669 
	#SYS_waôid
 
__NR_waôid


	)

670 
	#SYS_wrôe
 
__NR_wrôe


	)

671 
	#SYS_wrôev
 
__NR_wrôev


	)

673 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


674 
	#SYS_ac˚±
 
__NR_ac˚±


	)

675 
	#SYS_ac˚±4
 
__NR_ac˚±4


	)

676 
	#SYS_ac˚ss
 
__NR_ac˚ss


	)

677 
	#SYS_ac˘
 
__NR_ac˘


	)

678 
	#SYS_add_key
 
__NR_add_key


	)

679 
	#SYS_adjtimex
 
__NR_adjtimex


	)

680 
	#SYS_afs_sysˇŒ
 
__NR_afs_sysˇŒ


	)

681 
	#SYS_Æ¨m
 
__NR_Æ¨m


	)

682 
	#SYS_¨ch_¥˘l
 
__NR_¨ch_¥˘l


	)

683 
	#SYS_böd
 
__NR_böd


	)

684 
	#SYS_brk
 
__NR_brk


	)

685 
	#SYS_ˇpgë
 
__NR_ˇpgë


	)

686 
	#SYS_ˇp£t
 
__NR_ˇp£t


	)

687 
	#SYS_chdú
 
__NR_chdú


	)

688 
	#SYS_chmod
 
__NR_chmod


	)

689 
	#SYS_chown
 
__NR_chown


	)

690 
	#SYS_chroŸ
 
__NR_chroŸ


	)

691 
	#SYS_˛ock_adjtime
 
__NR_˛ock_adjtime


	)

692 
	#SYS_˛ock_gëªs
 
__NR_˛ock_gëªs


	)

693 
	#SYS_˛ock_gëtime
 
__NR_˛ock_gëtime


	)

694 
	#SYS_˛ock_«no¶ìp
 
__NR_˛ock_«no¶ìp


	)

695 
	#SYS_˛ock_£âime
 
__NR_˛ock_£âime


	)

696 
	#SYS_˛⁄e
 
__NR_˛⁄e


	)

697 
	#SYS_˛o£
 
__NR_˛o£


	)

698 
	#SYS_c⁄√˘
 
__NR_c⁄√˘


	)

699 
	#SYS_¸ót
 
__NR_¸ót


	)

700 
	#SYS_dñëe_moduÀ
 
__NR_dñëe_moduÀ


	)

701 
	#SYS_dup
 
__NR_dup


	)

702 
	#SYS_dup2
 
__NR_dup2


	)

703 
	#SYS_dup3
 
__NR_dup3


	)

704 
	#SYS_ïﬁl_¸óã
 
__NR_ïﬁl_¸óã


	)

705 
	#SYS_ïﬁl_¸óã1
 
__NR_ïﬁl_¸óã1


	)

706 
	#SYS_ïﬁl_˘l
 
__NR_ïﬁl_˘l


	)

707 
	#SYS_ïﬁl_pwaô
 
__NR_ïﬁl_pwaô


	)

708 
	#SYS_ïﬁl_waô
 
__NR_ïﬁl_waô


	)

709 
	#SYS_evítfd
 
__NR_evítfd


	)

710 
	#SYS_evítfd2
 
__NR_evítfd2


	)

711 
	#SYS_execve
 
__NR_execve


	)

712 
	#SYS_exô
 
__NR_exô


	)

713 
	#SYS_exô_group
 
__NR_exô_group


	)

714 
	#SYS_Ác˚sßt
 
__NR_Ác˚sßt


	)

715 
	#SYS_Ádvi£64
 
__NR_Ádvi£64


	)

716 
	#SYS_ÁŒoˇã
 
__NR_ÁŒoˇã


	)

717 
	#SYS_ÁnŸify_öô
 
__NR_ÁnŸify_öô


	)

718 
	#SYS_ÁnŸify_m¨k
 
__NR_ÁnŸify_m¨k


	)

719 
	#SYS_fchdú
 
__NR_fchdú


	)

720 
	#SYS_fchmod
 
__NR_fchmod


	)

721 
	#SYS_fchmod©
 
__NR_fchmod©


	)

722 
	#SYS_fchown
 
__NR_fchown


	)

723 
	#SYS_fchow«t
 
__NR_fchow«t


	)

724 
	#SYS_f˙é
 
__NR_f˙é


	)

725 
	#SYS_fd©async
 
__NR_fd©async


	)

726 
	#SYS_fgëx©å
 
__NR_fgëx©å


	)

727 
	#SYS_föô_moduÀ
 
__NR_föô_moduÀ


	)

728 
	#SYS_Êi°x©å
 
__NR_Êi°x©å


	)

729 
	#SYS_Êock
 
__NR_Êock


	)

730 
	#SYS_f‹k
 
__NR_f‹k


	)

731 
	#SYS_‰emovex©å
 
__NR_‰emovex©å


	)

732 
	#SYS_f£tx©å
 
__NR_f£tx©å


	)

733 
	#SYS_f°©
 
__NR_f°©


	)

734 
	#SYS_f°©fs
 
__NR_f°©fs


	)

735 
	#SYS_fsync
 
__NR_fsync


	)

736 
	#SYS_·runˇã
 
__NR_·runˇã


	)

737 
	#SYS_fuãx
 
__NR_fuãx


	)

738 
	#SYS_futimeßt
 
__NR_futimeßt


	)

739 
	#SYS_gë_mempﬁicy
 
__NR_gë_mempﬁicy


	)

740 
	#SYS_gë_robu°_li°
 
__NR_gë_robu°_li°


	)

741 
	#SYS_gë˝u
 
__NR_gë˝u


	)

742 
	#SYS_gëcwd
 
__NR_gëcwd


	)

743 
	#SYS_gëdíts
 
__NR_gëdíts


	)

744 
	#SYS_gëdíts64
 
__NR_gëdíts64


	)

745 
	#SYS_gëegid
 
__NR_gëegid


	)

746 
	#SYS_gëeuid
 
__NR_gëeuid


	)

747 
	#SYS_gëgid
 
__NR_gëgid


	)

748 
	#SYS_gëgroups
 
__NR_gëgroups


	)

749 
	#SYS_gëôimî
 
__NR_gëôimî


	)

750 
	#SYS_gë≥î«me
 
__NR_gë≥î«me


	)

751 
	#SYS_gëpgid
 
__NR_gëpgid


	)

752 
	#SYS_gëpgΩ
 
__NR_gëpgΩ


	)

753 
	#SYS_gëpid
 
__NR_gëpid


	)

754 
	#SYS_gëpmsg
 
__NR_gëpmsg


	)

755 
	#SYS_gëµid
 
__NR_gëµid


	)

756 
	#SYS_gë¥i‹ôy
 
__NR_gë¥i‹ôy


	)

757 
	#SYS_gëªsgid
 
__NR_gëªsgid


	)

758 
	#SYS_gëªsuid
 
__NR_gëªsuid


	)

759 
	#SYS_gëæimô
 
__NR_gëæimô


	)

760 
	#SYS_gërußge
 
__NR_gërußge


	)

761 
	#SYS_gësid
 
__NR_gësid


	)

762 
	#SYS_gësock«me
 
__NR_gësock«me


	)

763 
	#SYS_gësock›t
 
__NR_gësock›t


	)

764 
	#SYS_gëtid
 
__NR_gëtid


	)

765 
	#SYS_gëtimeofday
 
__NR_gëtimeofday


	)

766 
	#SYS_gëuid
 
__NR_gëuid


	)

767 
	#SYS_gëx©å
 
__NR_gëx©å


	)

768 
	#SYS_öô_moduÀ
 
__NR_öô_moduÀ


	)

769 
	#SYS_öŸify_add_w©ch
 
__NR_öŸify_add_w©ch


	)

770 
	#SYS_öŸify_öô
 
__NR_öŸify_öô


	)

771 
	#SYS_öŸify_öô1
 
__NR_öŸify_öô1


	)

772 
	#SYS_öŸify_rm_w©ch
 
__NR_öŸify_rm_w©ch


	)

773 
	#SYS_io_ˇn˚l
 
__NR_io_ˇn˚l


	)

774 
	#SYS_io_de°roy
 
__NR_io_de°roy


	)

775 
	#SYS_io_gëevíts
 
__NR_io_gëevíts


	)

776 
	#SYS_io_£tup
 
__NR_io_£tup


	)

777 
	#SYS_io_submô
 
__NR_io_submô


	)

778 
	#SYS_io˘l
 
__NR_io˘l


	)

779 
	#SYS_i›îm
 
__NR_i›îm


	)

780 
	#SYS_i›l
 
__NR_i›l


	)

781 
	#SYS_i›rio_gë
 
__NR_i›rio_gë


	)

782 
	#SYS_i›rio_£t
 
__NR_i›rio_£t


	)

783 
	#SYS_kcmp
 
__NR_kcmp


	)

784 
	#SYS_kexec_lﬂd
 
__NR_kexec_lﬂd


	)

785 
	#SYS_key˘l
 
__NR_key˘l


	)

786 
	#SYS_kûl
 
__NR_kûl


	)

787 
	#SYS_lchown
 
__NR_lchown


	)

788 
	#SYS_lgëx©å
 
__NR_lgëx©å


	)

789 
	#SYS_lök
 
__NR_lök


	)

790 
	#SYS_lök©
 
__NR_lök©


	)

791 
	#SYS_li°í
 
__NR_li°í


	)

792 
	#SYS_li°x©å
 
__NR_li°x©å


	)

793 
	#SYS_Œi°x©å
 
__NR_Œi°x©å


	)

794 
	#SYS_lookup_dcookõ
 
__NR_lookup_dcookõ


	)

795 
	#SYS_Ãemovex©å
 
__NR_Ãemovex©å


	)

796 
	#SYS_l£ek
 
__NR_l£ek


	)

797 
	#SYS_l£tx©å
 
__NR_l£tx©å


	)

798 
	#SYS_l°©
 
__NR_l°©


	)

799 
	#SYS_madvi£
 
__NR_madvi£


	)

800 
	#SYS_mböd
 
__NR_mböd


	)

801 
	#SYS_migøã_∑ges
 
__NR_migøã_∑ges


	)

802 
	#SYS_möc‹e
 
__NR_möc‹e


	)

803 
	#SYS_mkdú
 
__NR_mkdú


	)

804 
	#SYS_mkdú©
 
__NR_mkdú©


	)

805 
	#SYS_mknod
 
__NR_mknod


	)

806 
	#SYS_mknod©
 
__NR_mknod©


	)

807 
	#SYS_mlock
 
__NR_mlock


	)

808 
	#SYS_mlockÆl
 
__NR_mlockÆl


	)

809 
	#SYS_mm≠
 
__NR_mm≠


	)

810 
	#SYS_modify_ldt
 
__NR_modify_ldt


	)

811 
	#SYS_mou¡
 
__NR_mou¡


	)

812 
	#SYS_move_∑ges
 
__NR_move_∑ges


	)

813 
	#SYS_m¥Ÿe˘
 
__NR_m¥Ÿe˘


	)

814 
	#SYS_mq_gë£èâr
 
__NR_mq_gë£èâr


	)

815 
	#SYS_mq_nŸify
 
__NR_mq_nŸify


	)

816 
	#SYS_mq_›í
 
__NR_mq_›í


	)

817 
	#SYS_mq_timedª˚ive
 
__NR_mq_timedª˚ive


	)

818 
	#SYS_mq_timed£nd
 
__NR_mq_timed£nd


	)

819 
	#SYS_mq_u∆ök
 
__NR_mq_u∆ök


	)

820 
	#SYS_mªm≠
 
__NR_mªm≠


	)

821 
	#SYS_msg˘l
 
__NR_msg˘l


	)

822 
	#SYS_msggë
 
__NR_msggë


	)

823 
	#SYS_msgrcv
 
__NR_msgrcv


	)

824 
	#SYS_msg¢d
 
__NR_msg¢d


	)

825 
	#SYS_msync
 
__NR_msync


	)

826 
	#SYS_mu∆ock
 
__NR_mu∆ock


	)

827 
	#SYS_mu∆ockÆl
 
__NR_mu∆ockÆl


	)

828 
	#SYS_munm≠
 
__NR_munm≠


	)

829 
	#SYS_«me_to_h™dÀ_©
 
__NR_«me_to_h™dÀ_©


	)

830 
	#SYS_«no¶ìp
 
__NR_«no¶ìp


	)

831 
	#SYS_√wf°©©
 
__NR_√wf°©©


	)

832 
	#SYS_›í
 
__NR_›í


	)

833 
	#SYS_›í_by_h™dÀ_©
 
__NR_›í_by_h™dÀ_©


	)

834 
	#SYS_›í©
 
__NR_›í©


	)

835 
	#SYS_∑u£
 
__NR_∑u£


	)

836 
	#SYS_≥rf_evít_›í
 
__NR_≥rf_evít_›í


	)

837 
	#SYS_≥rs⁄Æôy
 
__NR_≥rs⁄Æôy


	)

838 
	#SYS_pùe
 
__NR_pùe


	)

839 
	#SYS_pùe2
 
__NR_pùe2


	)

840 
	#SYS_pivŸ_roŸ
 
__NR_pivŸ_roŸ


	)

841 
	#SYS_pﬁl
 
__NR_pﬁl


	)

842 
	#SYS_µﬁl
 
__NR_µﬁl


	)

843 
	#SYS_¥˘l
 
__NR_¥˘l


	)

844 
	#SYS_¥ód64
 
__NR_¥ód64


	)

845 
	#SYS_¥ódv
 
__NR_¥ódv


	)

846 
	#SYS_¥limô64
 
__NR_¥limô64


	)

847 
	#SYS_¥o˚ss_vm_ªadv
 
__NR_¥o˚ss_vm_ªadv


	)

848 
	#SYS_¥o˚ss_vm_wrôev
 
__NR_¥o˚ss_vm_wrôev


	)

849 
	#SYS_p£À˘6
 
__NR_p£À˘6


	)

850 
	#SYS_±ø˚
 
__NR_±ø˚


	)

851 
	#SYS_puçmsg
 
__NR_puçmsg


	)

852 
	#SYS_pwrôe64
 
__NR_pwrôe64


	)

853 
	#SYS_pwrôev
 
__NR_pwrôev


	)

854 
	#SYS_quŸa˘l
 
__NR_quŸa˘l


	)

855 
	#SYS_ªad
 
__NR_ªad


	)

856 
	#SYS_ªadahód
 
__NR_ªadahód


	)

857 
	#SYS_ªadlök
 
__NR_ªadlök


	)

858 
	#SYS_ªadlök©
 
__NR_ªadlök©


	)

859 
	#SYS_ªadv
 
__NR_ªadv


	)

860 
	#SYS_ªboŸ
 
__NR_ªboŸ


	)

861 
	#SYS_ªcv‰om
 
__NR_ªcv‰om


	)

862 
	#SYS_ªcvmmsg
 
__NR_ªcvmmsg


	)

863 
	#SYS_ªcvmsg
 
__NR_ªcvmsg


	)

864 
	#SYS_ªm≠_fûe_∑ges
 
__NR_ªm≠_fûe_∑ges


	)

865 
	#SYS_ªmovex©å
 
__NR_ªmovex©å


	)

866 
	#SYS_ª«me
 
__NR_ª«me


	)

867 
	#SYS_ª«mót
 
__NR_ª«mót


	)

868 
	#SYS_ªque°_key
 
__NR_ªque°_key


	)

869 
	#SYS_ª°¨t_sysˇŒ
 
__NR_ª°¨t_sysˇŒ


	)

870 
	#SYS_rmdú
 
__NR_rmdú


	)

871 
	#SYS_π_siga˘i⁄
 
__NR_π_siga˘i⁄


	)

872 
	#SYS_π_sig≥ndög
 
__NR_π_sig≥ndög


	)

873 
	#SYS_π_sig¥ocmask
 
__NR_π_sig¥ocmask


	)

874 
	#SYS_π_sigqueueöfo
 
__NR_π_sigqueueöfo


	)

875 
	#SYS_π_sigªtu∫
 
__NR_π_sigªtu∫


	)

876 
	#SYS_π_sigsu•íd
 
__NR_π_sigsu•íd


	)

877 
	#SYS_π_sigtimedwaô
 
__NR_π_sigtimedwaô


	)

878 
	#SYS_π_tgsigqueueöfo
 
__NR_π_tgsigqueueöfo


	)

879 
	#SYS_sched_gë_¥i‹ôy_max
 
__NR_sched_gë_¥i‹ôy_max


	)

880 
	#SYS_sched_gë_¥i‹ôy_mö
 
__NR_sched_gë_¥i‹ôy_mö


	)

881 
	#SYS_sched_gëafföôy
 
__NR_sched_gëafföôy


	)

882 
	#SYS_sched_gë∑øm
 
__NR_sched_gë∑øm


	)

883 
	#SYS_sched_gëscheduÀr
 
__NR_sched_gëscheduÀr


	)

884 
	#SYS_sched_º_gë_öãrvÆ
 
__NR_sched_º_gë_öãrvÆ


	)

885 
	#SYS_sched_£èfföôy
 
__NR_sched_£èfföôy


	)

886 
	#SYS_sched_£ç¨am
 
__NR_sched_£ç¨am


	)

887 
	#SYS_sched_£tscheduÀr
 
__NR_sched_£tscheduÀr


	)

888 
	#SYS_sched_yõld
 
__NR_sched_yõld


	)

889 
	#SYS_£curôy
 
__NR_£curôy


	)

890 
	#SYS_£À˘
 
__NR_£À˘


	)

891 
	#SYS_£m˘l
 
__NR_£m˘l


	)

892 
	#SYS_£mgë
 
__NR_£mgë


	)

893 
	#SYS_£m›
 
__NR_£m›


	)

894 
	#SYS_£mtimed›
 
__NR_£mtimed›


	)

895 
	#SYS_£ndfûe
 
__NR_£ndfûe


	)

896 
	#SYS_£ndmmsg
 
__NR_£ndmmsg


	)

897 
	#SYS_£ndmsg
 
__NR_£ndmsg


	)

898 
	#SYS_£ndto
 
__NR_£ndto


	)

899 
	#SYS_£t_mempﬁicy
 
__NR_£t_mempﬁicy


	)

900 
	#SYS_£t_robu°_li°
 
__NR_£t_robu°_li°


	)

901 
	#SYS_£t_tid_addªss
 
__NR_£t_tid_addªss


	)

902 
	#SYS_£tdomaö«me
 
__NR_£tdomaö«me


	)

903 
	#SYS_£tfsgid
 
__NR_£tfsgid


	)

904 
	#SYS_£tfsuid
 
__NR_£tfsuid


	)

905 
	#SYS_£tgid
 
__NR_£tgid


	)

906 
	#SYS_£tgroups
 
__NR_£tgroups


	)

907 
	#SYS_£tho°«me
 
__NR_£tho°«me


	)

908 
	#SYS_£tôimî
 
__NR_£tôimî


	)

909 
	#SYS_£äs
 
__NR_£äs


	)

910 
	#SYS_£çgid
 
__NR_£çgid


	)

911 
	#SYS_£çri‹ôy
 
__NR_£çri‹ôy


	)

912 
	#SYS_£åegid
 
__NR_£åegid


	)

913 
	#SYS_£åesgid
 
__NR_£åesgid


	)

914 
	#SYS_£åesuid
 
__NR_£åesuid


	)

915 
	#SYS_£åeuid
 
__NR_£åeuid


	)

916 
	#SYS_£ålimô
 
__NR_£ålimô


	)

917 
	#SYS_£tsid
 
__NR_£tsid


	)

918 
	#SYS_£tsock›t
 
__NR_£tsock›t


	)

919 
	#SYS_£âimeofday
 
__NR_£âimeofday


	)

920 
	#SYS_£tuid
 
__NR_£tuid


	)

921 
	#SYS_£tx©å
 
__NR_£tx©å


	)

922 
	#SYS_shm©
 
__NR_shm©


	)

923 
	#SYS_shm˘l
 
__NR_shm˘l


	)

924 
	#SYS_shmdt
 
__NR_shmdt


	)

925 
	#SYS_shmgë
 
__NR_shmgë


	)

926 
	#SYS_shutdown
 
__NR_shutdown


	)

927 
	#SYS_sigÆt°ack
 
__NR_sigÆt°ack


	)

928 
	#SYS_sig«lfd
 
__NR_sig«lfd


	)

929 
	#SYS_sig«lfd4
 
__NR_sig«lfd4


	)

930 
	#SYS_sockë
 
__NR_sockë


	)

931 
	#SYS_sockë∑ú
 
__NR_sockë∑ú


	)

932 
	#SYS_•li˚
 
__NR_•li˚


	)

933 
	#SYS_°©
 
__NR_°©


	)

934 
	#SYS_°©fs
 
__NR_°©fs


	)

935 
	#SYS_sw≠off
 
__NR_sw≠off


	)

936 
	#SYS_sw≠⁄
 
__NR_sw≠⁄


	)

937 
	#SYS_symlök
 
__NR_symlök


	)

938 
	#SYS_symlök©
 
__NR_symlök©


	)

939 
	#SYS_sync
 
__NR_sync


	)

940 
	#SYS_sync_fûe_ønge
 
__NR_sync_fûe_ønge


	)

941 
	#SYS_syncfs
 
__NR_syncfs


	)

942 
	#SYS_sysfs
 
__NR_sysfs


	)

943 
	#SYS_sysöfo
 
__NR_sysöfo


	)

944 
	#SYS_sy¶og
 
__NR_sy¶og


	)

945 
	#SYS_ãe
 
__NR_ãe


	)

946 
	#SYS_tgkûl
 
__NR_tgkûl


	)

947 
	#SYS_time
 
__NR_time


	)

948 
	#SYS_timî_¸óã
 
__NR_timî_¸óã


	)

949 
	#SYS_timî_dñëe
 
__NR_timî_dñëe


	)

950 
	#SYS_timî_gëovîrun
 
__NR_timî_gëovîrun


	)

951 
	#SYS_timî_gëtime
 
__NR_timî_gëtime


	)

952 
	#SYS_timî_£âime
 
__NR_timî_£âime


	)

953 
	#SYS_timîfd_¸óã
 
__NR_timîfd_¸óã


	)

954 
	#SYS_timîfd_gëtime
 
__NR_timîfd_gëtime


	)

955 
	#SYS_timîfd_£âime
 
__NR_timîfd_£âime


	)

956 
	#SYS_times
 
__NR_times


	)

957 
	#SYS_tkûl
 
__NR_tkûl


	)

958 
	#SYS_åunˇã
 
__NR_åunˇã


	)

959 
	#SYS_tuxˇŒ
 
__NR_tuxˇŒ


	)

960 
	#SYS_umask
 
__NR_umask


	)

961 
	#SYS_umou¡2
 
__NR_umou¡2


	)

962 
	#SYS_u«me
 
__NR_u«me


	)

963 
	#SYS_u∆ök
 
__NR_u∆ök


	)

964 
	#SYS_u∆ök©
 
__NR_u∆ök©


	)

965 
	#SYS_unsh¨e
 
__NR_unsh¨e


	)

966 
	#SYS_u°©
 
__NR_u°©


	)

967 
	#SYS_utime
 
__NR_utime


	)

968 
	#SYS_utimíßt
 
__NR_utimíßt


	)

969 
	#SYS_utimes
 
__NR_utimes


	)

970 
	#SYS_vf‹k
 
__NR_vf‹k


	)

971 
	#SYS_vh™gup
 
__NR_vh™gup


	)

972 
	#SYS_vm•li˚
 
__NR_vm•li˚


	)

973 
	#SYS_waô4
 
__NR_waô4


	)

974 
	#SYS_waôid
 
__NR_waôid


	)

975 
	#SYS_wrôe
 
__NR_wrôe


	)

976 
	#SYS_wrôev
 
__NR_wrôev


	)

	@/usr/include/bits/sysctl.h

18 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


	@/usr/include/bits/time.h

23 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


24 #i‚de‡
_STRUCT_TIMEVAL


25 
	#_STRUCT_TIMEVAL
 1

	)

26 
	~<bôs/ty≥s.h
>

30 
	stimevÆ


32 
__time_t
 
	mtv_£c
;

33 
__su£c⁄ds_t
 
	mtv_u£c
;

38 #i‚de‡
__√ed_timevÆ


39 #i‚de‡
_BITS_TIME_H


40 
	#_BITS_TIME_H
 1

	)

48 
	#CLOCKS_PER_SEC
 1000000l

	)

50 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

51 && !
deföed
 
	g__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

82 
	#TIMER_ABSTIME
 1

	)

85 #ifde‡
__USE_GNU


86 
	~<bôs/timex.h
>

88 
__BEGIN_DECLS


91 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

93 
__END_DECLS


99 #unde‡
__√ed_timevÆ


	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

45 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

54 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

60 
	m__vÆ
[2];

61 } 
	t__quad_t
;

64 
__u_l⁄g
 
	m__vÆ
[2];

65 } 
	t__u_quad_t
;

98 
	#__S16_TYPE
 

	)

99 
	#__U16_TYPE
 

	)

100 
	#__S32_TYPE
 

	)

101 
	#__U32_TYPE
 

	)

102 
	#__SLONGWORD_TYPE
 

	)

103 
	#__ULONGWORD_TYPE
 

	)

104 #i‡
__WORDSIZE
 == 32

105 
	#__SQUAD_TYPE
 
__quad_t


	)

106 
	#__UQUAD_TYPE
 
__u_quad_t


	)

107 
	#__SWORD_TYPE
 

	)

108 
	#__UWORD_TYPE
 

	)

109 
	#__SLONG32_TYPE
 

	)

110 
	#__ULONG32_TYPE
 

	)

111 
	#__S64_TYPE
 
__quad_t


	)

112 
	#__U64_TYPE
 
__u_quad_t


	)

115 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

116 #ñi‡
__WORDSIZE
 == 64

117 
	t__SQUAD_TYPE
 

	)

118 
	t__UQUAD_TYPE
 

	)

119 
	t__SWORD_TYPE
 

	)

120 
	t__UWORD_TYPE
 

	)

121 
	t__SLONG32_TYPE
 

	)

122 
	t__ULONG32_TYPE
 

	)

123 
	t__S64_TYPE
 

	)

124 
	t__U64_TYPE
 

	)

126 
	t__STD_TYPE
 

	)

130 
	~<bôs/ty≥sizes.h
>

133 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

134 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

135 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

136 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

137 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

138 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

139 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

140 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

141 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

142 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

143 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

144 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

145 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

146 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

147 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

148 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

149 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

150 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

152 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

153 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

156 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

159 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

162 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

167 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

168 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

171 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

172 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

175 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

176 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

179 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

181 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

186 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

190 
__off64_t
 
	t__loff_t
;

191 
__quad_t
 *
	t__qaddr_t
;

192 *
	t__ˇddr_t
;

195 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

198 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

201 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

24 
size_t
 
__buÊí
Ë
__wur
;

25 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

26 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

27 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

29 
size_t
 
__buÊí
), 
__ªad_chk
)

30 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

33 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


34 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

39  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

41 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

42  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

44  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

45 
	}
}

47 #ifde‡
__USE_UNIX98


48 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

49 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

50 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

52 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

53 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

54 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

55 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

56 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

57 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

61 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

63 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

64 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

65 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

66 
__¥ód64_chk
)

67 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

70 #i‚de‡
__USE_FILE_OFFSET64


71 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


72 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

76 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

77  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

79 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

80  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

81 
	`__bos0
 (
__buf
));

83  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

84 
	}
}

86 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


87 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

89 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

91 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

92  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

94 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

95  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

96 
	`__bos0
 (
__buf
));

99  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

100 
	}
}

103 #ifde‡
__USE_LARGEFILE64


104 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


105 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

107 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

109 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

110  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

112 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

113  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

114 
	`__bos0
 (
__buf
));

117  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

118 
	}
}

122 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


123 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

124 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

125 
size_t
 
__buÊí
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

127 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

128 (c⁄° *
__ª°ri˘
 
__∑th
,

129 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

130 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

131 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

132 (c⁄° *
__ª°ri˘
 
__∑th
,

133 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

134 
size_t
 
__buÊí
), 
__ªadlök_chk
)

135 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

138 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


139 
	`__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

140 
size_t
 
__Àn
))

142 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

144 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

145  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

147 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

148  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

150  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

151 
	}
}

154 #ifde‡
__USE_ATFILE


155 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

156 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

157 
size_t
 
__buÊí
)

158 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

159 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

160 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

161 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

162 
ªadlök©
)

163 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

164 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

165 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

167 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

168 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

172 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


173 
	`__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

176 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

178 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

179  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

181 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

182  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

183 
	`__bos
 (
__buf
));

185  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

186 
	}
}

189 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

190 
__THROW
 
__wur
;

191 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

192 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

193 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

194 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

195 
__gëcwd_chk
)

196 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

199 
__f‹tify_fun˘i⁄
 
__wur
 *

200 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

202 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

204 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

205  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

207 i‡(
__size
 > 
	`__bos
 (
__buf
))

208  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

210  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

211 
	}
}

213 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


214 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

215 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

216 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

217 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

220 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

221 
	`__NTH
 (
	$gëwd
 (*
__buf
))

223 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

224  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

225  
	`__gëwd_w¨n
 (
__buf
);

226 
	}
}

229 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

230 
size_t
 
__buÊí
Ë
__THROW
;

231 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

232 
size_t
 
__Àn
), 
c⁄f°r
);

233 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

234 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

235 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

236 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

239 
__f‹tify_fun˘i⁄
 
size_t


240 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

242 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

244 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

245  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

247 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

248  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

250  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

251 
	}
}

254 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

255 
__THROW
 
__wur
;

256 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

257 
gëgroups
Ë
__wur
;

258 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

259 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

260 
__gëgroups_chk
)

261 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

264 
__f‹tify_fun˘i⁄
 

265 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

267 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

269 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

270  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

272 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

273  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

275  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

276 
	}
}

279 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

280 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

281 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

282 
size_t
 
__buÊí
), 
ây«me_r
)

283 
	`__n⁄nuŒ
 ((2));

284 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

285 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

286 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

287 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

290 
__f‹tify_fun˘i⁄
 

291 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

293 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

295 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

296  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

298 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

299  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

301  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

302 
	}
}

305 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


306 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

307 
	`__n⁄nuŒ
 ((1));

308 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

309 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

310 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

311 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

312 
__gëlogö_r_chk
)

313 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

316 
__f‹tify_fun˘i⁄
 

317 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

319 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

321 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

322  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

324 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

325  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

327  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

328 
	}
}

332 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


333 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

336 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

337 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

338 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

339 
__gëho°«me_chk
)

340 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

343 
__f‹tify_fun˘i⁄
 

344 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

346 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

349  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

351 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

352  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

354  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

355 
	}
}

359 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

360 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

362 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

363 
size_t
 
__buÊí
),

364 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

365 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

366 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

367 
__gëdomaö«me_chk
)

368 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

372 
__f‹tify_fun˘i⁄
 

373 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

375 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

377 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

378  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

380 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

381  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

383  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

384 
	}
}

	@/usr/include/bits/utsname.h

18 #i‚de‡
_SYS_UTSNAME_H


23 
	#_UTSNAME_LENGTH
 65

	)

28 
	#_UTSNAME_DOMAIN_LENGTH
 
_UTSNAME_LENGTH


	)

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 
	#WSTOPPED
 2

	)

30 
	#WEXITED
 4

	)

31 
	#WCONTINUED
 8

	)

32 
	#WNOWAIT
 0x01000000

	)

34 
	#__WNOTHREAD
 0x20000000

	)

36 
	#__WALL
 0x40000000

	)

37 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

62 #ifdef 
__USE_BSD


64 
	~<ídün.h
>

66 
	uwaô


68 
	mw_°©us
;

71 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
	m__w_ãrmsig
:7;

73 
	m__w_c‹edump
:1;

74 
	m__w_ªtcode
:8;

77 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


79 
	m__w_ªtcode
:8;

80 
	m__w_c‹edump
:1;

81 
	m__w_ãrmsig
:7;

83 } 
	m__waô_ãrmö©ed
;

86 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


87 
	m__w_°›vÆ
:8;

88 
	m__w_°›sig
:8;

91 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


93 
	m__w_°›sig
:8;

94 
	m__w_°›vÆ
:8;

96 } 
	m__waô_°›≥d
;

99 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

100 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

101 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

102 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

103 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar-ldbl.h

19 #i‚de‡
_WCHAR_H


23 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


24 
__BEGIN_NAMESPACE_C99


25 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

26 
__LDBL_REDIR_DECL
 (
w¥ötf
);

27 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

28 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
	g__REDIRECT
 \

33 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

38 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

39 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

42 
__END_NAMESPACE_C99


45 #ifde‡
__USE_ISOC99


46 
__BEGIN_NAMESPACE_C99


47 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

48 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

49 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

50 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

51 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

54 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

55 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

58 
__END_NAMESPACE_C99


61 #ifde‡
__USE_GNU


62 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

65 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


66 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

67 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

22 
	~<bôs/w‹dsize.h
>

24 #i‡
__WORDSIZE
 == 64

25 
	#__WCHAR_MIN
 (-2147483647 - 1)

	)

26 
	#__WCHAR_MAX
 (2147483647)

	)

28 
	#__WCHAR_MIN
 (-2147483647»- 1l)

	)

29 
	#__WCHAR_MAX
 (2147483647l)

	)

	@/usr/include/bits/wchar2.h

19 #i‚de‡
_WCHAR_H


24 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

25 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

26 
size_t
 
__ns1
Ë
__THROW
;

27 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

28 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

29 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

30 
wmem˝y
);

31 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

32 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

33 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

34 
size_t
 
__ns1
), 
__wmem˝y_chk
)

35 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

38 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

39 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

40 
size_t
 
__n
))

42 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

44 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

45  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

46 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

48 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

49  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

50 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

52  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

53 
	}
}

56 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

57 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

58 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

59 c⁄° 
wch¨_t
 *
__s2
,

60 
size_t
 
__n
), 
wmemmove
);

61 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

62 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

63 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

64 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

67 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

68 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
))

70 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

72 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

73  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

74 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

76 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

77  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

78 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

80  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

81 
	}
}

84 #ifde‡
__USE_GNU


85 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

86 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

87 
size_t
 
__ns1
Ë
__THROW
;

88 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

89 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

90 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
,

91 
size_t
 
__n
), 
wmemp˝y
);

92 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

93 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

94 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

95 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

96 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

99 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

100 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

101 
size_t
 
__n
))

103 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

105 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

106  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

107 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

109 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

110  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

111 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

113  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

114 
	}
}

118 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

119 
size_t
 
__ns
Ë
__THROW
;

120 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

121 
size_t
 
__n
), 
wmem£t
);

122 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

123 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

124 
size_t
 
__ns
), 
__wmem£t_chk
)

125 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

128 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

129 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

131 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

133 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

134  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

136 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

137  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

138 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

140  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

141 
	}
}

144 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

146 
size_t
 
__n
Ë
__THROW
;

147 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

148 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

149 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

151 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

152 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

155  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

156  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

157 
	}
}

160 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

161 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

162 
size_t
 
__de°Àn
Ë
__THROW
;

163 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

164 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

165 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

167 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

168 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

170 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

171  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

172  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

173 
	}
}

176 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

177 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

178 
size_t
 
__de°Àn
Ë
__THROW
;

179 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

180 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

181 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

182 
size_t
 
__n
), 
wc¢˝y
);

183 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

184 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

185 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

186 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

187 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

190 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

191 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

192 
size_t
 
__n
))

194 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

196 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

197  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

198 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

199 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

200  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

201 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

203  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

204 
	}
}

207 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

208 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

209 
size_t
 
__de°Àn
Ë
__THROW
;

210 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

211 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

212 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

213 
size_t
 
__n
), 
w˝n˝y
);

214 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

215 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

216 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

217 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

218 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

221 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

222 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

223 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

264 
size_t
 
__n
))

266 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

267  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

268 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

269  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

270 
	}
}

273 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

274 
__Êag
, 
size_t
 
__s_Àn
,

275 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

276 
__THROW
 ;

278 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

279 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

280 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

281 
sw¥ötf
);

283 #ifde‡
__va_¨g_∑ck


284 
__f‹tify_fun˘i⁄
 

285 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

288 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

289  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

290 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

291 
__fmt
, 
	`__va_¨g_∑ck
 ());

292  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

293 
	}
}

294 #ñi‡!
deföed
 
__˝lu•lus


296 
	#sw¥ötf
(
s
, 
n
, ...) \

297 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

298 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

299 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

300 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

303 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

304 
__Êag
, 
size_t
 
__s_Àn
,

305 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

306 
__gnuc_va_li°
 
__¨g
)

307 
__THROW
 ;

309 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

310 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

311 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

312 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

314 
__f‹tify_fun˘i⁄
 

315 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

318 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

319  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

320 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

321  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

322 
	}
}

325 #i‡
__USE_FORTIFY_LEVEL
 > 1

327 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

328 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

329 
__w¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

331 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

332 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

333 
__gnuc_va_li°
 
__≠
);

334 
__vw¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

335 
__gnuc_va_li°
 
__≠
);

337 #ifde‡
__va_¨g_∑ck


338 
__f‹tify_fun˘i⁄
 

339 
	$w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

341  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

342 
	}
}

344 
__f‹tify_fun˘i⁄
 

345 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

347  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

348 
	`__va_¨g_∑ck
 ());

349 
	}
}

350 #ñi‡!
deföed
 
__˝lu•lus


351 
	#w¥ötf
(...) \

352 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

353 
	#fw¥ötf
(
°ªam
, ...) \

354 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

357 
__f‹tify_fun˘i⁄
 

358 
	$vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

360  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

361 
	}
}

363 
__f‹tify_fun˘i⁄
 

364 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

365 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

367  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

368 
	}
}

372 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

373 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

374 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

375 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

376 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

377 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

378 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

379 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

380 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

383 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

384 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

386 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

388 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

389  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

390 
__n
, 
__°ªam
);

392 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

393  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

394 
__n
, 
__°ªam
);

396  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

397 
	}
}

399 #ifde‡
__USE_GNU


400 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

401 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

402 
__wur
;

403 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

404 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

405 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

406 
__wur
;

407 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

408 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

409 
__FILE
 *
__ª°ri˘
 
__°ªam
),

410 
__fgëws_u∆ocked_chk
)

411 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

414 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

415 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

417 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

419 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

420  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

421 
__n
, 
__°ªam
);

423 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

424  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

425 
__n
, 
__°ªam
);

427  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

428 
	}
}

432 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

433 
mb°©e_t
 *
__ª°ri˘
 
__p
,

434 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

435 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

436 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

437 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

439 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


440 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

441 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

446 
	#__WCHAR_MB_LEN_MAX
 16

	)

447 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


450 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

451  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

452  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

453 
	}
}

456 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

457 c⁄° **
__ª°ri˘
 
__§c
,

458 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

459 
size_t
 
__d°Àn
Ë
__THROW
;

460 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

461 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

462 c⁄° **
__ª°ri˘
 
__§c
,

463 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

464 
mb§towcs
);

465 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

466 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

467 c⁄° **
__ª°ri˘
 
__§c
,

468 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

469 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

470 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

473 
__f‹tify_fun˘i⁄
 
size_t


474 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

475 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

477 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

479 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

480  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

481 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

483 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

484  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

485 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

487  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

488 
	}
}

491 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

492 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

493 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

494 
size_t
 
__d°Àn
Ë
__THROW
;

495 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

496 (*
__ª°ri˘
 
__d°
,

497 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

498 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

499 
wc§tombs
);

500 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

501 (*
__ª°ri˘
 
__d°
,

502 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

503 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

504 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

505 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

507 
__f‹tify_fun˘i⁄
 
size_t


508 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

509 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

511 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

513 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

514  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

517  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

519  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

520 
	}
}

523 #ifde‡
__USE_GNU


524 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

525 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

526 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

527 
size_t
 
__d°Àn
Ë
__THROW
;

528 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

529 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

530 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

531 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

532 
mb¢πowcs
);

533 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

534 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

535 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

536 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

537 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

538 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

541 
__f‹tify_fun˘i⁄
 
size_t


542 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

543 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

545 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

547 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

548  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

549 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

551 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

552  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

553 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

555  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

556 
	}
}

559 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

560 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

561 
size_t
 
__nwc
, size_à
__Àn
,

562 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

563 
__THROW
;

564 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

565 (*
__ª°ri˘
 
__d°
,

566 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

567 
size_t
 
__nwc
, size_à
__Àn
,

568 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

569 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

570 (*
__ª°ri˘
 
__d°
,

571 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

572 
size_t
 
__nwc
, size_à
__Àn
,

573 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

574 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

575 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

577 
__f‹tify_fun˘i⁄
 
size_t


578 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

579 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

581 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

583 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

584  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

585 
	`__bos
 (
__d°
));

587 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

588  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

589 
	`__bos
 (
__d°
));

591  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

592 
	}
}

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

9 #ifde‡
__x86_64__


10 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

12 
	#__SYSCALL_WORDSIZE
 64

	)

	@/usr/include/bits/xopen_lim.h

29 #i‚de‡
_XOPEN_LIM_H


30 
	#_XOPEN_LIM_H
 1

	)

32 
	#__√ed_IOV_MAX


	)

33 
	~<bôs/°dio_lim.h
>

65 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

70 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

73 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

76 
	#NL_MSGMAX
 
INT_MAX


	)

80 
	#NL_NMAX
 
INT_MAX


	)

83 
	#NL_SETMAX
 
INT_MAX


	)

86 
	#NL_TEXTMAX
 
INT_MAX


	)

89 
	#NZERO
 20

	)

93 #ifde‡
INT_MAX


94 #i‡
INT_MAX
 == 32767

95 
	#WORD_BIT
 16

	)

97 #i‡
INT_MAX
 == 2147483647

98 
	#WORD_BIT
 32

	)

101 
	#WORD_BIT
 64

	)

104 #ñi‡
deföed
 
__INT_MAX__


105 #i‡
__INT_MAX__
 == 32767

106 
	#WORD_BIT
 16

	)

108 #i‡
__INT_MAX__
 == 2147483647

109 
	#WORD_BIT
 32

	)

112 
	#WORD_BIT
 64

	)

116 
	#WORD_BIT
 32

	)

120 #ifde‡
LONG_MAX


121 #i‡
LONG_MAX
 == 2147483647

122 
	#LONG_BIT
 32

	)

125 
	#LONG_BIT
 64

	)

127 #ñi‡
deföed
 
__LONG_MAX__


128 #i‡
__LONG_MAX__
 == 2147483647

129 
	#LONG_BIT
 32

	)

132 
	#LONG_BIT
 64

	)

135 
	~<bôs/w‹dsize.h
>

136 #i‡
__WORDSIZE
 == 64

137 
	#LONG_BIT
 64

	)

139 
	#LONG_BIT
 32

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 #i‡
__GLIBC_HAVE_LONG_LONG


74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

81 
	#htobe16
(
x
Ë(x)

	)

82 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

83 
	#be16toh
(
x
Ë(x)

	)

84 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

86 
	#htobe32
(
x
Ë(x)

	)

87 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

88 
	#be32toh
(
x
Ë(x)

	)

89 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

91 #i‡
__GLIBC_HAVE_LONG_LONG


92 
	#htobe64
(
x
Ë(x)

	)

93 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

94 
	#be64toh
(
x
Ë(x)

	)

95 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC11


99 #unde‡
__USE_ISOC99


100 #unde‡
__USE_ISOC95


101 #unde‡
__USE_ISOCXX11


102 #unde‡
__USE_POSIX


103 #unde‡
__USE_POSIX2


104 #unde‡
__USE_POSIX199309


105 #unde‡
__USE_POSIX199506


106 #unde‡
__USE_XOPEN


107 #unde‡
__USE_XOPEN_EXTENDED


108 #unde‡
__USE_UNIX98


109 #unde‡
__USE_XOPEN2K


110 #unde‡
__USE_XOPEN2KXSI


111 #unde‡
__USE_XOPEN2K8


112 #unde‡
__USE_XOPEN2K8XSI


113 #unde‡
__USE_LARGEFILE


114 #unde‡
__USE_LARGEFILE64


115 #unde‡
__USE_FILE_OFFSET64


116 #unde‡
__USE_BSD


117 #unde‡
__USE_SVID


118 #unde‡
__USE_MISC


119 #unde‡
__USE_ATFILE


120 #unde‡
__USE_GNU


121 #unde‡
__USE_REENTRANT


122 #unde‡
__USE_FORTIFY_LEVEL


123 #unde‡
__FAVOR_BSD


124 #unde‡
__KERNEL_STRICT_NAMES


128 #i‚de‡
_LOOSE_KERNEL_NAMES


129 
	#__KERNEL_STRICT_NAMES


	)

133 
	#__USE_ANSI
 1

	)

142 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


143 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

144 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

146 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

151 #i‡
deföed
 
_BSD_SOURCE
 && \

152 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

153 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

154 
	#__FAVOR_BSD
 1

	)

158 #ifde‡
_GNU_SOURCE


159 #unde‡
_ISOC95_SOURCE


160 
	#_ISOC95_SOURCE
 1

	)

161 #unde‡
_ISOC99_SOURCE


162 
	#_ISOC99_SOURCE
 1

	)

163 #unde‡
_ISOC11_SOURCE


164 
	#_ISOC11_SOURCE
 1

	)

165 #unde‡
_POSIX_SOURCE


166 
	#_POSIX_SOURCE
 1

	)

167 #unde‡
_POSIX_C_SOURCE


168 
	#_POSIX_C_SOURCE
 200809L

	)

169 #unde‡
_XOPEN_SOURCE


170 
	#_XOPEN_SOURCE
 700

	)

171 #unde‡
_XOPEN_SOURCE_EXTENDED


172 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

173 #unde‡
_LARGEFILE64_SOURCE


174 
	#_LARGEFILE64_SOURCE
 1

	)

175 #unde‡
_BSD_SOURCE


176 
	#_BSD_SOURCE
 1

	)

177 #unde‡
_SVID_SOURCE


178 
	#_SVID_SOURCE
 1

	)

179 #unde‡
_ATFILE_SOURCE


180 
	#_ATFILE_SOURCE
 1

	)

185 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

186 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

187 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

188 
	#_BSD_SOURCE
 1

	)

189 
	#_SVID_SOURCE
 1

	)

193 #i‡(
deföed
 
_ISOC11_SOURCE
 \

194 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

195 
	#__USE_ISOC11
 1

	)

199 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

200 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

201 
	#__USE_ISOC99
 1

	)

205 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

206 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

207 
	#__USE_ISOC95
 1

	)

214 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

215 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

216 
	#__USE_ISOCXX11
 1

	)

221 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

222 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

223 
	#_POSIX_SOURCE
 1

	)

224 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

225 
	#_POSIX_C_SOURCE
 2

	)

226 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

227 
	#_POSIX_C_SOURCE
 199506L

	)

228 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

229 
	#_POSIX_C_SOURCE
 200112L

	)

231 
	#_POSIX_C_SOURCE
 200809L

	)

233 
	#__USE_POSIX_IMPLICITLY
 1

	)

236 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


237 
	#__USE_POSIX
 1

	)

240 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


241 
	#__USE_POSIX2
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

245 
	#__USE_POSIX199309
 1

	)

248 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

249 
	#__USE_POSIX199506
 1

	)

252 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

253 
	#__USE_XOPEN2K
 1

	)

254 #unde‡
__USE_ISOC95


255 
	#__USE_ISOC95
 1

	)

256 #unde‡
__USE_ISOC99


257 
	#__USE_ISOC99
 1

	)

260 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

261 
	#__USE_XOPEN2K8
 1

	)

262 #unde‡
_ATFILE_SOURCE


263 
	#_ATFILE_SOURCE
 1

	)

266 #ifdef 
_XOPEN_SOURCE


267 
	#__USE_XOPEN
 1

	)

268 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

269 
	#__USE_XOPEN_EXTENDED
 1

	)

270 
	#__USE_UNIX98
 1

	)

271 #unde‡
_LARGEFILE_SOURCE


272 
	#_LARGEFILE_SOURCE
 1

	)

273 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

274 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

275 
	#__USE_XOPEN2K8
 1

	)

276 
	#__USE_XOPEN2K8XSI
 1

	)

278 
	#__USE_XOPEN2K
 1

	)

279 
	#__USE_XOPEN2KXSI
 1

	)

280 #unde‡
__USE_ISOC95


281 
	#__USE_ISOC95
 1

	)

282 #unde‡
__USE_ISOC99


283 
	#__USE_ISOC99
 1

	)

286 #ifde‡
_XOPEN_SOURCE_EXTENDED


287 
	#__USE_XOPEN_EXTENDED
 1

	)

292 #ifde‡
_LARGEFILE_SOURCE


293 
	#__USE_LARGEFILE
 1

	)

296 #ifde‡
_LARGEFILE64_SOURCE


297 
	#__USE_LARGEFILE64
 1

	)

300 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

301 
	#__USE_FILE_OFFSET64
 1

	)

304 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


305 
	#__USE_MISC
 1

	)

308 #ifdef 
_BSD_SOURCE


309 
	#__USE_BSD
 1

	)

312 #ifdef 
_SVID_SOURCE


313 
	#__USE_SVID
 1

	)

316 #ifdef 
_ATFILE_SOURCE


317 
	#__USE_ATFILE
 1

	)

320 #ifdef 
_GNU_SOURCE


321 
	#__USE_GNU
 1

	)

324 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


325 
	#__USE_REENTRANT
 1

	)

328 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0

329 #i‡!
deföed
 
__OPTIMIZE__
 || __OPTIMIZE__ <= 0

330 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
compûög
 
wôh
 
›timiz©i⁄
 (-
O
)

331 #ñi‡!
__GNUC_PREREQ
 (4, 1)

332 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
GCC
 4.1 
‹
 
œãr


333 #ñi‡
_FORTIFY_SOURCE
 > 1

334 
	#__USE_FORTIFY_LEVEL
 2

	)

336 
	#__USE_FORTIFY_LEVEL
 1

	)

339 #i‚de‡
__USE_FORTIFY_LEVEL


340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 17

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‡
deföed
 
__GNUC__
 \

366 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

367 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

368 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

369 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

373 #i‚de‡
__ASSEMBLER__


374 #i‚de‡
_SYS_CDEFS_H


375 
	~<sys/cdefs.h
>

380 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


381 
	#__USE_LARGEFILE
 1

	)

382 
	#__USE_LARGEFILE64
 1

	)

388 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

389 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

390 && 
deföed
 
	g__exã∫_ölöe


391 
	#__USE_EXTERN_INLINES
 1

	)

399 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

20 #i‚de‡
_GETOPT_H


22 #i‚de‡
__√ed_gë›t


23 
	#_GETOPT_H
 1

	)

33 #i‡!
deföed
 
__GNU_LIBRARY__


34 
	~<˘y≥.h
>

37 #i‚de‡
__THROW


38 #i‚de‡
__GNUC_PREREQ


39 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

41 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

42 
	#__THROW
 
	`throw
 ()

	)

44 
	#__THROW


	)

48 #ifdef 
__˝lu•lus


58 *
›èrg
;

72 
›töd
;

77 
›ãº
;

81 
›t›t
;

83 #i‚de‡
__√ed_gë›t


105 
	s›ti⁄


107 c⁄° *
	g«me
;

110 
	ghas_¨g
;

111 *
	gÊag
;

112 
	gvÆ
;

117 
	#no_¨gumít
 0

	)

118 
	#ªquúed_¨gumít
 1

	)

119 
	#›ti⁄Æ_¨gumít
 2

	)

147 #ifde‡
__GNU_LIBRARY__


151 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

152 
__THROW
;

154 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

155 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


159 #ifde‡
__REDIRECT


160 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

161 c⁄° *
__sh‹t›ts
),

162 
__posix_gë›t
);

164 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

165 c⁄° *
__sh‹t›ts
Ë
__THROW
;

166 
	#gë›t
 
__posix_gë›t


	)

170 
gë›t
 ();

173 #i‚de‡
__√ed_gë›t


174 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

175 c⁄° *
__sh‹t›ts
,

176 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

177 
__THROW
;

178 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

179 c⁄° *
__sh‹t›ts
,

180 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

181 
__THROW
;

185 #ifdef 
__˝lu•lus


190 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_Âos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

36 
	#_IO_size_t
 
size_t


	)

37 
	#_IO_ssize_t
 
__ssize_t


	)

38 
	#_IO_off_t
 
__off_t


	)

39 
	#_IO_off64_t
 
__off64_t


	)

40 
	#_IO_pid_t
 
__pid_t


	)

41 
	#_IO_uid_t
 
__uid_t


	)

42 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

43 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

44 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

45 
	#_IO_va_li°
 
_G_va_li°


	)

46 
	#_IO_wöt_t
 
wöt_t


	)

49 
	#__√ed___va_li°


	)

50 
	~<°d¨g.h
>

51 #ifde‡
__GNUC_VA_LIST


52 #unde‡
_IO_va_li°


53 
	#_IO_va_li°
 
__gnuc_va_li°


	)

56 #i‚de‡
__P


57 
	~<sys/cdefs.h
>

60 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

62 #i‚de‡
EOF


63 
	#EOF
 (-1)

	)

65 #i‚de‡
NULL


66 #i‡
deföed
 
__GNUG__
 && \

67 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

68 
	#NULL
 (
__nuŒ
)

	)

70 #i‡!
deföed
(
__˝lu•lus
)

71 
	#NULL
 ((*)0)

	)

73 
	#NULL
 (0)

	)

78 
	#_IOS_INPUT
 1

	)

79 
	#_IOS_OUTPUT
 2

	)

80 
	#_IOS_ATEND
 4

	)

81 
	#_IOS_APPEND
 8

	)

82 
	#_IOS_TRUNC
 16

	)

83 
	#_IOS_NOCREATE
 32

	)

84 
	#_IOS_NOREPLACE
 64

	)

85 
	#_IOS_BIN
 128

	)

93 
	#_IO_MAGIC
 0xFBAD0000

	)

94 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

95 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

96 
	#_IO_USER_BUF
 1

	)

97 
	#_IO_UNBUFFERED
 2

	)

98 
	#_IO_NO_READS
 4

	)

99 
	#_IO_NO_WRITES
 8

	)

100 
	#_IO_EOF_SEEN
 0x10

	)

101 
	#_IO_ERR_SEEN
 0x20

	)

102 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

103 
	#_IO_LINKED
 0x80

	)

104 
	#_IO_IN_BACKUP
 0x100

	)

105 
	#_IO_LINE_BUF
 0x200

	)

106 
	#_IO_TIED_PUT_GET
 0x400

	)

107 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

108 
	#_IO_IS_APPENDING
 0x1000

	)

109 
	#_IO_IS_FILEBUF
 0x2000

	)

110 
	#_IO_BAD_SEEN
 0x4000

	)

111 
	#_IO_USER_LOCK
 0x8000

	)

113 
	#_IO_FLAGS2_MMAP
 1

	)

114 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

115 #ifde‡
_LIBC


116 
	#_IO_FLAGS2_FORTIFY
 4

	)

118 
	#_IO_FLAGS2_USER_WBUF
 8

	)

119 #ifde‡
_LIBC


120 
	#_IO_FLAGS2_SCANF_STD
 16

	)

121 
	#_IO_FLAGS2_NOCLOSE
 32

	)

122 
	#_IO_FLAGS2_CLOEXEC
 64

	)

126 
	#_IO_SKIPWS
 01

	)

127 
	#_IO_LEFT
 02

	)

128 
	#_IO_RIGHT
 04

	)

129 
	#_IO_INTERNAL
 010

	)

130 
	#_IO_DEC
 020

	)

131 
	#_IO_OCT
 040

	)

132 
	#_IO_HEX
 0100

	)

133 
	#_IO_SHOWBASE
 0200

	)

134 
	#_IO_SHOWPOINT
 0400

	)

135 
	#_IO_UPPERCASE
 01000

	)

136 
	#_IO_SHOWPOS
 02000

	)

137 
	#_IO_SCIENTIFIC
 04000

	)

138 
	#_IO_FIXED
 010000

	)

139 
	#_IO_UNITBUF
 020000

	)

140 
	#_IO_STDIO
 040000

	)

141 
	#_IO_DONT_CLOSE
 0100000

	)

142 
	#_IO_BOOLALPHA
 0200000

	)

145 
_IO_jump_t
; 
	g_IO_FILE
;

148 #ifde‡
_IO_MTSAFE_IO


149 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

150 
	~<bôs/°dio-lock.h
>

155 
	t_IO_lock_t
;

161 
	s_IO_m¨kî
 {

162 
_IO_m¨kî
 *
	m_√xt
;

163 
_IO_FILE
 *
	m_sbuf
;

167 
	m_pos
;

169 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

170 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

171 
	mpublic
:

172 
°ªamm¨kî
(
°ªambuf
 *
sb
);

173 ~
°ªamm¨kî
();

174 
ßvög
(Ë{  
	m_•os
 == -2; }

175 
dñè
(
°ªamm¨kî
&);

176 
dñè
();

181 
	e__codecvt_ªsu…


183 
	m__codecvt_ok
,

184 
	m__codecvt_∑πül
,

185 
	m__codecvt_îr‹
,

186 
	m__codecvt_noc⁄v


189 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


192 
	s_IO_codecvt


194 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

195 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

196 
	m__mb°©e_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 *,

199 c⁄° 
	mwch¨_t
 **, *,

201 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

202 
	m__mb°©e_t
 *, *,

204 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

205 
	m__mb°©e_t
 *,

207 c⁄° **, 
	mwch¨_t
 *,

208 
	mwch¨_t
 *, wchar_t **);

209 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

211 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

212 c⁄° *, c⁄° *, 
	m_IO_size_t
);

213 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

215 
_IO_ic⁄v_t
 
	m__cd_ö
;

216 
_IO_ic⁄v_t
 
	m__cd_out
;

220 
	s_IO_wide_d©a


222 
wch¨_t
 *
	m_IO_ªad_±r
;

223 
wch¨_t
 *
	m_IO_ªad_íd
;

224 
wch¨_t
 *
	m_IO_ªad_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_ba£
;

226 
wch¨_t
 *
	m_IO_wrôe_±r
;

227 
wch¨_t
 *
	m_IO_wrôe_íd
;

228 
wch¨_t
 *
	m_IO_buf_ba£
;

229 
wch¨_t
 *
	m_IO_buf_íd
;

231 
wch¨_t
 *
	m_IO_ßve_ba£
;

232 
wch¨_t
 *
	m_IO_backup_ba£
;

234 
wch¨_t
 *
	m_IO_ßve_íd
;

236 
__mb°©e_t
 
	m_IO_°©e
;

237 
__mb°©e_t
 
	m_IO_œ°_°©e
;

238 
_IO_codecvt
 
	m_codecvt
;

240 
wch¨_t
 
	m_sh‹tbuf
[1];

242 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

246 
	s_IO_FILE
 {

247 
	m_Êags
;

248 
	#_IO_fûe_Êags
 
_Êags


	)

252 * 
	m_IO_ªad_±r
;

253 * 
	m_IO_ªad_íd
;

254 * 
	m_IO_ªad_ba£
;

255 * 
	m_IO_wrôe_ba£
;

256 * 
	m_IO_wrôe_±r
;

257 * 
	m_IO_wrôe_íd
;

258 * 
	m_IO_buf_ba£
;

259 * 
	m_IO_buf_íd
;

261 *
	m_IO_ßve_ba£
;

262 *
	m_IO_backup_ba£
;

263 *
	m_IO_ßve_íd
;

265 
_IO_m¨kî
 *
	m_m¨kîs
;

267 
_IO_FILE
 *
	m_chaö
;

269 
	m_fûío
;

271 
	m_blksize
;

273 
	m_Êags2
;

275 
_IO_off_t
 
	m_ﬁd_off£t
;

277 
	#__HAVE_COLUMN


	)

279 
	m_cur_cﬁumn
;

280 sig√d 
	m_vèbÀ_off£t
;

281 
	m_sh‹tbuf
[1];

285 
_IO_lock_t
 *
	m_lock
;

286 #ifde‡
_IO_USE_OLD_IO_FILE


289 
	s_IO_FILE_com∂ëe


291 
_IO_FILE
 
	m_fûe
;

293 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

294 
_IO_off64_t
 
	m_off£t
;

295 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


297 
_IO_codecvt
 *
	m_codecvt
;

298 
_IO_wide_d©a
 *
	m_wide_d©a
;

299 
_IO_FILE
 *
	m_‰ìªs_li°
;

300 *
	m_‰ìªs_buf
;

301 
size_t
 
	m_‰ìªs_size
;

303 *
	m__∑d1
;

304 *
	m__∑d2
;

305 *
	m__∑d3
;

306 *
	m__∑d4
;

307 
size_t
 
	m__∑d5
;

309 
	m_mode
;

311 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

315 #i‚de‡
__˝lu•lus


316 
_IO_FILE
 
	t_IO_FILE
;

319 
	g_IO_FILE_∂us
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

323 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

324 #i‚de‡
_LIBC


325 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

326 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

327 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

329 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

331 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

339 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

347 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

348 
	tsize_t
 
	t__n
);

356 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

359 
	t__io_˛o£_‚
 (*
	t__cookõ
);

362 #ifde‡
_GNU_SOURCE


364 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

365 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

366 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

367 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

372 
__io_ªad_‚
 *
	mªad
;

373 
__io_wrôe_‚
 *
	mwrôe
;

374 
__io_£ek_‚
 *
	m£ek
;

375 
__io_˛o£_‚
 *
	m˛o£
;

376 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

377 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

379 
	g_IO_cookõ_fûe
;

382 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

383 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

387 #ifde‡
__˝lu•lus


391 
__undîÊow
 (
_IO_FILE
 *);

392 
__uÊow
 (
_IO_FILE
 *);

393 
__ovîÊow
 (
_IO_FILE
 *, );

394 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


395 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

397 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

400 #i‡ 
__GNUC__
 >= 3

401 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

403 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

406 
	#_IO_gëc_u∆ocked
(
_Â
) \

407 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

408 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

409 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

410 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

411 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

412 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

413 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

415 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

416 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

418 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


419 
	#_IO_gëwc_u∆ocked
(
_Â
) \

420 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

421 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

422 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

423 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

424 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

425 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

426 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

427 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

428 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

429 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

432 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

433 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

435 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

436 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

437 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

438 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

440 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

443 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

444 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

446 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

448 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

450 #ifde‡
_IO_MTSAFE_IO


451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
) \

453 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

454 
	#_IO_fu∆ockfûe
(
_Â
) \

455 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

457 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

458 
	#_IO_Êockfûe
(
_Â
Ë

	)

459 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

460 
	#_IO_·rylockfûe
(
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

462 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

465 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

466 
_IO_va_li°
, *
__ª°ri˘
);

467 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

468 
_IO_va_li°
);

469 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

470 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

472 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

473 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

475 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

477 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


478 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

479 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

480 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

481 #i‡
__GNUC__
 >= 2

484 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


485 
	~<shlib-com∑t.h
>

486 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

487 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

488 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

489 c⁄° 
_IO_°dö_u£d
;

490 
wók_exã∫
 (
_IO_°dö_u£d
);

493 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


494 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

498 
	#_IO_fwide
(
__Â
, 
__mode
) \

499 ({ 
__ªsu…
 = (
__mode
); \

500 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

502 i‡((
__Â
)->
_mode
 == 0) \

504 (
__Â
)->
_mode
 = -1; \

505 
__ªsu…
 = (
__Â
)->
_mode
; \

507 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

508 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

510 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

511 
__ªsu…
; })

	)

514 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

515 
_IO_va_li°
, *
__ª°ri˘
);

516 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

517 
_IO_va_li°
);

518 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

519 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

522 #ifde‡
__LDBL_COMPAT


523 
	~<bôs/libio-ldbl.h
>

526 #ifde‡
__˝lu•lus


	@/usr/include/linux/kernel.h

1 #i‚de‡
_LINUX_KERNEL_H


2 
	#_LINUX_KERNEL_H


	)

4 
	~<löux/sysöfo.h
>

9 
	#__ALIGN_KERNEL
(
x
, 
a
Ë
	`__ALIGN_KERNEL_MASK
(x, (
	`ty≥of
(x))◊Ë- 1)

	)

10 
	#__ALIGN_KERNEL_MASK
(
x
, 
mask
Ë(((xË+ (mask)Ë& ~(mask))

	)

	@/usr/include/linux/sysctl.h

22 #i‚de‡
_LINUX_SYSCTL_H


23 
	#_LINUX_SYSCTL_H


	)

25 
	~<löux/kî√l.h
>

26 
	~<löux/ty≥s.h
>

29 
	gcom∂ëi⁄
;

31 
	#CTL_MAXNAME
 10

	)

36 
	s__sys˘l_¨gs
 {

37 *
	m«me
;

38 
	m∆í
;

39 *
	mﬁdvÆ
;

40 
size_t
 *
	mﬁdÀ≈
;

41 *
	m√wvÆ
;

42 
size_t
 
	m√wÀn
;

43 
	m__unu£d
[4];

52 
	mCTL_KERN
=1,

53 
	mCTL_VM
=2,

54 
	mCTL_NET
=3,

55 
	mCTL_PROC
=4,

56 
	mCTL_FS
=5,

57 
	mCTL_DEBUG
=6,

58 
	mCTL_DEV
=7,

59 
	mCTL_BUS
=8,

60 
	mCTL_ABI
=9,

61 
	mCTL_CPU
=10,

62 
	mCTL_ARLAN
=254,

63 
	mCTL_S390DBF
=5677,

64 
	mCTL_SUNRPC
=7249,

65 
	mCTL_PM
=9899,

66 
	mCTL_FRV
=9898,

72 
	mCTL_BUS_ISA
=1

78 
	mINOTIFY_MAX_USER_INSTANCES
=1,

79 
	mINOTIFY_MAX_USER_WATCHES
=2,

80 
	mINOTIFY_MAX_QUEUED_EVENTS
=3

86 
	mKERN_OSTYPE
=1,

87 
	mKERN_OSRELEASE
=2,

88 
	mKERN_OSREV
=3,

89 
	mKERN_VERSION
=4,

90 
	mKERN_SECUREMASK
=5,

91 
	mKERN_PROF
=6,

92 
	mKERN_NODENAME
=7,

93 
	mKERN_DOMAINNAME
=8,

95 
	mKERN_PANIC
=15,

96 
	mKERN_REALROOTDEV
=16,

98 
	mKERN_SPARC_REBOOT
=21,

99 
	mKERN_CTLALTDEL
=22,

100 
	mKERN_PRINTK
=23,

101 
	mKERN_NAMETRANS
=24,

102 
	mKERN_PPC_HTABRECLAIM
=25,

103 
	mKERN_PPC_ZEROPAGED
=26,

104 
	mKERN_PPC_POWERSAVE_NAP
=27,

105 
	mKERN_MODPROBE
=28,

106 
	mKERN_SG_BIG_BUFF
=29,

107 
	mKERN_ACCT
=30,

108 
	mKERN_PPC_L2CR
=31,

110 
	mKERN_RTSIGNR
=32,

111 
	mKERN_RTSIGMAX
=33,

113 
	mKERN_SHMMAX
=34,

114 
	mKERN_MSGMAX
=35,

115 
	mKERN_MSGMNB
=36,

116 
	mKERN_MSGPOOL
=37,

117 
	mKERN_SYSRQ
=38,

118 
	mKERN_MAX_THREADS
=39,

119 
	mKERN_RANDOM
=40,

120 
	mKERN_SHMALL
=41,

121 
	mKERN_MSGMNI
=42,

122 
	mKERN_SEM
=43,

123 
	mKERN_SPARC_STOP_A
=44,

124 
	mKERN_SHMMNI
=45,

125 
	mKERN_OVERFLOWUID
=46,

126 
	mKERN_OVERFLOWGID
=47,

127 
	mKERN_SHMPATH
=48,

128 
	mKERN_HOTPLUG
=49,

129 
	mKERN_IEEE_EMULATION_WARNINGS
=50,

130 
	mKERN_S390_USER_DEBUG_LOGGING
=51,

131 
	mKERN_CORE_USES_PID
=52,

132 
	mKERN_TAINTED
=53,

133 
	mKERN_CADPID
=54,

134 
	mKERN_PIDMAX
=55,

135 
	mKERN_CORE_PATTERN
=56,

136 
	mKERN_PANIC_ON_OOPS
=57,

137 
	mKERN_HPPA_PWRSW
=58,

138 
	mKERN_HPPA_UNALIGNED
=59,

139 
	mKERN_PRINTK_RATELIMIT
=60,

140 
	mKERN_PRINTK_RATELIMIT_BURST
=61,

141 
	mKERN_PTY
=62,

142 
	mKERN_NGROUPS_MAX
=63,

143 
	mKERN_SPARC_SCONS_PWROFF
=64,

144 
	mKERN_HZ_TIMER
=65,

145 
	mKERN_UNKNOWN_NMI_PANIC
=66,

146 
	mKERN_BOOTLOADER_TYPE
=67,

147 
	mKERN_RANDOMIZE
=68,

148 
	mKERN_SETUID_DUMPABLE
=69,

149 
	mKERN_SPIN_RETRY
=70,

150 
	mKERN_ACPI_VIDEO_FLAGS
=71,

151 
	mKERN_IA64_UNALIGNED
=72,

152 
	mKERN_COMPAT_LOG
=73,

153 
	mKERN_MAX_LOCK_DEPTH
=74,

154 
	mKERN_NMI_WATCHDOG
=75,

155 
	mKERN_PANIC_ON_NMI
=76,

163 
	mVM_UNUSED1
=1,

164 
	mVM_UNUSED2
=2,

165 
	mVM_UNUSED3
=3,

166 
	mVM_UNUSED4
=4,

167 
	mVM_OVERCOMMIT_MEMORY
=5,

168 
	mVM_UNUSED5
=6,

169 
	mVM_UNUSED7
=7,

170 
	mVM_UNUSED8
=8,

171 
	mVM_UNUSED9
=9,

172 
	mVM_PAGE_CLUSTER
=10,

173 
	mVM_DIRTY_BACKGROUND
=11,

174 
	mVM_DIRTY_RATIO
=12,

175 
	mVM_DIRTY_WB_CS
=13,

176 
	mVM_DIRTY_EXPIRE_CS
=14,

177 
	mVM_NR_PDFLUSH_THREADS
=15,

178 
	mVM_OVERCOMMIT_RATIO
=16,

179 
	mVM_PAGEBUF
=17,

180 
	mVM_HUGETLB_PAGES
=18,

181 
	mVM_SWAPPINESS
=19,

182 
	mVM_LOWMEM_RESERVE_RATIO
=20,

183 
	mVM_MIN_FREE_KBYTES
=21,

184 
	mVM_MAX_MAP_COUNT
=22,

185 
	mVM_LAPTOP_MODE
=23,

186 
	mVM_BLOCK_DUMP
=24,

187 
	mVM_HUGETLB_GROUP
=25,

188 
	mVM_VFS_CACHE_PRESSURE
=26,

189 
	mVM_LEGACY_VA_LAYOUT
=27,

190 
	mVM_SWAP_TOKEN_TIMEOUT
=28,

191 
	mVM_DROP_PAGECACHE
=29,

192 
	mVM_PERCPU_PAGELIST_FRACTION
=30,

193 
	mVM_ZONE_RECLAIM_MODE
=31,

194 
	mVM_MIN_UNMAPPED
=32,

195 
	mVM_PANIC_ON_OOM
=33,

196 
	mVM_VDSO_ENABLED
=34,

197 
	mVM_MIN_SLAB
=35,

204 
	mNET_CORE
=1,

205 
	mNET_ETHER
=2,

206 
	mNET_802
=3,

207 
	mNET_UNIX
=4,

208 
	mNET_IPV4
=5,

209 
	mNET_IPX
=6,

210 
	mNET_ATALK
=7,

211 
	mNET_NETROM
=8,

212 
	mNET_AX25
=9,

213 
	mNET_BRIDGE
=10,

214 
	mNET_ROSE
=11,

215 
	mNET_IPV6
=12,

216 
	mNET_X25
=13,

217 
	mNET_TR
=14,

218 
	mNET_DECNET
=15,

219 
	mNET_ECONET
=16,

220 
	mNET_SCTP
=17,

221 
	mNET_LLC
=18,

222 
	mNET_NETFILTER
=19,

223 
	mNET_DCCP
=20,

224 
	mNET_IRDA
=412,

230 
	mRANDOM_POOLSIZE
=1,

231 
	mRANDOM_ENTROPY_COUNT
=2,

232 
	mRANDOM_READ_THRESH
=3,

233 
	mRANDOM_WRITE_THRESH
=4,

234 
	mRANDOM_BOOT_ID
=5,

235 
	mRANDOM_UUID
=6

241 
	mPTY_MAX
=1,

242 
	mPTY_NR
=2

248 
	mBUS_ISA_MEM_BASE
=1,

249 
	mBUS_ISA_PORT_BASE
=2,

250 
	mBUS_ISA_PORT_SHIFT
=3

256 
	mNET_CORE_WMEM_MAX
=1,

257 
	mNET_CORE_RMEM_MAX
=2,

258 
	mNET_CORE_WMEM_DEFAULT
=3,

259 
	mNET_CORE_RMEM_DEFAULT
=4,

261 
	mNET_CORE_MAX_BACKLOG
=6,

262 
	mNET_CORE_FASTROUTE
=7,

263 
	mNET_CORE_MSG_COST
=8,

264 
	mNET_CORE_MSG_BURST
=9,

265 
	mNET_CORE_OPTMEM_MAX
=10,

266 
	mNET_CORE_HOT_LIST_LENGTH
=11,

267 
	mNET_CORE_DIVERT_VERSION
=12,

268 
	mNET_CORE_NO_CONG_THRESH
=13,

269 
	mNET_CORE_NO_CONG
=14,

270 
	mNET_CORE_LO_CONG
=15,

271 
	mNET_CORE_MOD_CONG
=16,

272 
	mNET_CORE_DEV_WEIGHT
=17,

273 
	mNET_CORE_SOMAXCONN
=18,

274 
	mNET_CORE_BUDGET
=19,

275 
	mNET_CORE_AEVENT_ETIME
=20,

276 
	mNET_CORE_AEVENT_RSEQTH
=21,

277 
	mNET_CORE_WARNINGS
=22,

288 
	mNET_UNIX_DESTROY_DELAY
=1,

289 
	mNET_UNIX_DELETE_DELAY
=2,

290 
	mNET_UNIX_MAX_DGRAM_QLEN
=3,

296 
	mNET_NF_CONNTRACK_MAX
=1,

297 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_SYN_SENT
=2,

298 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_SYN_RECV
=3,

299 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_ESTABLISHED
=4,

300 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_FIN_WAIT
=5,

301 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_CLOSE_WAIT
=6,

302 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_LAST_ACK
=7,

303 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_TIME_WAIT
=8,

304 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_CLOSE
=9,

305 
	mNET_NF_CONNTRACK_UDP_TIMEOUT
=10,

306 
	mNET_NF_CONNTRACK_UDP_TIMEOUT_STREAM
=11,

307 
	mNET_NF_CONNTRACK_ICMP_TIMEOUT
=12,

308 
	mNET_NF_CONNTRACK_GENERIC_TIMEOUT
=13,

309 
	mNET_NF_CONNTRACK_BUCKETS
=14,

310 
	mNET_NF_CONNTRACK_LOG_INVALID
=15,

311 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_MAX_RETRANS
=16,

312 
	mNET_NF_CONNTRACK_TCP_LOOSE
=17,

313 
	mNET_NF_CONNTRACK_TCP_BE_LIBERAL
=18,

314 
	mNET_NF_CONNTRACK_TCP_MAX_RETRANS
=19,

315 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_CLOSED
=20,

316 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_WAIT
=21,

317 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_ECHOED
=22,

318 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_ESTABLISHED
=23,

319 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_SENT
=24,

320 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_RECD
=25,

321 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_ACK_SENT
=26,

322 
	mNET_NF_CONNTRACK_COUNT
=27,

323 
	mNET_NF_CONNTRACK_ICMPV6_TIMEOUT
=28,

324 
	mNET_NF_CONNTRACK_FRAG6_TIMEOUT
=29,

325 
	mNET_NF_CONNTRACK_FRAG6_LOW_THRESH
=30,

326 
	mNET_NF_CONNTRACK_FRAG6_HIGH_THRESH
=31,

327 
	mNET_NF_CONNTRACK_CHECKSUM
=32,

334 
	mNET_IPV4_FORWARD
=8,

335 
	mNET_IPV4_DYNADDR
=9,

337 
	mNET_IPV4_CONF
=16,

338 
	mNET_IPV4_NEIGH
=17,

339 
	mNET_IPV4_ROUTE
=18,

340 
	mNET_IPV4_FIB_HASH
=19,

341 
	mNET_IPV4_NETFILTER
=20,

343 
	mNET_IPV4_TCP_TIMESTAMPS
=33,

344 
	mNET_IPV4_TCP_WINDOW_SCALING
=34,

345 
	mNET_IPV4_TCP_SACK
=35,

346 
	mNET_IPV4_TCP_RETRANS_COLLAPSE
=36,

347 
	mNET_IPV4_DEFAULT_TTL
=37,

348 
	mNET_IPV4_AUTOCONFIG
=38,

349 
	mNET_IPV4_NO_PMTU_DISC
=39,

350 
	mNET_IPV4_TCP_SYN_RETRIES
=40,

351 
	mNET_IPV4_IPFRAG_HIGH_THRESH
=41,

352 
	mNET_IPV4_IPFRAG_LOW_THRESH
=42,

353 
	mNET_IPV4_IPFRAG_TIME
=43,

354 
	mNET_IPV4_TCP_MAX_KA_PROBES
=44,

355 
	mNET_IPV4_TCP_KEEPALIVE_TIME
=45,

356 
	mNET_IPV4_TCP_KEEPALIVE_PROBES
=46,

357 
	mNET_IPV4_TCP_RETRIES1
=47,

358 
	mNET_IPV4_TCP_RETRIES2
=48,

359 
	mNET_IPV4_TCP_FIN_TIMEOUT
=49,

360 
	mNET_IPV4_IP_MASQ_DEBUG
=50,

361 
	mNET_TCP_SYNCOOKIES
=51,

362 
	mNET_TCP_STDURG
=52,

363 
	mNET_TCP_RFC1337
=53,

364 
	mNET_TCP_SYN_TAILDROP
=54,

365 
	mNET_TCP_MAX_SYN_BACKLOG
=55,

366 
	mNET_IPV4_LOCAL_PORT_RANGE
=56,

367 
	mNET_IPV4_ICMP_ECHO_IGNORE_ALL
=57,

368 
	mNET_IPV4_ICMP_ECHO_IGNORE_BROADCASTS
=58,

369 
	mNET_IPV4_ICMP_SOURCEQUENCH_RATE
=59,

370 
	mNET_IPV4_ICMP_DESTUNREACH_RATE
=60,

371 
	mNET_IPV4_ICMP_TIMEEXCEED_RATE
=61,

372 
	mNET_IPV4_ICMP_PARAMPROB_RATE
=62,

373 
	mNET_IPV4_ICMP_ECHOREPLY_RATE
=63,

374 
	mNET_IPV4_ICMP_IGNORE_BOGUS_ERROR_RESPONSES
=64,

375 
	mNET_IPV4_IGMP_MAX_MEMBERSHIPS
=65,

376 
	mNET_TCP_TW_RECYCLE
=66,

377 
	mNET_IPV4_ALWAYS_DEFRAG
=67,

378 
	mNET_IPV4_TCP_KEEPALIVE_INTVL
=68,

379 
	mNET_IPV4_INET_PEER_THRESHOLD
=69,

380 
	mNET_IPV4_INET_PEER_MINTTL
=70,

381 
	mNET_IPV4_INET_PEER_MAXTTL
=71,

382 
	mNET_IPV4_INET_PEER_GC_MINTIME
=72,

383 
	mNET_IPV4_INET_PEER_GC_MAXTIME
=73,

384 
	mNET_TCP_ORPHAN_RETRIES
=74,

385 
	mNET_TCP_ABORT_ON_OVERFLOW
=75,

386 
	mNET_TCP_SYNACK_RETRIES
=76,

387 
	mNET_TCP_MAX_ORPHANS
=77,

388 
	mNET_TCP_MAX_TW_BUCKETS
=78,

389 
	mNET_TCP_FACK
=79,

390 
	mNET_TCP_REORDERING
=80,

391 
	mNET_TCP_ECN
=81,

392 
	mNET_TCP_DSACK
=82,

393 
	mNET_TCP_MEM
=83,

394 
	mNET_TCP_WMEM
=84,

395 
	mNET_TCP_RMEM
=85,

396 
	mNET_TCP_APP_WIN
=86,

397 
	mNET_TCP_ADV_WIN_SCALE
=87,

398 
	mNET_IPV4_NONLOCAL_BIND
=88,

399 
	mNET_IPV4_ICMP_RATELIMIT
=89,

400 
	mNET_IPV4_ICMP_RATEMASK
=90,

401 
	mNET_TCP_TW_REUSE
=91,

402 
	mNET_TCP_FRTO
=92,

403 
	mNET_TCP_LOW_LATENCY
=93,

404 
	mNET_IPV4_IPFRAG_SECRET_INTERVAL
=94,

405 
	mNET_IPV4_IGMP_MAX_MSF
=96,

406 
	mNET_TCP_NO_METRICS_SAVE
=97,

407 
	mNET_TCP_DEFAULT_WIN_SCALE
=105,

408 
	mNET_TCP_MODERATE_RCVBUF
=106,

409 
	mNET_TCP_TSO_WIN_DIVISOR
=107,

410 
	mNET_TCP_BIC_BETA
=108,

411 
	mNET_IPV4_ICMP_ERRORS_USE_INBOUND_IFADDR
=109,

412 
	mNET_TCP_CONG_CONTROL
=110,

413 
	mNET_TCP_ABC
=111,

414 
	mNET_IPV4_IPFRAG_MAX_DIST
=112,

415 
	mNET_TCP_MTU_PROBING
=113,

416 
	mNET_TCP_BASE_MSS
=114,

417 
	mNET_IPV4_TCP_WORKAROUND_SIGNED_WINDOWS
=115,

418 
	mNET_TCP_DMA_COPYBREAK
=116,

419 
	mNET_TCP_SLOW_START_AFTER_IDLE
=117,

420 
	mNET_CIPSOV4_CACHE_ENABLE
=118,

421 
	mNET_CIPSOV4_CACHE_BUCKET_SIZE
=119,

422 
	mNET_CIPSOV4_RBM_OPTFMT
=120,

423 
	mNET_CIPSOV4_RBM_STRICTVALID
=121,

424 
	mNET_TCP_AVAIL_CONG_CONTROL
=122,

425 
	mNET_TCP_ALLOWED_CONG_CONTROL
=123,

426 
	mNET_TCP_MAX_SSTHRESH
=124,

427 
	mNET_TCP_FRTO_RESPONSE
=125,

431 
	mNET_IPV4_ROUTE_FLUSH
=1,

432 
	mNET_IPV4_ROUTE_MIN_DELAY
=2,

433 
	mNET_IPV4_ROUTE_MAX_DELAY
=3,

434 
	mNET_IPV4_ROUTE_GC_THRESH
=4,

435 
	mNET_IPV4_ROUTE_MAX_SIZE
=5,

436 
	mNET_IPV4_ROUTE_GC_MIN_INTERVAL
=6,

437 
	mNET_IPV4_ROUTE_GC_TIMEOUT
=7,

438 
	mNET_IPV4_ROUTE_GC_INTERVAL
=8,

439 
	mNET_IPV4_ROUTE_REDIRECT_LOAD
=9,

440 
	mNET_IPV4_ROUTE_REDIRECT_NUMBER
=10,

441 
	mNET_IPV4_ROUTE_REDIRECT_SILENCE
=11,

442 
	mNET_IPV4_ROUTE_ERROR_COST
=12,

443 
	mNET_IPV4_ROUTE_ERROR_BURST
=13,

444 
	mNET_IPV4_ROUTE_GC_ELASTICITY
=14,

445 
	mNET_IPV4_ROUTE_MTU_EXPIRES
=15,

446 
	mNET_IPV4_ROUTE_MIN_PMTU
=16,

447 
	mNET_IPV4_ROUTE_MIN_ADVMSS
=17,

448 
	mNET_IPV4_ROUTE_SECRET_INTERVAL
=18,

449 
	mNET_IPV4_ROUTE_GC_MIN_INTERVAL_MS
=19,

454 
	mNET_PROTO_CONF_ALL
=-2,

455 
	mNET_PROTO_CONF_DEFAULT
=-3

462 
	mNET_IPV4_CONF_FORWARDING
=1,

463 
	mNET_IPV4_CONF_MC_FORWARDING
=2,

464 
	mNET_IPV4_CONF_PROXY_ARP
=3,

465 
	mNET_IPV4_CONF_ACCEPT_REDIRECTS
=4,

466 
	mNET_IPV4_CONF_SECURE_REDIRECTS
=5,

467 
	mNET_IPV4_CONF_SEND_REDIRECTS
=6,

468 
	mNET_IPV4_CONF_SHARED_MEDIA
=7,

469 
	mNET_IPV4_CONF_RP_FILTER
=8,

470 
	mNET_IPV4_CONF_ACCEPT_SOURCE_ROUTE
=9,

471 
	mNET_IPV4_CONF_BOOTP_RELAY
=10,

472 
	mNET_IPV4_CONF_LOG_MARTIANS
=11,

473 
	mNET_IPV4_CONF_TAG
=12,

474 
	mNET_IPV4_CONF_ARPFILTER
=13,

475 
	mNET_IPV4_CONF_MEDIUM_ID
=14,

476 
	mNET_IPV4_CONF_NOXFRM
=15,

477 
	mNET_IPV4_CONF_NOPOLICY
=16,

478 
	mNET_IPV4_CONF_FORCE_IGMP_VERSION
=17,

479 
	mNET_IPV4_CONF_ARP_ANNOUNCE
=18,

480 
	mNET_IPV4_CONF_ARP_IGNORE
=19,

481 
	mNET_IPV4_CONF_PROMOTE_SECONDARIES
=20,

482 
	mNET_IPV4_CONF_ARP_ACCEPT
=21,

483 
	mNET_IPV4_CONF_ARP_NOTIFY
=22,

489 
	mNET_IPV4_NF_CONNTRACK_MAX
=1,

490 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_SYN_SENT
=2,

491 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_SYN_RECV
=3,

492 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_ESTABLISHED
=4,

493 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_FIN_WAIT
=5,

494 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_CLOSE_WAIT
=6,

495 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_LAST_ACK
=7,

496 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_TIME_WAIT
=8,

497 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_CLOSE
=9,

498 
	mNET_IPV4_NF_CONNTRACK_UDP_TIMEOUT
=10,

499 
	mNET_IPV4_NF_CONNTRACK_UDP_TIMEOUT_STREAM
=11,

500 
	mNET_IPV4_NF_CONNTRACK_ICMP_TIMEOUT
=12,

501 
	mNET_IPV4_NF_CONNTRACK_GENERIC_TIMEOUT
=13,

502 
	mNET_IPV4_NF_CONNTRACK_BUCKETS
=14,

503 
	mNET_IPV4_NF_CONNTRACK_LOG_INVALID
=15,

504 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_MAX_RETRANS
=16,

505 
	mNET_IPV4_NF_CONNTRACK_TCP_LOOSE
=17,

506 
	mNET_IPV4_NF_CONNTRACK_TCP_BE_LIBERAL
=18,

507 
	mNET_IPV4_NF_CONNTRACK_TCP_MAX_RETRANS
=19,

508 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_CLOSED
=20,

509 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_WAIT
=21,

510 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_ECHOED
=22,

511 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_ESTABLISHED
=23,

512 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_SENT
=24,

513 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_RECD
=25,

514 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_ACK_SENT
=26,

515 
	mNET_IPV4_NF_CONNTRACK_COUNT
=27,

516 
	mNET_IPV4_NF_CONNTRACK_CHECKSUM
=28,

521 
	mNET_IPV6_CONF
=16,

522 
	mNET_IPV6_NEIGH
=17,

523 
	mNET_IPV6_ROUTE
=18,

524 
	mNET_IPV6_ICMP
=19,

525 
	mNET_IPV6_BINDV6ONLY
=20,

526 
	mNET_IPV6_IP6FRAG_HIGH_THRESH
=21,

527 
	mNET_IPV6_IP6FRAG_LOW_THRESH
=22,

528 
	mNET_IPV6_IP6FRAG_TIME
=23,

529 
	mNET_IPV6_IP6FRAG_SECRET_INTERVAL
=24,

530 
	mNET_IPV6_MLD_MAX_MSF
=25,

534 
	mNET_IPV6_ROUTE_FLUSH
=1,

535 
	mNET_IPV6_ROUTE_GC_THRESH
=2,

536 
	mNET_IPV6_ROUTE_MAX_SIZE
=3,

537 
	mNET_IPV6_ROUTE_GC_MIN_INTERVAL
=4,

538 
	mNET_IPV6_ROUTE_GC_TIMEOUT
=5,

539 
	mNET_IPV6_ROUTE_GC_INTERVAL
=6,

540 
	mNET_IPV6_ROUTE_GC_ELASTICITY
=7,

541 
	mNET_IPV6_ROUTE_MTU_EXPIRES
=8,

542 
	mNET_IPV6_ROUTE_MIN_ADVMSS
=9,

543 
	mNET_IPV6_ROUTE_GC_MIN_INTERVAL_MS
=10

547 
	mNET_IPV6_FORWARDING
=1,

548 
	mNET_IPV6_HOP_LIMIT
=2,

549 
	mNET_IPV6_MTU
=3,

550 
	mNET_IPV6_ACCEPT_RA
=4,

551 
	mNET_IPV6_ACCEPT_REDIRECTS
=5,

552 
	mNET_IPV6_AUTOCONF
=6,

553 
	mNET_IPV6_DAD_TRANSMITS
=7,

554 
	mNET_IPV6_RTR_SOLICITS
=8,

555 
	mNET_IPV6_RTR_SOLICIT_INTERVAL
=9,

556 
	mNET_IPV6_RTR_SOLICIT_DELAY
=10,

557 
	mNET_IPV6_USE_TEMPADDR
=11,

558 
	mNET_IPV6_TEMP_VALID_LFT
=12,

559 
	mNET_IPV6_TEMP_PREFERED_LFT
=13,

560 
	mNET_IPV6_REGEN_MAX_RETRY
=14,

561 
	mNET_IPV6_MAX_DESYNC_FACTOR
=15,

562 
	mNET_IPV6_MAX_ADDRESSES
=16,

563 
	mNET_IPV6_FORCE_MLD_VERSION
=17,

564 
	mNET_IPV6_ACCEPT_RA_DEFRTR
=18,

565 
	mNET_IPV6_ACCEPT_RA_PINFO
=19,

566 
	mNET_IPV6_ACCEPT_RA_RTR_PREF
=20,

567 
	mNET_IPV6_RTR_PROBE_INTERVAL
=21,

568 
	mNET_IPV6_ACCEPT_RA_RT_INFO_MAX_PLEN
=22,

569 
	mNET_IPV6_PROXY_NDP
=23,

570 
	mNET_IPV6_ACCEPT_SOURCE_ROUTE
=25,

571 
	m__NET_IPV6_MAX


576 
	mNET_IPV6_ICMP_RATELIMIT
=1

581 
	mNET_NEIGH_MCAST_SOLICIT
=1,

582 
	mNET_NEIGH_UCAST_SOLICIT
=2,

583 
	mNET_NEIGH_APP_SOLICIT
=3,

584 
	mNET_NEIGH_RETRANS_TIME
=4,

585 
	mNET_NEIGH_REACHABLE_TIME
=5,

586 
	mNET_NEIGH_DELAY_PROBE_TIME
=6,

587 
	mNET_NEIGH_GC_STALE_TIME
=7,

588 
	mNET_NEIGH_UNRES_QLEN
=8,

589 
	mNET_NEIGH_PROXY_QLEN
=9,

590 
	mNET_NEIGH_ANYCAST_DELAY
=10,

591 
	mNET_NEIGH_PROXY_DELAY
=11,

592 
	mNET_NEIGH_LOCKTIME
=12,

593 
	mNET_NEIGH_GC_INTERVAL
=13,

594 
	mNET_NEIGH_GC_THRESH1
=14,

595 
	mNET_NEIGH_GC_THRESH2
=15,

596 
	mNET_NEIGH_GC_THRESH3
=16,

597 
	mNET_NEIGH_RETRANS_TIME_MS
=17,

598 
	mNET_NEIGH_REACHABLE_TIME_MS
=18,

603 
	mNET_DCCP_DEFAULT
=1,

608 
	mNET_IPX_PPROP_BROADCASTING
=1,

609 
	mNET_IPX_FORWARDING
=2

614 
	mNET_LLC2
=1,

615 
	mNET_LLC_STATION
=2,

620 
	mNET_LLC2_TIMEOUT
=1,

625 
	mNET_LLC_STATION_ACK_TIMEOUT
=1,

630 
	mNET_LLC2_ACK_TIMEOUT
=1,

631 
	mNET_LLC2_P_TIMEOUT
=2,

632 
	mNET_LLC2_REJ_TIMEOUT
=3,

633 
	mNET_LLC2_BUSY_TIMEOUT
=4,

638 
	mNET_ATALK_AARP_EXPIRY_TIME
=1,

639 
	mNET_ATALK_AARP_TICK_TIME
=2,

640 
	mNET_ATALK_AARP_RETRANSMIT_LIMIT
=3,

641 
	mNET_ATALK_AARP_RESOLVE_TIME
=4

647 
	mNET_NETROM_DEFAULT_PATH_QUALITY
=1,

648 
	mNET_NETROM_OBSOLESCENCE_COUNT_INITIALISER
=2,

649 
	mNET_NETROM_NETWORK_TTL_INITIALISER
=3,

650 
	mNET_NETROM_TRANSPORT_TIMEOUT
=4,

651 
	mNET_NETROM_TRANSPORT_MAXIMUM_TRIES
=5,

652 
	mNET_NETROM_TRANSPORT_ACKNOWLEDGE_DELAY
=6,

653 
	mNET_NETROM_TRANSPORT_BUSY_DELAY
=7,

654 
	mNET_NETROM_TRANSPORT_REQUESTED_WINDOW_SIZE
=8,

655 
	mNET_NETROM_TRANSPORT_NO_ACTIVITY_TIMEOUT
=9,

656 
	mNET_NETROM_ROUTING_CONTROL
=10,

657 
	mNET_NETROM_LINK_FAILS_COUNT
=11,

658 
	mNET_NETROM_RESET
=12

663 
	mNET_AX25_IP_DEFAULT_MODE
=1,

664 
	mNET_AX25_DEFAULT_MODE
=2,

665 
	mNET_AX25_BACKOFF_TYPE
=3,

666 
	mNET_AX25_CONNECT_MODE
=4,

667 
	mNET_AX25_STANDARD_WINDOW
=5,

668 
	mNET_AX25_EXTENDED_WINDOW
=6,

669 
	mNET_AX25_T1_TIMEOUT
=7,

670 
	mNET_AX25_T2_TIMEOUT
=8,

671 
	mNET_AX25_T3_TIMEOUT
=9,

672 
	mNET_AX25_IDLE_TIMEOUT
=10,

673 
	mNET_AX25_N2
=11,

674 
	mNET_AX25_PACLEN
=12,

675 
	mNET_AX25_PROTOCOL
=13,

676 
	mNET_AX25_DAMA_SLAVE_TIMEOUT
=14

681 
	mNET_ROSE_RESTART_REQUEST_TIMEOUT
=1,

682 
	mNET_ROSE_CALL_REQUEST_TIMEOUT
=2,

683 
	mNET_ROSE_RESET_REQUEST_TIMEOUT
=3,

684 
	mNET_ROSE_CLEAR_REQUEST_TIMEOUT
=4,

685 
	mNET_ROSE_ACK_HOLD_BACK_TIMEOUT
=5,

686 
	mNET_ROSE_ROUTING_CONTROL
=6,

687 
	mNET_ROSE_LINK_FAIL_TIMEOUT
=7,

688 
	mNET_ROSE_MAX_VCS
=8,

689 
	mNET_ROSE_WINDOW_SIZE
=9,

690 
	mNET_ROSE_NO_ACTIVITY_TIMEOUT
=10

695 
	mNET_X25_RESTART_REQUEST_TIMEOUT
=1,

696 
	mNET_X25_CALL_REQUEST_TIMEOUT
=2,

697 
	mNET_X25_RESET_REQUEST_TIMEOUT
=3,

698 
	mNET_X25_CLEAR_REQUEST_TIMEOUT
=4,

699 
	mNET_X25_ACK_HOLD_BACK_TIMEOUT
=5,

700 
	mNET_X25_FORWARD
=6

706 
	mNET_TR_RIF_TIMEOUT
=1

711 
	mNET_DECNET_NODE_TYPE
 = 1,

712 
	mNET_DECNET_NODE_ADDRESS
 = 2,

713 
	mNET_DECNET_NODE_NAME
 = 3,

714 
	mNET_DECNET_DEFAULT_DEVICE
 = 4,

715 
	mNET_DECNET_TIME_WAIT
 = 5,

716 
	mNET_DECNET_DN_COUNT
 = 6,

717 
	mNET_DECNET_DI_COUNT
 = 7,

718 
	mNET_DECNET_DR_COUNT
 = 8,

719 
	mNET_DECNET_DST_GC_INTERVAL
 = 9,

720 
	mNET_DECNET_CONF
 = 10,

721 
	mNET_DECNET_NO_FC_MAX_CWND
 = 11,

722 
	mNET_DECNET_MEM
 = 12,

723 
	mNET_DECNET_RMEM
 = 13,

724 
	mNET_DECNET_WMEM
 = 14,

725 
	mNET_DECNET_DEBUG_LEVEL
 = 255

730 
	mNET_DECNET_CONF_LOOPBACK
 = -2,

731 
	mNET_DECNET_CONF_DDCMP
 = -3,

732 
	mNET_DECNET_CONF_PPP
 = -4,

733 
	mNET_DECNET_CONF_X25
 = -5,

734 
	mNET_DECNET_CONF_GRE
 = -6,

735 
	mNET_DECNET_CONF_ETHER
 = -7

742 
	mNET_DECNET_CONF_DEV_PRIORITY
 = 1,

743 
	mNET_DECNET_CONF_DEV_T1
 = 2,

744 
	mNET_DECNET_CONF_DEV_T2
 = 3,

745 
	mNET_DECNET_CONF_DEV_T3
 = 4,

746 
	mNET_DECNET_CONF_DEV_FORWARDING
 = 5,

747 
	mNET_DECNET_CONF_DEV_BLKSIZE
 = 6,

748 
	mNET_DECNET_CONF_DEV_STATE
 = 7

753 
	mNET_SCTP_RTO_INITIAL
 = 1,

754 
	mNET_SCTP_RTO_MIN
 = 2,

755 
	mNET_SCTP_RTO_MAX
 = 3,

756 
	mNET_SCTP_RTO_ALPHA
 = 4,

757 
	mNET_SCTP_RTO_BETA
 = 5,

758 
	mNET_SCTP_VALID_COOKIE_LIFE
 = 6,

759 
	mNET_SCTP_ASSOCIATION_MAX_RETRANS
 = 7,

760 
	mNET_SCTP_PATH_MAX_RETRANS
 = 8,

761 
	mNET_SCTP_MAX_INIT_RETRANSMITS
 = 9,

762 
	mNET_SCTP_HB_INTERVAL
 = 10,

763 
	mNET_SCTP_PRESERVE_ENABLE
 = 11,

764 
	mNET_SCTP_MAX_BURST
 = 12,

765 
	mNET_SCTP_ADDIP_ENABLE
 = 13,

766 
	mNET_SCTP_PRSCTP_ENABLE
 = 14,

767 
	mNET_SCTP_SNDBUF_POLICY
 = 15,

768 
	mNET_SCTP_SACK_TIMEOUT
 = 16,

769 
	mNET_SCTP_RCVBUF_POLICY
 = 17,

774 
	mNET_BRIDGE_NF_CALL_ARPTABLES
 = 1,

775 
	mNET_BRIDGE_NF_CALL_IPTABLES
 = 2,

776 
	mNET_BRIDGE_NF_CALL_IP6TABLES
 = 3,

777 
	mNET_BRIDGE_NF_FILTER_VLAN_TAGGED
 = 4,

778 
	mNET_BRIDGE_NF_FILTER_PPPOE_TAGGED
 = 5,

783 
	mNET_IRDA_DISCOVERY
=1,

784 
	mNET_IRDA_DEVNAME
=2,

785 
	mNET_IRDA_DEBUG
=3,

786 
	mNET_IRDA_FAST_POLL
=4,

787 
	mNET_IRDA_DISCOVERY_SLOTS
=5,

788 
	mNET_IRDA_DISCOVERY_TIMEOUT
=6,

789 
	mNET_IRDA_SLOT_TIMEOUT
=7,

790 
	mNET_IRDA_MAX_BAUD_RATE
=8,

791 
	mNET_IRDA_MIN_TX_TURN_TIME
=9,

792 
	mNET_IRDA_MAX_TX_DATA_SIZE
=10,

793 
	mNET_IRDA_MAX_TX_WINDOW
=11,

794 
	mNET_IRDA_MAX_NOREPLY_TIME
=12,

795 
	mNET_IRDA_WARN_NOREPLY_TIME
=13,

796 
	mNET_IRDA_LAP_KEEPALIVE_TIME
=14,

803 
	mFS_NRINODE
=1,

804 
	mFS_STATINODE
=2,

805 
	mFS_MAXINODE
=3,

806 
	mFS_NRDQUOT
=4,

807 
	mFS_MAXDQUOT
=5,

808 
	mFS_NRFILE
=6,

809 
	mFS_MAXFILE
=7,

810 
	mFS_DENTRY
=8,

811 
	mFS_NRSUPER
=9,

812 
	mFS_MAXSUPER
=10,

813 
	mFS_OVERFLOWUID
=11,

814 
	mFS_OVERFLOWGID
=12,

815 
	mFS_LEASES
=13,

816 
	mFS_DIR_NOTIFY
=14,

817 
	mFS_LEASE_TIME
=15,

818 
	mFS_DQSTATS
=16,

819 
	mFS_XFS
=17,

820 
	mFS_AIO_NR
=18,

821 
	mFS_AIO_MAX_NR
=19,

822 
	mFS_INOTIFY
=20,

823 
	mFS_OCFS2
=988,

828 
	mFS_DQ_LOOKUPS
 = 1,

829 
	mFS_DQ_DROPS
 = 2,

830 
	mFS_DQ_READS
 = 3,

831 
	mFS_DQ_WRITES
 = 4,

832 
	mFS_DQ_CACHE_HITS
 = 5,

833 
	mFS_DQ_ALLOCATED
 = 6,

834 
	mFS_DQ_FREE
 = 7,

835 
	mFS_DQ_SYNCS
 = 8,

836 
	mFS_DQ_WARNINGS
 = 9,

843 
	mDEV_CDROM
=1,

844 
	mDEV_HWMON
=2,

845 
	mDEV_PARPORT
=3,

846 
	mDEV_RAID
=4,

847 
	mDEV_MAC_HID
=5,

848 
	mDEV_SCSI
=6,

849 
	mDEV_IPMI
=7,

854 
	mDEV_CDROM_INFO
=1,

855 
	mDEV_CDROM_AUTOCLOSE
=2,

856 
	mDEV_CDROM_AUTOEJECT
=3,

857 
	mDEV_CDROM_DEBUG
=4,

858 
	mDEV_CDROM_LOCK
=5,

859 
	mDEV_CDROM_CHECK_MEDIA
=6

864 
	mDEV_PARPORT_DEFAULT
=-3

869 
	mDEV_RAID_SPEED_LIMIT_MIN
=1,

870 
	mDEV_RAID_SPEED_LIMIT_MAX
=2

875 
	mDEV_PARPORT_DEFAULT_TIMESLICE
=1,

876 
	mDEV_PARPORT_DEFAULT_SPINTIME
=2

881 
	mDEV_PARPORT_SPINTIME
=1,

882 
	mDEV_PARPORT_BASE_ADDR
=2,

883 
	mDEV_PARPORT_IRQ
=3,

884 
	mDEV_PARPORT_DMA
=4,

885 
	mDEV_PARPORT_MODES
=5,

886 
	mDEV_PARPORT_DEVICES
=6,

887 
	mDEV_PARPORT_AUTOPROBE
=16

892 
	mDEV_PARPORT_DEVICES_ACTIVE
=-3,

897 
	mDEV_PARPORT_DEVICE_TIMESLICE
=1,

902 
	mDEV_MAC_HID_KEYBOARD_SENDS_LINUX_KEYCODES
=1,

903 
	mDEV_MAC_HID_KEYBOARD_LOCK_KEYCODES
=2,

904 
	mDEV_MAC_HID_MOUSE_BUTTON_EMULATION
=3,

905 
	mDEV_MAC_HID_MOUSE_BUTTON2_KEYCODE
=4,

906 
	mDEV_MAC_HID_MOUSE_BUTTON3_KEYCODE
=5,

907 
	mDEV_MAC_HID_ADB_MOUSE_SENDS_KEYCODES
=6

912 
	mDEV_SCSI_LOGGING_LEVEL
=1,

917 
	mDEV_IPMI_POWEROFF_POWERCYCLE
=1,

923 
	mABI_DEFHANDLER_COFF
=1,

924 
	mABI_DEFHANDLER_ELF
=2,

925 
	mABI_DEFHANDLER_LCALL7
=3,

926 
	mABI_DEFHANDLER_LIBCSO
=4,

927 
	mABI_TRACE
=5,

928 
	mABI_FAKE_UTSNAME
=6,

	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/sig£t.h
>

35 #i‚de‡
__sig£t_t_deföed


36 
	#__sig£t_t_deföed


	)

37 
__sig£t_t
 
	tsig£t_t
;

41 
	#__√ed_time_t


	)

42 
	#__√ed_time•ec


	)

43 
	~<time.h
>

44 
	#__√ed_timevÆ


	)

45 
	~<bôs/time.h
>

47 #i‚de‡
__su£c⁄ds_t_deföed


48 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

49 
	#__su£c⁄ds_t_deföed


	)

54 
	t__fd_mask
;

57 #unde‡
__NFDBITS


59 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

60 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

61 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

68 #ifde‡
__USE_XOPEN


69 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

70 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

72 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

75 } 
	tfd_£t
;

78 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

80 #ifde‡
__USE_MISC


82 
__fd_mask
 
	tfd_mask
;

85 
	#NFDBITS
 
__NFDBITS


	)

90 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

91 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

92 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

93 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

96 
__BEGIN_DECLS


106 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

107 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

108 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

109 
timevÆ
 *
__ª°ri˘
 
__timeout
);

111 #ifde‡
__USE_XOPEN2K


118 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

119 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

120 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

121 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

122 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

127 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


128 
	~<bôs/£À˘2.h
>

131 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

20 #i‚de‡
_SYS_SYSMACROS_H


21 
	#_SYS_SYSMACROS_H
 1

	)

23 
	~<„©uªs.h
>

28 #ifde‡
__GLIBC_HAVE_LONG_LONG


29 
__BEGIN_DECLS


31 
__exãnsi⁄__


32 
	$gnu_dev_maj‹
 (
__dev
)

33 
__THROW
 
__©åibuã_c⁄°__
;

34 
__exãnsi⁄__


35 
	$gnu_dev_mö‹
 (
__dev
)

36 
__THROW
 
__©åibuã_c⁄°__
;

37 
__exãnsi⁄__


38 
	$gnu_dev_makedev
 (
__maj‹
,

39 
__mö‹
)

40 
__THROW
 
__©åibuã_c⁄°__
;

42 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


43 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

44 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

46  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

47 
	}
}

49 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

50 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

52  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

53 
	}
}

55 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

56 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

58  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

59 | (((Ë(
__mö‹
 & ~0xff)) << 12)

60 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

61 
	}
}

63 
	g__END_DECLS


66 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

67 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

68 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/asm/unistd_32.h

1 #i‚de‡
_ASM_X86_UNISTD_32_H


2 
	#_ASM_X86_UNISTD_32_H
 1

	)

4 
	#__NR_ª°¨t_sysˇŒ
 0

	)

5 
	#__NR_exô
 1

	)

6 
	#__NR_f‹k
 2

	)

7 
	#__NR_ªad
 3

	)

8 
	#__NR_wrôe
 4

	)

9 
	#__NR_›í
 5

	)

10 
	#__NR_˛o£
 6

	)

11 
	#__NR_waôpid
 7

	)

12 
	#__NR_¸ót
 8

	)

13 
	#__NR_lök
 9

	)

14 
	#__NR_u∆ök
 10

	)

15 
	#__NR_execve
 11

	)

16 
	#__NR_chdú
 12

	)

17 
	#__NR_time
 13

	)

18 
	#__NR_mknod
 14

	)

19 
	#__NR_chmod
 15

	)

20 
	#__NR_lchown
 16

	)

21 
	#__NR_bªak
 17

	)

22 
	#__NR_ﬁd°©
 18

	)

23 
	#__NR_l£ek
 19

	)

24 
	#__NR_gëpid
 20

	)

25 
	#__NR_mou¡
 21

	)

26 
	#__NR_umou¡
 22

	)

27 
	#__NR_£tuid
 23

	)

28 
	#__NR_gëuid
 24

	)

29 
	#__NR_°ime
 25

	)

30 
	#__NR_±ø˚
 26

	)

31 
	#__NR_Æ¨m
 27

	)

32 
	#__NR_ﬁdf°©
 28

	)

33 
	#__NR_∑u£
 29

	)

34 
	#__NR_utime
 30

	)

35 
	#__NR_°ty
 31

	)

36 
	#__NR_gây
 32

	)

37 
	#__NR_ac˚ss
 33

	)

38 
	#__NR_ni˚
 34

	)

39 
	#__NR_·ime
 35

	)

40 
	#__NR_sync
 36

	)

41 
	#__NR_kûl
 37

	)

42 
	#__NR_ª«me
 38

	)

43 
	#__NR_mkdú
 39

	)

44 
	#__NR_rmdú
 40

	)

45 
	#__NR_dup
 41

	)

46 
	#__NR_pùe
 42

	)

47 
	#__NR_times
 43

	)

48 
	#__NR_¥of
 44

	)

49 
	#__NR_brk
 45

	)

50 
	#__NR_£tgid
 46

	)

51 
	#__NR_gëgid
 47

	)

52 
	#__NR_sig«l
 48

	)

53 
	#__NR_gëeuid
 49

	)

54 
	#__NR_gëegid
 50

	)

55 
	#__NR_ac˘
 51

	)

56 
	#__NR_umou¡2
 52

	)

57 
	#__NR_lock
 53

	)

58 
	#__NR_io˘l
 54

	)

59 
	#__NR_f˙é
 55

	)

60 
	#__NR_mpx
 56

	)

61 
	#__NR_£çgid
 57

	)

62 
	#__NR_ulimô
 58

	)

63 
	#__NR_ﬁdﬁdu«me
 59

	)

64 
	#__NR_umask
 60

	)

65 
	#__NR_chroŸ
 61

	)

66 
	#__NR_u°©
 62

	)

67 
	#__NR_dup2
 63

	)

68 
	#__NR_gëµid
 64

	)

69 
	#__NR_gëpgΩ
 65

	)

70 
	#__NR_£tsid
 66

	)

71 
	#__NR_siga˘i⁄
 67

	)

72 
	#__NR_sgëmask
 68

	)

73 
	#__NR_s£tmask
 69

	)

74 
	#__NR_£åeuid
 70

	)

75 
	#__NR_£åegid
 71

	)

76 
	#__NR_sigsu•íd
 72

	)

77 
	#__NR_sig≥ndög
 73

	)

78 
	#__NR_£tho°«me
 74

	)

79 
	#__NR_£ålimô
 75

	)

80 
	#__NR_gëæimô
 76

	)

81 
	#__NR_gërußge
 77

	)

82 
	#__NR_gëtimeofday
 78

	)

83 
	#__NR_£âimeofday
 79

	)

84 
	#__NR_gëgroups
 80

	)

85 
	#__NR_£tgroups
 81

	)

86 
	#__NR_£À˘
 82

	)

87 
	#__NR_symlök
 83

	)

88 
	#__NR_ﬁdl°©
 84

	)

89 
	#__NR_ªadlök
 85

	)

90 
	#__NR_u£lib
 86

	)

91 
	#__NR_sw≠⁄
 87

	)

92 
	#__NR_ªboŸ
 88

	)

93 
	#__NR_ªaddú
 89

	)

94 
	#__NR_mm≠
 90

	)

95 
	#__NR_munm≠
 91

	)

96 
	#__NR_åunˇã
 92

	)

97 
	#__NR_·runˇã
 93

	)

98 
	#__NR_fchmod
 94

	)

99 
	#__NR_fchown
 95

	)

100 
	#__NR_gë¥i‹ôy
 96

	)

101 
	#__NR_£çri‹ôy
 97

	)

102 
	#__NR_¥ofû
 98

	)

103 
	#__NR_°©fs
 99

	)

104 
	#__NR_f°©fs
 100

	)

105 
	#__NR_i›îm
 101

	)

106 
	#__NR_sockëˇŒ
 102

	)

107 
	#__NR_sy¶og
 103

	)

108 
	#__NR_£tôimî
 104

	)

109 
	#__NR_gëôimî
 105

	)

110 
	#__NR_°©
 106

	)

111 
	#__NR_l°©
 107

	)

112 
	#__NR_f°©
 108

	)

113 
	#__NR_ﬁdu«me
 109

	)

114 
	#__NR_i›l
 110

	)

115 
	#__NR_vh™gup
 111

	)

116 
	#__NR_idÀ
 112

	)

117 
	#__NR_vm86ﬁd
 113

	)

118 
	#__NR_waô4
 114

	)

119 
	#__NR_sw≠off
 115

	)

120 
	#__NR_sysöfo
 116

	)

121 
	#__NR_ùc
 117

	)

122 
	#__NR_fsync
 118

	)

123 
	#__NR_sigªtu∫
 119

	)

124 
	#__NR_˛⁄e
 120

	)

125 
	#__NR_£tdomaö«me
 121

	)

126 
	#__NR_u«me
 122

	)

127 
	#__NR_modify_ldt
 123

	)

128 
	#__NR_adjtimex
 124

	)

129 
	#__NR_m¥Ÿe˘
 125

	)

130 
	#__NR_sig¥ocmask
 126

	)

131 
	#__NR_¸óã_moduÀ
 127

	)

132 
	#__NR_öô_moduÀ
 128

	)

133 
	#__NR_dñëe_moduÀ
 129

	)

134 
	#__NR_gë_kî√l_syms
 130

	)

135 
	#__NR_quŸa˘l
 131

	)

136 
	#__NR_gëpgid
 132

	)

137 
	#__NR_fchdú
 133

	)

138 
	#__NR_bdÊush
 134

	)

139 
	#__NR_sysfs
 135

	)

140 
	#__NR_≥rs⁄Æôy
 136

	)

141 
	#__NR_afs_sysˇŒ
 137

	)

142 
	#__NR_£tfsuid
 138

	)

143 
	#__NR_£tfsgid
 139

	)

144 
	#__NR__Œ£ek
 140

	)

145 
	#__NR_gëdíts
 141

	)

146 
	#__NR__√w£À˘
 142

	)

147 
	#__NR_Êock
 143

	)

148 
	#__NR_msync
 144

	)

149 
	#__NR_ªadv
 145

	)

150 
	#__NR_wrôev
 146

	)

151 
	#__NR_gësid
 147

	)

152 
	#__NR_fd©async
 148

	)

153 
	#__NR__sys˘l
 149

	)

154 
	#__NR_mlock
 150

	)

155 
	#__NR_mu∆ock
 151

	)

156 
	#__NR_mlockÆl
 152

	)

157 
	#__NR_mu∆ockÆl
 153

	)

158 
	#__NR_sched_£ç¨am
 154

	)

159 
	#__NR_sched_gë∑øm
 155

	)

160 
	#__NR_sched_£tscheduÀr
 156

	)

161 
	#__NR_sched_gëscheduÀr
 157

	)

162 
	#__NR_sched_yõld
 158

	)

163 
	#__NR_sched_gë_¥i‹ôy_max
 159

	)

164 
	#__NR_sched_gë_¥i‹ôy_mö
 160

	)

165 
	#__NR_sched_º_gë_öãrvÆ
 161

	)

166 
	#__NR_«no¶ìp
 162

	)

167 
	#__NR_mªm≠
 163

	)

168 
	#__NR_£åesuid
 164

	)

169 
	#__NR_gëªsuid
 165

	)

170 
	#__NR_vm86
 166

	)

171 
	#__NR_quîy_moduÀ
 167

	)

172 
	#__NR_pﬁl
 168

	)

173 
	#__NR_nfs£rv˘l
 169

	)

174 
	#__NR_£åesgid
 170

	)

175 
	#__NR_gëªsgid
 171

	)

176 
	#__NR_¥˘l
 172

	)

177 
	#__NR_π_sigªtu∫
 173

	)

178 
	#__NR_π_siga˘i⁄
 174

	)

179 
	#__NR_π_sig¥ocmask
 175

	)

180 
	#__NR_π_sig≥ndög
 176

	)

181 
	#__NR_π_sigtimedwaô
 177

	)

182 
	#__NR_π_sigqueueöfo
 178

	)

183 
	#__NR_π_sigsu•íd
 179

	)

184 
	#__NR_¥ód64
 180

	)

185 
	#__NR_pwrôe64
 181

	)

186 
	#__NR_chown
 182

	)

187 
	#__NR_gëcwd
 183

	)

188 
	#__NR_ˇpgë
 184

	)

189 
	#__NR_ˇp£t
 185

	)

190 
	#__NR_sigÆt°ack
 186

	)

191 
	#__NR_£ndfûe
 187

	)

192 
	#__NR_gëpmsg
 188

	)

193 
	#__NR_puçmsg
 189

	)

194 
	#__NR_vf‹k
 190

	)

195 
	#__NR_ugëæimô
 191

	)

196 
	#__NR_mm≠2
 192

	)

197 
	#__NR_åunˇã64
 193

	)

198 
	#__NR_·runˇã64
 194

	)

199 
	#__NR_°©64
 195

	)

200 
	#__NR_l°©64
 196

	)

201 
	#__NR_f°©64
 197

	)

202 
	#__NR_lchown32
 198

	)

203 
	#__NR_gëuid32
 199

	)

204 
	#__NR_gëgid32
 200

	)

205 
	#__NR_gëeuid32
 201

	)

206 
	#__NR_gëegid32
 202

	)

207 
	#__NR_£åeuid32
 203

	)

208 
	#__NR_£åegid32
 204

	)

209 
	#__NR_gëgroups32
 205

	)

210 
	#__NR_£tgroups32
 206

	)

211 
	#__NR_fchown32
 207

	)

212 
	#__NR_£åesuid32
 208

	)

213 
	#__NR_gëªsuid32
 209

	)

214 
	#__NR_£åesgid32
 210

	)

215 
	#__NR_gëªsgid32
 211

	)

216 
	#__NR_chown32
 212

	)

217 
	#__NR_£tuid32
 213

	)

218 
	#__NR_£tgid32
 214

	)

219 
	#__NR_£tfsuid32
 215

	)

220 
	#__NR_£tfsgid32
 216

	)

221 
	#__NR_pivŸ_roŸ
 217

	)

222 
	#__NR_möc‹e
 218

	)

223 
	#__NR_madvi£
 219

	)

224 
	#__NR_gëdíts64
 220

	)

225 
	#__NR_f˙é64
 221

	)

226 
	#__NR_gëtid
 224

	)

227 
	#__NR_ªadahód
 225

	)

228 
	#__NR_£tx©å
 226

	)

229 
	#__NR_l£tx©å
 227

	)

230 
	#__NR_f£tx©å
 228

	)

231 
	#__NR_gëx©å
 229

	)

232 
	#__NR_lgëx©å
 230

	)

233 
	#__NR_fgëx©å
 231

	)

234 
	#__NR_li°x©å
 232

	)

235 
	#__NR_Œi°x©å
 233

	)

236 
	#__NR_Êi°x©å
 234

	)

237 
	#__NR_ªmovex©å
 235

	)

238 
	#__NR_Ãemovex©å
 236

	)

239 
	#__NR_‰emovex©å
 237

	)

240 
	#__NR_tkûl
 238

	)

241 
	#__NR_£ndfûe64
 239

	)

242 
	#__NR_fuãx
 240

	)

243 
	#__NR_sched_£èfföôy
 241

	)

244 
	#__NR_sched_gëafföôy
 242

	)

245 
	#__NR_£t_thªad_¨ó
 243

	)

246 
	#__NR_gë_thªad_¨ó
 244

	)

247 
	#__NR_io_£tup
 245

	)

248 
	#__NR_io_de°roy
 246

	)

249 
	#__NR_io_gëevíts
 247

	)

250 
	#__NR_io_submô
 248

	)

251 
	#__NR_io_ˇn˚l
 249

	)

252 
	#__NR_Ádvi£64
 250

	)

253 
	#__NR_exô_group
 252

	)

254 
	#__NR_lookup_dcookõ
 253

	)

255 
	#__NR_ïﬁl_¸óã
 254

	)

256 
	#__NR_ïﬁl_˘l
 255

	)

257 
	#__NR_ïﬁl_waô
 256

	)

258 
	#__NR_ªm≠_fûe_∑ges
 257

	)

259 
	#__NR_£t_tid_addªss
 258

	)

260 
	#__NR_timî_¸óã
 259

	)

261 
	#__NR_timî_£âime
 260

	)

262 
	#__NR_timî_gëtime
 261

	)

263 
	#__NR_timî_gëovîrun
 262

	)

264 
	#__NR_timî_dñëe
 263

	)

265 
	#__NR_˛ock_£âime
 264

	)

266 
	#__NR_˛ock_gëtime
 265

	)

267 
	#__NR_˛ock_gëªs
 266

	)

268 
	#__NR_˛ock_«no¶ìp
 267

	)

269 
	#__NR_°©fs64
 268

	)

270 
	#__NR_f°©fs64
 269

	)

271 
	#__NR_tgkûl
 270

	)

272 
	#__NR_utimes
 271

	)

273 
	#__NR_Ádvi£64_64
 272

	)

274 
	#__NR_v£rvî
 273

	)

275 
	#__NR_mböd
 274

	)

276 
	#__NR_gë_mempﬁicy
 275

	)

277 
	#__NR_£t_mempﬁicy
 276

	)

278 
	#__NR_mq_›í
 277

	)

279 
	#__NR_mq_u∆ök
 278

	)

280 
	#__NR_mq_timed£nd
 279

	)

281 
	#__NR_mq_timedª˚ive
 280

	)

282 
	#__NR_mq_nŸify
 281

	)

283 
	#__NR_mq_gë£èâr
 282

	)

284 
	#__NR_kexec_lﬂd
 283

	)

285 
	#__NR_waôid
 284

	)

286 
	#__NR_add_key
 286

	)

287 
	#__NR_ªque°_key
 287

	)

288 
	#__NR_key˘l
 288

	)

289 
	#__NR_i›rio_£t
 289

	)

290 
	#__NR_i›rio_gë
 290

	)

291 
	#__NR_öŸify_öô
 291

	)

292 
	#__NR_öŸify_add_w©ch
 292

	)

293 
	#__NR_öŸify_rm_w©ch
 293

	)

294 
	#__NR_migøã_∑ges
 294

	)

295 
	#__NR_›í©
 295

	)

296 
	#__NR_mkdú©
 296

	)

297 
	#__NR_mknod©
 297

	)

298 
	#__NR_fchow«t
 298

	)

299 
	#__NR_futimeßt
 299

	)

300 
	#__NR_f°©©64
 300

	)

301 
	#__NR_u∆ök©
 301

	)

302 
	#__NR_ª«mót
 302

	)

303 
	#__NR_lök©
 303

	)

304 
	#__NR_symlök©
 304

	)

305 
	#__NR_ªadlök©
 305

	)

306 
	#__NR_fchmod©
 306

	)

307 
	#__NR_Ác˚sßt
 307

	)

308 
	#__NR_p£À˘6
 308

	)

309 
	#__NR_µﬁl
 309

	)

310 
	#__NR_unsh¨e
 310

	)

311 
	#__NR_£t_robu°_li°
 311

	)

312 
	#__NR_gë_robu°_li°
 312

	)

313 
	#__NR_•li˚
 313

	)

314 
	#__NR_sync_fûe_ønge
 314

	)

315 
	#__NR_ãe
 315

	)

316 
	#__NR_vm•li˚
 316

	)

317 
	#__NR_move_∑ges
 317

	)

318 
	#__NR_gë˝u
 318

	)

319 
	#__NR_ïﬁl_pwaô
 319

	)

320 
	#__NR_utimíßt
 320

	)

321 
	#__NR_sig«lfd
 321

	)

322 
	#__NR_timîfd_¸óã
 322

	)

323 
	#__NR_evítfd
 323

	)

324 
	#__NR_ÁŒoˇã
 324

	)

325 
	#__NR_timîfd_£âime
 325

	)

326 
	#__NR_timîfd_gëtime
 326

	)

327 
	#__NR_sig«lfd4
 327

	)

328 
	#__NR_evítfd2
 328

	)

329 
	#__NR_ïﬁl_¸óã1
 329

	)

330 
	#__NR_dup3
 330

	)

331 
	#__NR_pùe2
 331

	)

332 
	#__NR_öŸify_öô1
 332

	)

333 
	#__NR_¥ódv
 333

	)

334 
	#__NR_pwrôev
 334

	)

335 
	#__NR_π_tgsigqueueöfo
 335

	)

336 
	#__NR_≥rf_evít_›í
 336

	)

337 
	#__NR_ªcvmmsg
 337

	)

338 
	#__NR_ÁnŸify_öô
 338

	)

339 
	#__NR_ÁnŸify_m¨k
 339

	)

340 
	#__NR_¥limô64
 340

	)

341 
	#__NR_«me_to_h™dÀ_©
 341

	)

342 
	#__NR_›í_by_h™dÀ_©
 342

	)

343 
	#__NR_˛ock_adjtime
 343

	)

344 
	#__NR_syncfs
 344

	)

345 
	#__NR_£ndmmsg
 345

	)

346 
	#__NR_£äs
 346

	)

347 
	#__NR_¥o˚ss_vm_ªadv
 347

	)

348 
	#__NR_¥o˚ss_vm_wrôev
 348

	)

349 
	#__NR_kcmp
 349

	)

350 
	#__NR_föô_moduÀ
 350

	)

	@/usr/include/asm/unistd_64.h

1 #i‚de‡
_ASM_X86_UNISTD_64_H


2 
	#_ASM_X86_UNISTD_64_H
 1

	)

4 
	#__NR_ªad
 0

	)

5 
	#__NR_wrôe
 1

	)

6 
	#__NR_›í
 2

	)

7 
	#__NR_˛o£
 3

	)

8 
	#__NR_°©
 4

	)

9 
	#__NR_f°©
 5

	)

10 
	#__NR_l°©
 6

	)

11 
	#__NR_pﬁl
 7

	)

12 
	#__NR_l£ek
 8

	)

13 
	#__NR_mm≠
 9

	)

14 
	#__NR_m¥Ÿe˘
 10

	)

15 
	#__NR_munm≠
 11

	)

16 
	#__NR_brk
 12

	)

17 
	#__NR_π_siga˘i⁄
 13

	)

18 
	#__NR_π_sig¥ocmask
 14

	)

19 
	#__NR_π_sigªtu∫
 15

	)

20 
	#__NR_io˘l
 16

	)

21 
	#__NR_¥ód64
 17

	)

22 
	#__NR_pwrôe64
 18

	)

23 
	#__NR_ªadv
 19

	)

24 
	#__NR_wrôev
 20

	)

25 
	#__NR_ac˚ss
 21

	)

26 
	#__NR_pùe
 22

	)

27 
	#__NR_£À˘
 23

	)

28 
	#__NR_sched_yõld
 24

	)

29 
	#__NR_mªm≠
 25

	)

30 
	#__NR_msync
 26

	)

31 
	#__NR_möc‹e
 27

	)

32 
	#__NR_madvi£
 28

	)

33 
	#__NR_shmgë
 29

	)

34 
	#__NR_shm©
 30

	)

35 
	#__NR_shm˘l
 31

	)

36 
	#__NR_dup
 32

	)

37 
	#__NR_dup2
 33

	)

38 
	#__NR_∑u£
 34

	)

39 
	#__NR_«no¶ìp
 35

	)

40 
	#__NR_gëôimî
 36

	)

41 
	#__NR_Æ¨m
 37

	)

42 
	#__NR_£tôimî
 38

	)

43 
	#__NR_gëpid
 39

	)

44 
	#__NR_£ndfûe
 40

	)

45 
	#__NR_sockë
 41

	)

46 
	#__NR_c⁄√˘
 42

	)

47 
	#__NR_ac˚±
 43

	)

48 
	#__NR_£ndto
 44

	)

49 
	#__NR_ªcv‰om
 45

	)

50 
	#__NR_£ndmsg
 46

	)

51 
	#__NR_ªcvmsg
 47

	)

52 
	#__NR_shutdown
 48

	)

53 
	#__NR_böd
 49

	)

54 
	#__NR_li°í
 50

	)

55 
	#__NR_gësock«me
 51

	)

56 
	#__NR_gë≥î«me
 52

	)

57 
	#__NR_sockë∑ú
 53

	)

58 
	#__NR_£tsock›t
 54

	)

59 
	#__NR_gësock›t
 55

	)

60 
	#__NR_˛⁄e
 56

	)

61 
	#__NR_f‹k
 57

	)

62 
	#__NR_vf‹k
 58

	)

63 
	#__NR_execve
 59

	)

64 
	#__NR_exô
 60

	)

65 
	#__NR_waô4
 61

	)

66 
	#__NR_kûl
 62

	)

67 
	#__NR_u«me
 63

	)

68 
	#__NR_£mgë
 64

	)

69 
	#__NR_£m›
 65

	)

70 
	#__NR_£m˘l
 66

	)

71 
	#__NR_shmdt
 67

	)

72 
	#__NR_msggë
 68

	)

73 
	#__NR_msg¢d
 69

	)

74 
	#__NR_msgrcv
 70

	)

75 
	#__NR_msg˘l
 71

	)

76 
	#__NR_f˙é
 72

	)

77 
	#__NR_Êock
 73

	)

78 
	#__NR_fsync
 74

	)

79 
	#__NR_fd©async
 75

	)

80 
	#__NR_åunˇã
 76

	)

81 
	#__NR_·runˇã
 77

	)

82 
	#__NR_gëdíts
 78

	)

83 
	#__NR_gëcwd
 79

	)

84 
	#__NR_chdú
 80

	)

85 
	#__NR_fchdú
 81

	)

86 
	#__NR_ª«me
 82

	)

87 
	#__NR_mkdú
 83

	)

88 
	#__NR_rmdú
 84

	)

89 
	#__NR_¸ót
 85

	)

90 
	#__NR_lök
 86

	)

91 
	#__NR_u∆ök
 87

	)

92 
	#__NR_symlök
 88

	)

93 
	#__NR_ªadlök
 89

	)

94 
	#__NR_chmod
 90

	)

95 
	#__NR_fchmod
 91

	)

96 
	#__NR_chown
 92

	)

97 
	#__NR_fchown
 93

	)

98 
	#__NR_lchown
 94

	)

99 
	#__NR_umask
 95

	)

100 
	#__NR_gëtimeofday
 96

	)

101 
	#__NR_gëæimô
 97

	)

102 
	#__NR_gërußge
 98

	)

103 
	#__NR_sysöfo
 99

	)

104 
	#__NR_times
 100

	)

105 
	#__NR_±ø˚
 101

	)

106 
	#__NR_gëuid
 102

	)

107 
	#__NR_sy¶og
 103

	)

108 
	#__NR_gëgid
 104

	)

109 
	#__NR_£tuid
 105

	)

110 
	#__NR_£tgid
 106

	)

111 
	#__NR_gëeuid
 107

	)

112 
	#__NR_gëegid
 108

	)

113 
	#__NR_£çgid
 109

	)

114 
	#__NR_gëµid
 110

	)

115 
	#__NR_gëpgΩ
 111

	)

116 
	#__NR_£tsid
 112

	)

117 
	#__NR_£åeuid
 113

	)

118 
	#__NR_£åegid
 114

	)

119 
	#__NR_gëgroups
 115

	)

120 
	#__NR_£tgroups
 116

	)

121 
	#__NR_£åesuid
 117

	)

122 
	#__NR_gëªsuid
 118

	)

123 
	#__NR_£åesgid
 119

	)

124 
	#__NR_gëªsgid
 120

	)

125 
	#__NR_gëpgid
 121

	)

126 
	#__NR_£tfsuid
 122

	)

127 
	#__NR_£tfsgid
 123

	)

128 
	#__NR_gësid
 124

	)

129 
	#__NR_ˇpgë
 125

	)

130 
	#__NR_ˇp£t
 126

	)

131 
	#__NR_π_sig≥ndög
 127

	)

132 
	#__NR_π_sigtimedwaô
 128

	)

133 
	#__NR_π_sigqueueöfo
 129

	)

134 
	#__NR_π_sigsu•íd
 130

	)

135 
	#__NR_sigÆt°ack
 131

	)

136 
	#__NR_utime
 132

	)

137 
	#__NR_mknod
 133

	)

138 
	#__NR_u£lib
 134

	)

139 
	#__NR_≥rs⁄Æôy
 135

	)

140 
	#__NR_u°©
 136

	)

141 
	#__NR_°©fs
 137

	)

142 
	#__NR_f°©fs
 138

	)

143 
	#__NR_sysfs
 139

	)

144 
	#__NR_gë¥i‹ôy
 140

	)

145 
	#__NR_£çri‹ôy
 141

	)

146 
	#__NR_sched_£ç¨am
 142

	)

147 
	#__NR_sched_gë∑øm
 143

	)

148 
	#__NR_sched_£tscheduÀr
 144

	)

149 
	#__NR_sched_gëscheduÀr
 145

	)

150 
	#__NR_sched_gë_¥i‹ôy_max
 146

	)

151 
	#__NR_sched_gë_¥i‹ôy_mö
 147

	)

152 
	#__NR_sched_º_gë_öãrvÆ
 148

	)

153 
	#__NR_mlock
 149

	)

154 
	#__NR_mu∆ock
 150

	)

155 
	#__NR_mlockÆl
 151

	)

156 
	#__NR_mu∆ockÆl
 152

	)

157 
	#__NR_vh™gup
 153

	)

158 
	#__NR_modify_ldt
 154

	)

159 
	#__NR_pivŸ_roŸ
 155

	)

160 
	#__NR__sys˘l
 156

	)

161 
	#__NR_¥˘l
 157

	)

162 
	#__NR_¨ch_¥˘l
 158

	)

163 
	#__NR_adjtimex
 159

	)

164 
	#__NR_£ålimô
 160

	)

165 
	#__NR_chroŸ
 161

	)

166 
	#__NR_sync
 162

	)

167 
	#__NR_ac˘
 163

	)

168 
	#__NR_£âimeofday
 164

	)

169 
	#__NR_mou¡
 165

	)

170 
	#__NR_umou¡2
 166

	)

171 
	#__NR_sw≠⁄
 167

	)

172 
	#__NR_sw≠off
 168

	)

173 
	#__NR_ªboŸ
 169

	)

174 
	#__NR_£tho°«me
 170

	)

175 
	#__NR_£tdomaö«me
 171

	)

176 
	#__NR_i›l
 172

	)

177 
	#__NR_i›îm
 173

	)

178 
	#__NR_¸óã_moduÀ
 174

	)

179 
	#__NR_öô_moduÀ
 175

	)

180 
	#__NR_dñëe_moduÀ
 176

	)

181 
	#__NR_gë_kî√l_syms
 177

	)

182 
	#__NR_quîy_moduÀ
 178

	)

183 
	#__NR_quŸa˘l
 179

	)

184 
	#__NR_nfs£rv˘l
 180

	)

185 
	#__NR_gëpmsg
 181

	)

186 
	#__NR_puçmsg
 182

	)

187 
	#__NR_afs_sysˇŒ
 183

	)

188 
	#__NR_tuxˇŒ
 184

	)

189 
	#__NR_£curôy
 185

	)

190 
	#__NR_gëtid
 186

	)

191 
	#__NR_ªadahód
 187

	)

192 
	#__NR_£tx©å
 188

	)

193 
	#__NR_l£tx©å
 189

	)

194 
	#__NR_f£tx©å
 190

	)

195 
	#__NR_gëx©å
 191

	)

196 
	#__NR_lgëx©å
 192

	)

197 
	#__NR_fgëx©å
 193

	)

198 
	#__NR_li°x©å
 194

	)

199 
	#__NR_Œi°x©å
 195

	)

200 
	#__NR_Êi°x©å
 196

	)

201 
	#__NR_ªmovex©å
 197

	)

202 
	#__NR_Ãemovex©å
 198

	)

203 
	#__NR_‰emovex©å
 199

	)

204 
	#__NR_tkûl
 200

	)

205 
	#__NR_time
 201

	)

206 
	#__NR_fuãx
 202

	)

207 
	#__NR_sched_£èfföôy
 203

	)

208 
	#__NR_sched_gëafföôy
 204

	)

209 
	#__NR_£t_thªad_¨ó
 205

	)

210 
	#__NR_io_£tup
 206

	)

211 
	#__NR_io_de°roy
 207

	)

212 
	#__NR_io_gëevíts
 208

	)

213 
	#__NR_io_submô
 209

	)

214 
	#__NR_io_ˇn˚l
 210

	)

215 
	#__NR_gë_thªad_¨ó
 211

	)

216 
	#__NR_lookup_dcookõ
 212

	)

217 
	#__NR_ïﬁl_¸óã
 213

	)

218 
	#__NR_ïﬁl_˘l_ﬁd
 214

	)

219 
	#__NR_ïﬁl_waô_ﬁd
 215

	)

220 
	#__NR_ªm≠_fûe_∑ges
 216

	)

221 
	#__NR_gëdíts64
 217

	)

222 
	#__NR_£t_tid_addªss
 218

	)

223 
	#__NR_ª°¨t_sysˇŒ
 219

	)

224 
	#__NR_£mtimed›
 220

	)

225 
	#__NR_Ádvi£64
 221

	)

226 
	#__NR_timî_¸óã
 222

	)

227 
	#__NR_timî_£âime
 223

	)

228 
	#__NR_timî_gëtime
 224

	)

229 
	#__NR_timî_gëovîrun
 225

	)

230 
	#__NR_timî_dñëe
 226

	)

231 
	#__NR_˛ock_£âime
 227

	)

232 
	#__NR_˛ock_gëtime
 228

	)

233 
	#__NR_˛ock_gëªs
 229

	)

234 
	#__NR_˛ock_«no¶ìp
 230

	)

235 
	#__NR_exô_group
 231

	)

236 
	#__NR_ïﬁl_waô
 232

	)

237 
	#__NR_ïﬁl_˘l
 233

	)

238 
	#__NR_tgkûl
 234

	)

239 
	#__NR_utimes
 235

	)

240 
	#__NR_v£rvî
 236

	)

241 
	#__NR_mböd
 237

	)

242 
	#__NR_£t_mempﬁicy
 238

	)

243 
	#__NR_gë_mempﬁicy
 239

	)

244 
	#__NR_mq_›í
 240

	)

245 
	#__NR_mq_u∆ök
 241

	)

246 
	#__NR_mq_timed£nd
 242

	)

247 
	#__NR_mq_timedª˚ive
 243

	)

248 
	#__NR_mq_nŸify
 244

	)

249 
	#__NR_mq_gë£èâr
 245

	)

250 
	#__NR_kexec_lﬂd
 246

	)

251 
	#__NR_waôid
 247

	)

252 
	#__NR_add_key
 248

	)

253 
	#__NR_ªque°_key
 249

	)

254 
	#__NR_key˘l
 250

	)

255 
	#__NR_i›rio_£t
 251

	)

256 
	#__NR_i›rio_gë
 252

	)

257 
	#__NR_öŸify_öô
 253

	)

258 
	#__NR_öŸify_add_w©ch
 254

	)

259 
	#__NR_öŸify_rm_w©ch
 255

	)

260 
	#__NR_migøã_∑ges
 256

	)

261 
	#__NR_›í©
 257

	)

262 
	#__NR_mkdú©
 258

	)

263 
	#__NR_mknod©
 259

	)

264 
	#__NR_fchow«t
 260

	)

265 
	#__NR_futimeßt
 261

	)

266 
	#__NR_√wf°©©
 262

	)

267 
	#__NR_u∆ök©
 263

	)

268 
	#__NR_ª«mót
 264

	)

269 
	#__NR_lök©
 265

	)

270 
	#__NR_symlök©
 266

	)

271 
	#__NR_ªadlök©
 267

	)

272 
	#__NR_fchmod©
 268

	)

273 
	#__NR_Ác˚sßt
 269

	)

274 
	#__NR_p£À˘6
 270

	)

275 
	#__NR_µﬁl
 271

	)

276 
	#__NR_unsh¨e
 272

	)

277 
	#__NR_£t_robu°_li°
 273

	)

278 
	#__NR_gë_robu°_li°
 274

	)

279 
	#__NR_•li˚
 275

	)

280 
	#__NR_ãe
 276

	)

281 
	#__NR_sync_fûe_ønge
 277

	)

282 
	#__NR_vm•li˚
 278

	)

283 
	#__NR_move_∑ges
 279

	)

284 
	#__NR_utimíßt
 280

	)

285 
	#__NR_ïﬁl_pwaô
 281

	)

286 
	#__NR_sig«lfd
 282

	)

287 
	#__NR_timîfd_¸óã
 283

	)

288 
	#__NR_evítfd
 284

	)

289 
	#__NR_ÁŒoˇã
 285

	)

290 
	#__NR_timîfd_£âime
 286

	)

291 
	#__NR_timîfd_gëtime
 287

	)

292 
	#__NR_ac˚±4
 288

	)

293 
	#__NR_sig«lfd4
 289

	)

294 
	#__NR_evítfd2
 290

	)

295 
	#__NR_ïﬁl_¸óã1
 291

	)

296 
	#__NR_dup3
 292

	)

297 
	#__NR_pùe2
 293

	)

298 
	#__NR_öŸify_öô1
 294

	)

299 
	#__NR_¥ódv
 295

	)

300 
	#__NR_pwrôev
 296

	)

301 
	#__NR_π_tgsigqueueöfo
 297

	)

302 
	#__NR_≥rf_evít_›í
 298

	)

303 
	#__NR_ªcvmmsg
 299

	)

304 
	#__NR_ÁnŸify_öô
 300

	)

305 
	#__NR_ÁnŸify_m¨k
 301

	)

306 
	#__NR_¥limô64
 302

	)

307 
	#__NR_«me_to_h™dÀ_©
 303

	)

308 
	#__NR_›í_by_h™dÀ_©
 304

	)

309 
	#__NR_˛ock_adjtime
 305

	)

310 
	#__NR_syncfs
 306

	)

311 
	#__NR_£ndmmsg
 307

	)

312 
	#__NR_£äs
 308

	)

313 
	#__NR_gë˝u
 309

	)

314 
	#__NR_¥o˚ss_vm_ªadv
 310

	)

315 
	#__NR_¥o˚ss_vm_wrôev
 311

	)

316 
	#__NR_kcmp
 312

	)

317 
	#__NR_föô_moduÀ
 313

	)

	@/usr/include/asm/unistd_x32.h

1 #i‚de‡
_ASM_X86_UNISTD_X32_H


2 
	#_ASM_X86_UNISTD_X32_H
 1

	)

4 
	#__NR_ªad
 (
__X32_SYSCALL_BIT
 + 0)

	)

5 
	#__NR_wrôe
 (
__X32_SYSCALL_BIT
 + 1)

	)

6 
	#__NR_›í
 (
__X32_SYSCALL_BIT
 + 2)

	)

7 
	#__NR_˛o£
 (
__X32_SYSCALL_BIT
 + 3)

	)

8 
	#__NR_°©
 (
__X32_SYSCALL_BIT
 + 4)

	)

9 
	#__NR_f°©
 (
__X32_SYSCALL_BIT
 + 5)

	)

10 
	#__NR_l°©
 (
__X32_SYSCALL_BIT
 + 6)

	)

11 
	#__NR_pﬁl
 (
__X32_SYSCALL_BIT
 + 7)

	)

12 
	#__NR_l£ek
 (
__X32_SYSCALL_BIT
 + 8)

	)

13 
	#__NR_mm≠
 (
__X32_SYSCALL_BIT
 + 9)

	)

14 
	#__NR_m¥Ÿe˘
 (
__X32_SYSCALL_BIT
 + 10)

	)

15 
	#__NR_munm≠
 (
__X32_SYSCALL_BIT
 + 11)

	)

16 
	#__NR_brk
 (
__X32_SYSCALL_BIT
 + 12)

	)

17 
	#__NR_π_sig¥ocmask
 (
__X32_SYSCALL_BIT
 + 14)

	)

18 
	#__NR_¥ód64
 (
__X32_SYSCALL_BIT
 + 17)

	)

19 
	#__NR_pwrôe64
 (
__X32_SYSCALL_BIT
 + 18)

	)

20 
	#__NR_ac˚ss
 (
__X32_SYSCALL_BIT
 + 21)

	)

21 
	#__NR_pùe
 (
__X32_SYSCALL_BIT
 + 22)

	)

22 
	#__NR_£À˘
 (
__X32_SYSCALL_BIT
 + 23)

	)

23 
	#__NR_sched_yõld
 (
__X32_SYSCALL_BIT
 + 24)

	)

24 
	#__NR_mªm≠
 (
__X32_SYSCALL_BIT
 + 25)

	)

25 
	#__NR_msync
 (
__X32_SYSCALL_BIT
 + 26)

	)

26 
	#__NR_möc‹e
 (
__X32_SYSCALL_BIT
 + 27)

	)

27 
	#__NR_madvi£
 (
__X32_SYSCALL_BIT
 + 28)

	)

28 
	#__NR_shmgë
 (
__X32_SYSCALL_BIT
 + 29)

	)

29 
	#__NR_shm©
 (
__X32_SYSCALL_BIT
 + 30)

	)

30 
	#__NR_shm˘l
 (
__X32_SYSCALL_BIT
 + 31)

	)

31 
	#__NR_dup
 (
__X32_SYSCALL_BIT
 + 32)

	)

32 
	#__NR_dup2
 (
__X32_SYSCALL_BIT
 + 33)

	)

33 
	#__NR_∑u£
 (
__X32_SYSCALL_BIT
 + 34)

	)

34 
	#__NR_«no¶ìp
 (
__X32_SYSCALL_BIT
 + 35)

	)

35 
	#__NR_gëôimî
 (
__X32_SYSCALL_BIT
 + 36)

	)

36 
	#__NR_Æ¨m
 (
__X32_SYSCALL_BIT
 + 37)

	)

37 
	#__NR_£tôimî
 (
__X32_SYSCALL_BIT
 + 38)

	)

38 
	#__NR_gëpid
 (
__X32_SYSCALL_BIT
 + 39)

	)

39 
	#__NR_£ndfûe
 (
__X32_SYSCALL_BIT
 + 40)

	)

40 
	#__NR_sockë
 (
__X32_SYSCALL_BIT
 + 41)

	)

41 
	#__NR_c⁄√˘
 (
__X32_SYSCALL_BIT
 + 42)

	)

42 
	#__NR_ac˚±
 (
__X32_SYSCALL_BIT
 + 43)

	)

43 
	#__NR_£ndto
 (
__X32_SYSCALL_BIT
 + 44)

	)

44 
	#__NR_shutdown
 (
__X32_SYSCALL_BIT
 + 48)

	)

45 
	#__NR_böd
 (
__X32_SYSCALL_BIT
 + 49)

	)

46 
	#__NR_li°í
 (
__X32_SYSCALL_BIT
 + 50)

	)

47 
	#__NR_gësock«me
 (
__X32_SYSCALL_BIT
 + 51)

	)

48 
	#__NR_gë≥î«me
 (
__X32_SYSCALL_BIT
 + 52)

	)

49 
	#__NR_sockë∑ú
 (
__X32_SYSCALL_BIT
 + 53)

	)

50 
	#__NR_˛⁄e
 (
__X32_SYSCALL_BIT
 + 56)

	)

51 
	#__NR_f‹k
 (
__X32_SYSCALL_BIT
 + 57)

	)

52 
	#__NR_vf‹k
 (
__X32_SYSCALL_BIT
 + 58)

	)

53 
	#__NR_exô
 (
__X32_SYSCALL_BIT
 + 60)

	)

54 
	#__NR_waô4
 (
__X32_SYSCALL_BIT
 + 61)

	)

55 
	#__NR_kûl
 (
__X32_SYSCALL_BIT
 + 62)

	)

56 
	#__NR_u«me
 (
__X32_SYSCALL_BIT
 + 63)

	)

57 
	#__NR_£mgë
 (
__X32_SYSCALL_BIT
 + 64)

	)

58 
	#__NR_£m›
 (
__X32_SYSCALL_BIT
 + 65)

	)

59 
	#__NR_£m˘l
 (
__X32_SYSCALL_BIT
 + 66)

	)

60 
	#__NR_shmdt
 (
__X32_SYSCALL_BIT
 + 67)

	)

61 
	#__NR_msggë
 (
__X32_SYSCALL_BIT
 + 68)

	)

62 
	#__NR_msg¢d
 (
__X32_SYSCALL_BIT
 + 69)

	)

63 
	#__NR_msgrcv
 (
__X32_SYSCALL_BIT
 + 70)

	)

64 
	#__NR_msg˘l
 (
__X32_SYSCALL_BIT
 + 71)

	)

65 
	#__NR_f˙é
 (
__X32_SYSCALL_BIT
 + 72)

	)

66 
	#__NR_Êock
 (
__X32_SYSCALL_BIT
 + 73)

	)

67 
	#__NR_fsync
 (
__X32_SYSCALL_BIT
 + 74)

	)

68 
	#__NR_fd©async
 (
__X32_SYSCALL_BIT
 + 75)

	)

69 
	#__NR_åunˇã
 (
__X32_SYSCALL_BIT
 + 76)

	)

70 
	#__NR_·runˇã
 (
__X32_SYSCALL_BIT
 + 77)

	)

71 
	#__NR_gëdíts
 (
__X32_SYSCALL_BIT
 + 78)

	)

72 
	#__NR_gëcwd
 (
__X32_SYSCALL_BIT
 + 79)

	)

73 
	#__NR_chdú
 (
__X32_SYSCALL_BIT
 + 80)

	)

74 
	#__NR_fchdú
 (
__X32_SYSCALL_BIT
 + 81)

	)

75 
	#__NR_ª«me
 (
__X32_SYSCALL_BIT
 + 82)

	)

76 
	#__NR_mkdú
 (
__X32_SYSCALL_BIT
 + 83)

	)

77 
	#__NR_rmdú
 (
__X32_SYSCALL_BIT
 + 84)

	)

78 
	#__NR_¸ót
 (
__X32_SYSCALL_BIT
 + 85)

	)

79 
	#__NR_lök
 (
__X32_SYSCALL_BIT
 + 86)

	)

80 
	#__NR_u∆ök
 (
__X32_SYSCALL_BIT
 + 87)

	)

81 
	#__NR_symlök
 (
__X32_SYSCALL_BIT
 + 88)

	)

82 
	#__NR_ªadlök
 (
__X32_SYSCALL_BIT
 + 89)

	)

83 
	#__NR_chmod
 (
__X32_SYSCALL_BIT
 + 90)

	)

84 
	#__NR_fchmod
 (
__X32_SYSCALL_BIT
 + 91)

	)

85 
	#__NR_chown
 (
__X32_SYSCALL_BIT
 + 92)

	)

86 
	#__NR_fchown
 (
__X32_SYSCALL_BIT
 + 93)

	)

87 
	#__NR_lchown
 (
__X32_SYSCALL_BIT
 + 94)

	)

88 
	#__NR_umask
 (
__X32_SYSCALL_BIT
 + 95)

	)

89 
	#__NR_gëtimeofday
 (
__X32_SYSCALL_BIT
 + 96)

	)

90 
	#__NR_gëæimô
 (
__X32_SYSCALL_BIT
 + 97)

	)

91 
	#__NR_gërußge
 (
__X32_SYSCALL_BIT
 + 98)

	)

92 
	#__NR_sysöfo
 (
__X32_SYSCALL_BIT
 + 99)

	)

93 
	#__NR_times
 (
__X32_SYSCALL_BIT
 + 100)

	)

94 
	#__NR_gëuid
 (
__X32_SYSCALL_BIT
 + 102)

	)

95 
	#__NR_sy¶og
 (
__X32_SYSCALL_BIT
 + 103)

	)

96 
	#__NR_gëgid
 (
__X32_SYSCALL_BIT
 + 104)

	)

97 
	#__NR_£tuid
 (
__X32_SYSCALL_BIT
 + 105)

	)

98 
	#__NR_£tgid
 (
__X32_SYSCALL_BIT
 + 106)

	)

99 
	#__NR_gëeuid
 (
__X32_SYSCALL_BIT
 + 107)

	)

100 
	#__NR_gëegid
 (
__X32_SYSCALL_BIT
 + 108)

	)

101 
	#__NR_£çgid
 (
__X32_SYSCALL_BIT
 + 109)

	)

102 
	#__NR_gëµid
 (
__X32_SYSCALL_BIT
 + 110)

	)

103 
	#__NR_gëpgΩ
 (
__X32_SYSCALL_BIT
 + 111)

	)

104 
	#__NR_£tsid
 (
__X32_SYSCALL_BIT
 + 112)

	)

105 
	#__NR_£åeuid
 (
__X32_SYSCALL_BIT
 + 113)

	)

106 
	#__NR_£åegid
 (
__X32_SYSCALL_BIT
 + 114)

	)

107 
	#__NR_gëgroups
 (
__X32_SYSCALL_BIT
 + 115)

	)

108 
	#__NR_£tgroups
 (
__X32_SYSCALL_BIT
 + 116)

	)

109 
	#__NR_£åesuid
 (
__X32_SYSCALL_BIT
 + 117)

	)

110 
	#__NR_gëªsuid
 (
__X32_SYSCALL_BIT
 + 118)

	)

111 
	#__NR_£åesgid
 (
__X32_SYSCALL_BIT
 + 119)

	)

112 
	#__NR_gëªsgid
 (
__X32_SYSCALL_BIT
 + 120)

	)

113 
	#__NR_gëpgid
 (
__X32_SYSCALL_BIT
 + 121)

	)

114 
	#__NR_£tfsuid
 (
__X32_SYSCALL_BIT
 + 122)

	)

115 
	#__NR_£tfsgid
 (
__X32_SYSCALL_BIT
 + 123)

	)

116 
	#__NR_gësid
 (
__X32_SYSCALL_BIT
 + 124)

	)

117 
	#__NR_ˇpgë
 (
__X32_SYSCALL_BIT
 + 125)

	)

118 
	#__NR_ˇp£t
 (
__X32_SYSCALL_BIT
 + 126)

	)

119 
	#__NR_π_sigsu•íd
 (
__X32_SYSCALL_BIT
 + 130)

	)

120 
	#__NR_utime
 (
__X32_SYSCALL_BIT
 + 132)

	)

121 
	#__NR_mknod
 (
__X32_SYSCALL_BIT
 + 133)

	)

122 
	#__NR_≥rs⁄Æôy
 (
__X32_SYSCALL_BIT
 + 135)

	)

123 
	#__NR_u°©
 (
__X32_SYSCALL_BIT
 + 136)

	)

124 
	#__NR_°©fs
 (
__X32_SYSCALL_BIT
 + 137)

	)

125 
	#__NR_f°©fs
 (
__X32_SYSCALL_BIT
 + 138)

	)

126 
	#__NR_sysfs
 (
__X32_SYSCALL_BIT
 + 139)

	)

127 
	#__NR_gë¥i‹ôy
 (
__X32_SYSCALL_BIT
 + 140)

	)

128 
	#__NR_£çri‹ôy
 (
__X32_SYSCALL_BIT
 + 141)

	)

129 
	#__NR_sched_£ç¨am
 (
__X32_SYSCALL_BIT
 + 142)

	)

130 
	#__NR_sched_gë∑øm
 (
__X32_SYSCALL_BIT
 + 143)

	)

131 
	#__NR_sched_£tscheduÀr
 (
__X32_SYSCALL_BIT
 + 144)

	)

132 
	#__NR_sched_gëscheduÀr
 (
__X32_SYSCALL_BIT
 + 145)

	)

133 
	#__NR_sched_gë_¥i‹ôy_max
 (
__X32_SYSCALL_BIT
 + 146)

	)

134 
	#__NR_sched_gë_¥i‹ôy_mö
 (
__X32_SYSCALL_BIT
 + 147)

	)

135 
	#__NR_sched_º_gë_öãrvÆ
 (
__X32_SYSCALL_BIT
 + 148)

	)

136 
	#__NR_mlock
 (
__X32_SYSCALL_BIT
 + 149)

	)

137 
	#__NR_mu∆ock
 (
__X32_SYSCALL_BIT
 + 150)

	)

138 
	#__NR_mlockÆl
 (
__X32_SYSCALL_BIT
 + 151)

	)

139 
	#__NR_mu∆ockÆl
 (
__X32_SYSCALL_BIT
 + 152)

	)

140 
	#__NR_vh™gup
 (
__X32_SYSCALL_BIT
 + 153)

	)

141 
	#__NR_modify_ldt
 (
__X32_SYSCALL_BIT
 + 154)

	)

142 
	#__NR_pivŸ_roŸ
 (
__X32_SYSCALL_BIT
 + 155)

	)

143 
	#__NR_¥˘l
 (
__X32_SYSCALL_BIT
 + 157)

	)

144 
	#__NR_¨ch_¥˘l
 (
__X32_SYSCALL_BIT
 + 158)

	)

145 
	#__NR_adjtimex
 (
__X32_SYSCALL_BIT
 + 159)

	)

146 
	#__NR_£ålimô
 (
__X32_SYSCALL_BIT
 + 160)

	)

147 
	#__NR_chroŸ
 (
__X32_SYSCALL_BIT
 + 161)

	)

148 
	#__NR_sync
 (
__X32_SYSCALL_BIT
 + 162)

	)

149 
	#__NR_ac˘
 (
__X32_SYSCALL_BIT
 + 163)

	)

150 
	#__NR_£âimeofday
 (
__X32_SYSCALL_BIT
 + 164)

	)

151 
	#__NR_mou¡
 (
__X32_SYSCALL_BIT
 + 165)

	)

152 
	#__NR_umou¡2
 (
__X32_SYSCALL_BIT
 + 166)

	)

153 
	#__NR_sw≠⁄
 (
__X32_SYSCALL_BIT
 + 167)

	)

154 
	#__NR_sw≠off
 (
__X32_SYSCALL_BIT
 + 168)

	)

155 
	#__NR_ªboŸ
 (
__X32_SYSCALL_BIT
 + 169)

	)

156 
	#__NR_£tho°«me
 (
__X32_SYSCALL_BIT
 + 170)

	)

157 
	#__NR_£tdomaö«me
 (
__X32_SYSCALL_BIT
 + 171)

	)

158 
	#__NR_i›l
 (
__X32_SYSCALL_BIT
 + 172)

	)

159 
	#__NR_i›îm
 (
__X32_SYSCALL_BIT
 + 173)

	)

160 
	#__NR_öô_moduÀ
 (
__X32_SYSCALL_BIT
 + 175)

	)

161 
	#__NR_dñëe_moduÀ
 (
__X32_SYSCALL_BIT
 + 176)

	)

162 
	#__NR_quŸa˘l
 (
__X32_SYSCALL_BIT
 + 179)

	)

163 
	#__NR_gëpmsg
 (
__X32_SYSCALL_BIT
 + 181)

	)

164 
	#__NR_puçmsg
 (
__X32_SYSCALL_BIT
 + 182)

	)

165 
	#__NR_afs_sysˇŒ
 (
__X32_SYSCALL_BIT
 + 183)

	)

166 
	#__NR_tuxˇŒ
 (
__X32_SYSCALL_BIT
 + 184)

	)

167 
	#__NR_£curôy
 (
__X32_SYSCALL_BIT
 + 185)

	)

168 
	#__NR_gëtid
 (
__X32_SYSCALL_BIT
 + 186)

	)

169 
	#__NR_ªadahód
 (
__X32_SYSCALL_BIT
 + 187)

	)

170 
	#__NR_£tx©å
 (
__X32_SYSCALL_BIT
 + 188)

	)

171 
	#__NR_l£tx©å
 (
__X32_SYSCALL_BIT
 + 189)

	)

172 
	#__NR_f£tx©å
 (
__X32_SYSCALL_BIT
 + 190)

	)

173 
	#__NR_gëx©å
 (
__X32_SYSCALL_BIT
 + 191)

	)

174 
	#__NR_lgëx©å
 (
__X32_SYSCALL_BIT
 + 192)

	)

175 
	#__NR_fgëx©å
 (
__X32_SYSCALL_BIT
 + 193)

	)

176 
	#__NR_li°x©å
 (
__X32_SYSCALL_BIT
 + 194)

	)

177 
	#__NR_Œi°x©å
 (
__X32_SYSCALL_BIT
 + 195)

	)

178 
	#__NR_Êi°x©å
 (
__X32_SYSCALL_BIT
 + 196)

	)

179 
	#__NR_ªmovex©å
 (
__X32_SYSCALL_BIT
 + 197)

	)

180 
	#__NR_Ãemovex©å
 (
__X32_SYSCALL_BIT
 + 198)

	)

181 
	#__NR_‰emovex©å
 (
__X32_SYSCALL_BIT
 + 199)

	)

182 
	#__NR_tkûl
 (
__X32_SYSCALL_BIT
 + 200)

	)

183 
	#__NR_time
 (
__X32_SYSCALL_BIT
 + 201)

	)

184 
	#__NR_fuãx
 (
__X32_SYSCALL_BIT
 + 202)

	)

185 
	#__NR_sched_£èfföôy
 (
__X32_SYSCALL_BIT
 + 203)

	)

186 
	#__NR_sched_gëafföôy
 (
__X32_SYSCALL_BIT
 + 204)

	)

187 
	#__NR_io_£tup
 (
__X32_SYSCALL_BIT
 + 206)

	)

188 
	#__NR_io_de°roy
 (
__X32_SYSCALL_BIT
 + 207)

	)

189 
	#__NR_io_gëevíts
 (
__X32_SYSCALL_BIT
 + 208)

	)

190 
	#__NR_io_submô
 (
__X32_SYSCALL_BIT
 + 209)

	)

191 
	#__NR_io_ˇn˚l
 (
__X32_SYSCALL_BIT
 + 210)

	)

192 
	#__NR_lookup_dcookõ
 (
__X32_SYSCALL_BIT
 + 212)

	)

193 
	#__NR_ïﬁl_¸óã
 (
__X32_SYSCALL_BIT
 + 213)

	)

194 
	#__NR_ªm≠_fûe_∑ges
 (
__X32_SYSCALL_BIT
 + 216)

	)

195 
	#__NR_gëdíts64
 (
__X32_SYSCALL_BIT
 + 217)

	)

196 
	#__NR_£t_tid_addªss
 (
__X32_SYSCALL_BIT
 + 218)

	)

197 
	#__NR_ª°¨t_sysˇŒ
 (
__X32_SYSCALL_BIT
 + 219)

	)

198 
	#__NR_£mtimed›
 (
__X32_SYSCALL_BIT
 + 220)

	)

199 
	#__NR_Ádvi£64
 (
__X32_SYSCALL_BIT
 + 221)

	)

200 
	#__NR_timî_£âime
 (
__X32_SYSCALL_BIT
 + 223)

	)

201 
	#__NR_timî_gëtime
 (
__X32_SYSCALL_BIT
 + 224)

	)

202 
	#__NR_timî_gëovîrun
 (
__X32_SYSCALL_BIT
 + 225)

	)

203 
	#__NR_timî_dñëe
 (
__X32_SYSCALL_BIT
 + 226)

	)

204 
	#__NR_˛ock_£âime
 (
__X32_SYSCALL_BIT
 + 227)

	)

205 
	#__NR_˛ock_gëtime
 (
__X32_SYSCALL_BIT
 + 228)

	)

206 
	#__NR_˛ock_gëªs
 (
__X32_SYSCALL_BIT
 + 229)

	)

207 
	#__NR_˛ock_«no¶ìp
 (
__X32_SYSCALL_BIT
 + 230)

	)

208 
	#__NR_exô_group
 (
__X32_SYSCALL_BIT
 + 231)

	)

209 
	#__NR_ïﬁl_waô
 (
__X32_SYSCALL_BIT
 + 232)

	)

210 
	#__NR_ïﬁl_˘l
 (
__X32_SYSCALL_BIT
 + 233)

	)

211 
	#__NR_tgkûl
 (
__X32_SYSCALL_BIT
 + 234)

	)

212 
	#__NR_utimes
 (
__X32_SYSCALL_BIT
 + 235)

	)

213 
	#__NR_mböd
 (
__X32_SYSCALL_BIT
 + 237)

	)

214 
	#__NR_£t_mempﬁicy
 (
__X32_SYSCALL_BIT
 + 238)

	)

215 
	#__NR_gë_mempﬁicy
 (
__X32_SYSCALL_BIT
 + 239)

	)

216 
	#__NR_mq_›í
 (
__X32_SYSCALL_BIT
 + 240)

	)

217 
	#__NR_mq_u∆ök
 (
__X32_SYSCALL_BIT
 + 241)

	)

218 
	#__NR_mq_timed£nd
 (
__X32_SYSCALL_BIT
 + 242)

	)

219 
	#__NR_mq_timedª˚ive
 (
__X32_SYSCALL_BIT
 + 243)

	)

220 
	#__NR_mq_gë£èâr
 (
__X32_SYSCALL_BIT
 + 245)

	)

221 
	#__NR_add_key
 (
__X32_SYSCALL_BIT
 + 248)

	)

222 
	#__NR_ªque°_key
 (
__X32_SYSCALL_BIT
 + 249)

	)

223 
	#__NR_key˘l
 (
__X32_SYSCALL_BIT
 + 250)

	)

224 
	#__NR_i›rio_£t
 (
__X32_SYSCALL_BIT
 + 251)

	)

225 
	#__NR_i›rio_gë
 (
__X32_SYSCALL_BIT
 + 252)

	)

226 
	#__NR_öŸify_öô
 (
__X32_SYSCALL_BIT
 + 253)

	)

227 
	#__NR_öŸify_add_w©ch
 (
__X32_SYSCALL_BIT
 + 254)

	)

228 
	#__NR_öŸify_rm_w©ch
 (
__X32_SYSCALL_BIT
 + 255)

	)

229 
	#__NR_migøã_∑ges
 (
__X32_SYSCALL_BIT
 + 256)

	)

230 
	#__NR_›í©
 (
__X32_SYSCALL_BIT
 + 257)

	)

231 
	#__NR_mkdú©
 (
__X32_SYSCALL_BIT
 + 258)

	)

232 
	#__NR_mknod©
 (
__X32_SYSCALL_BIT
 + 259)

	)

233 
	#__NR_fchow«t
 (
__X32_SYSCALL_BIT
 + 260)

	)

234 
	#__NR_futimeßt
 (
__X32_SYSCALL_BIT
 + 261)

	)

235 
	#__NR_√wf°©©
 (
__X32_SYSCALL_BIT
 + 262)

	)

236 
	#__NR_u∆ök©
 (
__X32_SYSCALL_BIT
 + 263)

	)

237 
	#__NR_ª«mót
 (
__X32_SYSCALL_BIT
 + 264)

	)

238 
	#__NR_lök©
 (
__X32_SYSCALL_BIT
 + 265)

	)

239 
	#__NR_symlök©
 (
__X32_SYSCALL_BIT
 + 266)

	)

240 
	#__NR_ªadlök©
 (
__X32_SYSCALL_BIT
 + 267)

	)

241 
	#__NR_fchmod©
 (
__X32_SYSCALL_BIT
 + 268)

	)

242 
	#__NR_Ác˚sßt
 (
__X32_SYSCALL_BIT
 + 269)

	)

243 
	#__NR_p£À˘6
 (
__X32_SYSCALL_BIT
 + 270)

	)

244 
	#__NR_µﬁl
 (
__X32_SYSCALL_BIT
 + 271)

	)

245 
	#__NR_unsh¨e
 (
__X32_SYSCALL_BIT
 + 272)

	)

246 
	#__NR_•li˚
 (
__X32_SYSCALL_BIT
 + 275)

	)

247 
	#__NR_ãe
 (
__X32_SYSCALL_BIT
 + 276)

	)

248 
	#__NR_sync_fûe_ønge
 (
__X32_SYSCALL_BIT
 + 277)

	)

249 
	#__NR_utimíßt
 (
__X32_SYSCALL_BIT
 + 280)

	)

250 
	#__NR_ïﬁl_pwaô
 (
__X32_SYSCALL_BIT
 + 281)

	)

251 
	#__NR_sig«lfd
 (
__X32_SYSCALL_BIT
 + 282)

	)

252 
	#__NR_timîfd_¸óã
 (
__X32_SYSCALL_BIT
 + 283)

	)

253 
	#__NR_evítfd
 (
__X32_SYSCALL_BIT
 + 284)

	)

254 
	#__NR_ÁŒoˇã
 (
__X32_SYSCALL_BIT
 + 285)

	)

255 
	#__NR_timîfd_£âime
 (
__X32_SYSCALL_BIT
 + 286)

	)

256 
	#__NR_timîfd_gëtime
 (
__X32_SYSCALL_BIT
 + 287)

	)

257 
	#__NR_ac˚±4
 (
__X32_SYSCALL_BIT
 + 288)

	)

258 
	#__NR_sig«lfd4
 (
__X32_SYSCALL_BIT
 + 289)

	)

259 
	#__NR_evítfd2
 (
__X32_SYSCALL_BIT
 + 290)

	)

260 
	#__NR_ïﬁl_¸óã1
 (
__X32_SYSCALL_BIT
 + 291)

	)

261 
	#__NR_dup3
 (
__X32_SYSCALL_BIT
 + 292)

	)

262 
	#__NR_pùe2
 (
__X32_SYSCALL_BIT
 + 293)

	)

263 
	#__NR_öŸify_öô1
 (
__X32_SYSCALL_BIT
 + 294)

	)

264 
	#__NR_≥rf_evít_›í
 (
__X32_SYSCALL_BIT
 + 298)

	)

265 
	#__NR_ÁnŸify_öô
 (
__X32_SYSCALL_BIT
 + 300)

	)

266 
	#__NR_ÁnŸify_m¨k
 (
__X32_SYSCALL_BIT
 + 301)

	)

267 
	#__NR_¥limô64
 (
__X32_SYSCALL_BIT
 + 302)

	)

268 
	#__NR_«me_to_h™dÀ_©
 (
__X32_SYSCALL_BIT
 + 303)

	)

269 
	#__NR_›í_by_h™dÀ_©
 (
__X32_SYSCALL_BIT
 + 304)

	)

270 
	#__NR_˛ock_adjtime
 (
__X32_SYSCALL_BIT
 + 305)

	)

271 
	#__NR_syncfs
 (
__X32_SYSCALL_BIT
 + 306)

	)

272 
	#__NR_£äs
 (
__X32_SYSCALL_BIT
 + 308)

	)

273 
	#__NR_gë˝u
 (
__X32_SYSCALL_BIT
 + 309)

	)

274 
	#__NR_kcmp
 (
__X32_SYSCALL_BIT
 + 312)

	)

275 
	#__NR_föô_moduÀ
 (
__X32_SYSCALL_BIT
 + 313)

	)

276 
	#__NR_π_siga˘i⁄
 (
__X32_SYSCALL_BIT
 + 512)

	)

277 
	#__NR_π_sigªtu∫
 (
__X32_SYSCALL_BIT
 + 513)

	)

278 
	#__NR_io˘l
 (
__X32_SYSCALL_BIT
 + 514)

	)

279 
	#__NR_ªadv
 (
__X32_SYSCALL_BIT
 + 515)

	)

280 
	#__NR_wrôev
 (
__X32_SYSCALL_BIT
 + 516)

	)

281 
	#__NR_ªcv‰om
 (
__X32_SYSCALL_BIT
 + 517)

	)

282 
	#__NR_£ndmsg
 (
__X32_SYSCALL_BIT
 + 518)

	)

283 
	#__NR_ªcvmsg
 (
__X32_SYSCALL_BIT
 + 519)

	)

284 
	#__NR_execve
 (
__X32_SYSCALL_BIT
 + 520)

	)

285 
	#__NR_±ø˚
 (
__X32_SYSCALL_BIT
 + 521)

	)

286 
	#__NR_π_sig≥ndög
 (
__X32_SYSCALL_BIT
 + 522)

	)

287 
	#__NR_π_sigtimedwaô
 (
__X32_SYSCALL_BIT
 + 523)

	)

288 
	#__NR_π_sigqueueöfo
 (
__X32_SYSCALL_BIT
 + 524)

	)

289 
	#__NR_sigÆt°ack
 (
__X32_SYSCALL_BIT
 + 525)

	)

290 
	#__NR_timî_¸óã
 (
__X32_SYSCALL_BIT
 + 526)

	)

291 
	#__NR_mq_nŸify
 (
__X32_SYSCALL_BIT
 + 527)

	)

292 
	#__NR_kexec_lﬂd
 (
__X32_SYSCALL_BIT
 + 528)

	)

293 
	#__NR_waôid
 (
__X32_SYSCALL_BIT
 + 529)

	)

294 
	#__NR_£t_robu°_li°
 (
__X32_SYSCALL_BIT
 + 530)

	)

295 
	#__NR_gë_robu°_li°
 (
__X32_SYSCALL_BIT
 + 531)

	)

296 
	#__NR_vm•li˚
 (
__X32_SYSCALL_BIT
 + 532)

	)

297 
	#__NR_move_∑ges
 (
__X32_SYSCALL_BIT
 + 533)

	)

298 
	#__NR_¥ódv
 (
__X32_SYSCALL_BIT
 + 534)

	)

299 
	#__NR_pwrôev
 (
__X32_SYSCALL_BIT
 + 535)

	)

300 
	#__NR_π_tgsigqueueöfo
 (
__X32_SYSCALL_BIT
 + 536)

	)

301 
	#__NR_ªcvmmsg
 (
__X32_SYSCALL_BIT
 + 537)

	)

302 
	#__NR_£ndmmsg
 (
__X32_SYSCALL_BIT
 + 538)

	)

303 
	#__NR_¥o˚ss_vm_ªadv
 (
__X32_SYSCALL_BIT
 + 539)

	)

304 
	#__NR_¥o˚ss_vm_wrôev
 (
__X32_SYSCALL_BIT
 + 540)

	)

305 
	#__NR_£tsock›t
 (
__X32_SYSCALL_BIT
 + 541)

	)

306 
	#__NR_gësock›t
 (
__X32_SYSCALL_BIT
 + 542)

	)

	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

35 
	~<bôs/byãsw≠-16.h
>

38 
	#__bsw≠_c⁄°™t_32
(
x
) \

39 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

40 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

42 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 3)

44 
__ölöe
 

45 
	$__bsw≠_32
 (
__bsx
)

47  
	`__buûtö_bsw≠32
 (
__bsx
);

48 
	}
}

49 #ñi‡
__GNUC__
 >= 2

50 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

51 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

52 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

53 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

54 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

55 || 
deföed
 
	g__amdÁm10__
)

58 
	#__bsw≠_32
(
x
) \

59 (
__exãnsi⁄__
 \

60 ({ 
__v
, 
__x
 = (
x
); \

61 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

62 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

64 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

65 
__v
; }))

	)

67 
	#__bsw≠_32
(
x
) \

68 (
__exãnsi⁄__
 \

69 ({ 
__v
, 
__x
 = (
x
); \

70 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

71 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

73 
	`__asm__
 ("rorw $8, %w0;" \

76 : "Ù" (
__v
) \

77 : "0" (
__x
) \

79 
__v
; }))

	)

82 
	#__bsw≠_32
(
x
) \

83 (
__exãnsi⁄__
 \

84 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

87 
__ölöe
 

88 
	$__bsw≠_32
 (
__bsx
)

90  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

91 
	}
}

95 #i‡
__GNUC_PREREQ
 (2, 0)

97 
	#__bsw≠_c⁄°™t_64
(
x
) \

98 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

99 | (((
x
) & 0x00ff000000000000ull) >> 40) \

100 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

101 | (((
x
) & 0x000000ff00000000ull) >> 8) \

102 | (((
x
) & 0x00000000ff000000ull) << 8) \

103 | (((
x
) & 0x0000000000ff0000ull) << 24) \

104 | (((
x
) & 0x000000000000ff00ull) << 40) \

105 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

107 #i‡
__GNUC_PREREQ
 (4, 3)

108 
__ölöe
 
__uöt64_t


109 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

111  
	`__buûtö_bsw≠64
 (
__bsx
);

112 
	}
}

113 #ñi‡
__WORDSIZE
 == 64

114 
	#__bsw≠_64
(
x
) \

115 (
__exãnsi⁄__
 \

116 ({ 
__uöt64_t
 
__v
, 
__x
 = (
x
); \

117 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

118 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

120 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

121 
__v
; }))

	)

123 
	#__bsw≠_64
(
x
) \

124 (
__exãnsi⁄__
 \

125 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

126 
__l
[2]; } 
__w
, 
__r
; \

127 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

128 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

131 
__w
.
__Œ
 = (
x
); \

132 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

133 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

135 
__r
.
__Œ
; }))

	)

137 #ñi‡
__GLIBC_HAVE_LONG_LONG


138 
	#__bsw≠_c⁄°™t_64
(
x
) \

139 ((((
x
) & 0xff00000000000000ull) >> 56) \

140 | (((
x
) & 0x00ff000000000000ull) >> 40) \

141 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

142 | (((
x
) & 0x000000ff00000000ull) >> 8) \

143 | (((
x
) & 0x00000000ff000000ull) << 8) \

144 | (((
x
) & 0x0000000000ff0000ull) << 24) \

145 | (((
x
) & 0x000000000000ff00ull) << 40) \

146 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

148 
__ölöe
 
__uöt64_t


149 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

151  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

152 
	}
}

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

19 #i‚de‡
_IO_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

24 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

24 #i‚de‡
NR_OPEN


25 
	#__undef_NR_OPEN


	)

27 #i‚de‡
LINK_MAX


28 
	#__undef_LINK_MAX


	)

30 #i‚de‡
OPEN_MAX


31 
	#__undef_OPEN_MAX


	)

33 #i‚de‡
ARG_MAX


34 
	#__undef_ARG_MAX


	)

38 
	~<löux/limôs.h
>

41 #ifde‡
__undef_NR_OPEN


42 #unde‡
NR_OPEN


43 #unde‡
__undef_NR_OPEN


46 #ifde‡
__undef_LINK_MAX


47 #unde‡
LINK_MAX


48 #unde‡
__undef_LINK_MAX


51 #ifde‡
__undef_OPEN_MAX


52 #unde‡
OPEN_MAX


53 #unde‡
__undef_OPEN_MAX


56 #ifde‡
__undef_ARG_MAX


57 #unde‡
ARG_MAX


58 #unde‡
__undef_ARG_MAX


62 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

64 
	#PTHREAD_KEYS_MAX
 1024

	)

67 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

69 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

72 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

74 #unde‡
PTHREAD_THREADS_MAX


78 
	#AIO_PRIO_DELTA_MAX
 20

	)

81 
	#PTHREAD_STACK_MIN
 16384

	)

84 
	#DELAYTIMER_MAX
 2147483647

	)

87 
	#TTY_NAME_MAX
 32

	)

90 
	#LOGIN_NAME_MAX
 256

	)

93 
	#HOST_NAME_MAX
 64

	)

96 
	#MQ_PRIO_MAX
 32768

	)

99 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/stdio-lock.h

19 #i‚de‡
_BITS_STDIO_LOCK_H


20 
	#_BITS_STDIO_LOCK_H
 1

	)

22 
	~<bôs/libc-lock.h
>

24 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

27 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


28 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

29 #ñi‡
	t_IO_MTSAFE_IO


30 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


33 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

34 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

35 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

36 
	t_IO_lock_åylock
(
	t_«me
Ë
	t__libc_lock_åylock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

40 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

41 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

42 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

43 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

44 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

45 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

47 #i‡
	tdeföed
 
	t_LIBC
 && !deföed 
	tNOT_IN_libc


48 
	t_IO_acquúe_lock
(
	t_Â
) \

49 
	t_IO_˛ónup_ªgi⁄_°¨t
 (((*Ë(*)Ë
	t_IO_fu∆ockfûe
, (
	t_Â
)); \

50 
	`_IO_Êockfûe
 (
_Â
)

	)

52 
	#_IO_ªÀa£_lock
(
_Â
) \

53 
	`_IO_fu∆ockfûe
 (
_Â
); \

54 
	`_IO_˛ónup_ªgi⁄_íd
 (0)

	)

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

25 
	stimex


27 
	mmodes
;

28 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

29 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

30 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

31 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

32 
	m°©us
;

33 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

34 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

35 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

36 
timevÆ
 
	mtime
;

37 
__sysˇŒ_¶⁄g_t
 
	mtick
;

38 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

39 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

40 
	mshi·
;

41 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

42 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

43 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

75 #ifde‡
__x86_64__


79 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

82 
	#__INO_T_MATCHES_INO64_T
 1

	)

86 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/ctype.h

23 #i‚def 
_CTYPE_H


24 
	#_CTYPE_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	g__BEGIN_DECLS


31 #i‚de‡
_ISbô


40 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

44 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

49 
	m_ISuµî
 = 
_ISbô
 (0),

50 
	m_ISlowî
 = 
_ISbô
 (1),

51 
	m_ISÆpha
 = 
_ISbô
 (2),

52 
	m_ISdigô
 = 
_ISbô
 (3),

53 
	m_ISxdigô
 = 
_ISbô
 (4),

54 
	m_IS•a˚
 = 
_ISbô
 (5),

55 
	m_IS¥öt
 = 
_ISbô
 (6),

56 
	m_ISgøph
 = 
_ISbô
 (7),

57 
	m_ISbœnk
 = 
_ISbô
 (8),

58 
	m_IS˙ål
 = 
_ISbô
 (9),

59 
	m_ISpun˘
 = 
_ISbô
 (10),

60 
	m_ISÆnum
 = 
_ISbô
 (11)

80 c⁄° **
	$__˘y≥_b_loc
 ()

81 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

82 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

83 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

84 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

85 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

88 #i‚de‡
__˝lu•lus


89 
	#__is˘y≥
(
c
, 
ty≥
) \

90 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 #ñi‡
deföed
 
__USE_EXTERN_INLINES


92 
	#__is˘y≥_f
(
ty≥
) \

93 
__exã∫_ölöe
 \

94 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

96  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

97 
	}

	)
}

100 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

101 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

103 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

105 
__BEGIN_NAMESPACE_STD


111 
__ex˘y≥
 (
iß um
);

112 
__ex˘y≥
 (
ißÕha
);

113 
__ex˘y≥
 (
is˙ål
);

114 
__ex˘y≥
 (
isdigô
);

115 
__ex˘y≥
 (
i¶owî
);

116 
__ex˘y≥
 (
isgøph
);

117 
__ex˘y≥
 (
i•röt
);

118 
__ex˘y≥
 (
i•un˘
);

119 
__ex˘y≥
 (
is•a˚
);

120 
__ex˘y≥
 (
isuµî
);

121 
__ex˘y≥
 (
isxdigô
);

125 
	$tﬁowî
 (
__c
Ë
__THROW
;

128 
	$touµî
 (
__c
Ë
__THROW
;

130 
__END_NAMESPACE_STD


134 #ifdef 
__USE_ISOC99


135 
__BEGIN_NAMESPACE_C99


137 
	`__ex˘y≥
 (
isbœnk
);

139 
__END_NAMESPACE_C99


142 #ifde‡
__USE_GNU


144 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

147 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	$ißscii
 (
__c
Ë
__THROW
;

155 
	$tﬂscii
 (
__c
Ë
__THROW
;

159 
	`__ex˘y≥
 (
_touµî
);

160 
	`__ex˘y≥
 (
_tﬁowî
);

164 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

165 (
__exãnsi⁄__
 \

166 ({ 
__ªs
; \

167 i‡( (
c
) > 1) \

169 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

171 
__c
 = (
c
); \

172 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

175 
__ªs
 = 
f
 
¨gs
; \

178 
__ªs
 = (
a
)[(Ë(
c
)]; \

179 
__ªs
; 
	}
}))

	)

181 #i‡!
deföed
 
__NO_CTYPE


182 #ifde‡
__is˘y≥_f


183 
	$__is˘y≥_f
 (
Ænum
)

184 
	$__is˘y≥_f
 (
Æpha
)

185 
	$__is˘y≥_f
 (
˙ål
)

186 
	$__is˘y≥_f
 (
digô
)

187 
	$__is˘y≥_f
 (
lowî
)

188 
	$__is˘y≥_f
 (
gøph
)

189 
	$__is˘y≥_f
 (
¥öt
)

190 
	$__is˘y≥_f
 (
pun˘
)

191 
	$__is˘y≥_f
 (
•a˚
)

192 
	$__is˘y≥_f
 (
uµî
)

193 
	$__is˘y≥_f
 (
xdigô
)

194 #ifde‡
__USE_ISOC99


195 
	$__is˘y≥_f
 (
bœnk
)

197 #ñi‡
deföed
 
__is˘y≥


198 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

199 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

200 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

201 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

202 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

203 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

204 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

205 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

206 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

207 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

208 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

209 #ifde‡
__USE_ISOC99


210 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

214 #ifde‡
__USE_EXTERN_INLINES


215 
__exã∫_ölöe
 

216 
	`__NTH
 (
	$tﬁowî
 (
__c
))

218  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

219 
	}
}

221 
__exã∫_ölöe
 

222 
__NTH
 (
	$touµî
 (
__c
))

224  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

225 
	}
}

228 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


229 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

230 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

233 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


234 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

235 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

237 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

238 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

244 #ifde‡
__USE_XOPEN2K8


258 
	~<xloˇÀ.h
>

262 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

263 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

265 
	#__ex˘y≥_l
(
«me
) \

266 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

272 
__ex˘y≥_l
 (
iß um_l
);

273 
__ex˘y≥_l
 (
ißÕha_l
);

274 
__ex˘y≥_l
 (
is˙ål_l
);

275 
__ex˘y≥_l
 (
isdigô_l
);

276 
__ex˘y≥_l
 (
i¶owî_l
);

277 
__ex˘y≥_l
 (
isgøph_l
);

278 
__ex˘y≥_l
 (
i•röt_l
);

279 
__ex˘y≥_l
 (
i•un˘_l
);

280 
__ex˘y≥_l
 (
is•a˚_l
);

281 
__ex˘y≥_l
 (
isuµî_l
);

282 
__ex˘y≥_l
 (
isxdigô_l
);

284 
__ex˘y≥_l
 (
isbœnk_l
);

288 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

289 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

295 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


296 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

297 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

298 
	#__touµî_l
(
c
, 
loˇÀ
) \

299 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

300 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

301 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

305 #i‚de‡
__NO_CTYPE


306 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

307 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

308 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

309 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

310 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

311 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

312 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

313 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

314 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

315 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

316 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

318 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

320 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


321 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

322 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

325 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

326 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

327 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

328 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

329 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

330 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

331 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

332 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

333 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

334 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

335 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

337 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

339 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


340 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

341 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

348 
__END_DECLS


	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/linux/errno.h

1 
	~<asm/î∫o.h
>

	@/usr/include/linux/sysinfo.h

1 #i‚de‡
_LINUX_SYSINFO_H


2 
	#_LINUX_SYSINFO_H


	)

4 
	~<löux/ty≥s.h
>

6 
	#SI_LOAD_SHIFT
 16

	)

7 
	ssysöfo
 {

8 
__kî√l_l⁄g_t
 
	mu±ime
;

9 
__kî√l_ul⁄g_t
 
	mlﬂds
[3];

10 
__kî√l_ul⁄g_t
 
	mtŸÆøm
;

11 
__kî√l_ul⁄g_t
 
	m‰ìøm
;

12 
__kî√l_ul⁄g_t
 
	msh¨edøm
;

13 
__kî√l_ul⁄g_t
 
	mbuf„ºam
;

14 
__kî√l_ul⁄g_t
 
	mtŸÆsw≠
;

15 
__kî√l_ul⁄g_t
 
	m‰ìsw≠
;

16 
__u16
 
	m¥ocs
;

17 
__u16
 
	m∑d
;

18 
__kî√l_ul⁄g_t
 
	mtŸÆhigh
;

19 
__kî√l_ul⁄g_t
 
	m‰ìhigh
;

20 
__u32
 
	mmem_unô
;

21 
	m_f
[20-2*(
__kî√l_ul⁄g_t
)-(
__u32
)];

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

46 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

48 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

30 
	#__STDC_IEC_559__
 1

	)

31 
	#__STDC_IEC_559_COMPLEX__
 1

	)

35 
	#__STDC_ISO_10646__
 201103L

	)

38 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/sys/cdefs.h

19 #i‚def 
_SYS_CDEFS_H


20 
	#_SYS_CDEFS_H
 1

	)

23 #i‚de‡
_FEATURES_H


24 
	~<„©uªs.h
>

30 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


35 #unde‡
__P


36 #unde‡
__PMT


38 #ifde‡
__GNUC__


42 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


43 
	#__LEAF
 , 
__Àaf__


	)

44 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

46 
	#__LEAF


	)

47 
	#__LEAF_ATTR


	)

55 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

56 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

57 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

58 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

60 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

61 
	#__THROW
 
	`throw
 ()

	)

62 
	#__THROWNL
 
	`throw
 ()

	)

63 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

65 
	#__THROW


	)

66 
	#__THROWNL


	)

67 
	#__NTH
(
f˘
Ë
	)
fct

73 
	#__ölöe


	)

75 
	#__THROW


	)

76 
	#__THROWNL


	)

77 
	#__NTH
(
f˘
Ë
	)
fct

83 
	#__P
(
¨gs
Ë
	)
args

84 
	#__PMT
(
¨gs
Ë
	)
args

89 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

90 
	#__STRING
(
x
Ë#x

	)

93 
	#__±r_t
 *

	)

94 
	#__l⁄g_doubÀ_t
 

	)

98 #ifdef 
__˝lu•lus


99 
	#__BEGIN_DECLS
 "C" {

	)

100 
	#__END_DECLS
 }

	)

102 
	#__BEGIN_DECLS


	)

103 
	#__END_DECLS


	)

112 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


113 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

114 
	#__END_NAMESPACE_STD
 }

	)

115 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

116 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

117 
	#__END_NAMESPACE_C99
 }

	)

118 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

123 
	#__BEGIN_NAMESPACE_STD


	)

124 
	#__END_NAMESPACE_STD


	)

125 
	#__USING_NAMESPACE_STD
(
«me
)

	)

126 
	#__BEGIN_NAMESPACE_C99


	)

127 
	#__END_NAMESPACE_C99


	)

128 
	#__USING_NAMESPACE_C99
(
«me
)

	)

133 #i‚de‡
__BOUNDED_POINTERS__


134 
	#__bounded


	)

135 
	#__unbounded


	)

136 
	#__±rvÆue


	)

141 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

142 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

143 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

145 #i‡
__GNUC_PREREQ
 (4,3)

146 
	#__w¨nde˛
(
«me
, 
msg
) \

147 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

148 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

149 
	#__îr‹de˛
(
«me
, 
msg
) \

150 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

152 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

153 
	#__w¨«âr
(
msg
)

	)

154 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

158 #i‡
__GNUC_PREREQ
 (2,97)

160 
	#__Êex¨r
 []

	)

162 #ifde‡
__GNUC__


163 
	#__Êex¨r
 [0]

	)

165 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

166 
	#__Êex¨r
 []

	)

169 
	#__Êex¨r
 [1]

	)

185 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

187 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

188 #ifde‡
__˝lu•lus


189 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

190 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

191 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

192 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

194 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

195 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

196 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

197 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

199 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

200 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

213 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

214 
	#__©åibuã__
(
xyz
Ë

	)

220 #i‡
__GNUC_PREREQ
 (2,96)

221 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

223 
	#__©åibuã_mÆloc__


	)

229 #i‡
__GNUC_PREREQ
 (2,96)

230 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

232 
	#__©åibuã_puª__


	)

236 #i‡
__GNUC_PREREQ
 (2,5)

237 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

239 
	#__©åibuã_c⁄°__


	)

245 #i‡
__GNUC_PREREQ
 (3,1)

246 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

247 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

249 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

250 
	#__©åibuã_noölöe__


	)

254 #i‡
__GNUC_PREREQ
 (3,2)

255 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

257 
	#__©åibuã_dïªˇãd__


	)

266 #i‡
__GNUC_PREREQ
 (2,8)

267 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

269 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

276 #i‡
__GNUC_PREREQ
 (2,97)

277 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

278 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

280 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

285 #i‡
__GNUC_PREREQ
 (3,3)

286 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

288 
	#__n⁄nuŒ
(
∑øms
)

	)

293 #i‡
__GNUC_PREREQ
 (3,4)

294 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

295 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

296 #i‡
__USE_FORTIFY_LEVEL
 > 0

297 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

300 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

302 #i‚de‡
__wur


303 
	#__wur


	)

307 #i‡
__GNUC_PREREQ
 (3,2)

308 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

310 
	#__Æways_ölöe
 
__ölöe


	)

315 #i‡
__GNUC_PREREQ
 (4,3)

316 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

318 
	#__©åibuã_¨tificül__


	)

323 #i‡(!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)Ë&& deföed 
__GNUC__


324 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


325 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

326 
	#__exã∫_Æways_ölöe
 \

327 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

329 
	#__exã∫_ölöe
 
__ölöe


	)

330 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

332 #ñi‡
deföed
 
__GNUC__


333 
	#__exã∫_ölöe
 
__ölöe


	)

334 
	#__exã∫_Æways_ölöe
 \

335 
__Æways_ölöe


	)

337 
	#__exã∫_ölöe


	)

338 
	#__exã∫_Æways_ölöe


	)

343 #i‡
__GNUC_PREREQ
 (4,3)

344 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

345 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

352 #i‡!
__GNUC_PREREQ
 (2,8)

353 
	#__exãnsi⁄__


	)

357 #i‡!
__GNUC_PREREQ
 (2,92)

358 
	#__ª°ri˘


	)

364 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


365 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

367 #ifde‡
__GNUC__


368 
	#__ª°ri˘_¨r


	)

370 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

371 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

374 
	#__ª°ri˘_¨r


	)

379 #i‡
__GNUC__
 >= 3

380 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
((c⁄d), 0)

	)

382 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

385 
	~<bôs/w‹dsize.h
>

387 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


388 
	#__LDBL_COMPAT
 1

	)

389 #ifde‡
__REDIRECT


390 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

391 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

392 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

393 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

394 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

395 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

396 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

397 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

398 
	#__LDBL_REDIR_DECL
(
«me
) \

399 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

400 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

401 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

402 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

403 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

406 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


407 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

408 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

409 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

410 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

411 
	#__LDBL_REDIR_DECL
(
«me
)

	)

412 #ifde‡
__REDIRECT


413 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

414 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

415 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/types.h

1 #i‚de‡
_ASM_X86_TYPES_H


2 
	#_ASM_X86_TYPES_H


	)

4 
	~<asm-gíîic/ty≥s.h
>

	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 #i‡
__GNUC__
 >= 2

25 
	#__bsw≠_16
(
x
) \

26 (
__exãnsi⁄__
 \

27 ({ 
__v
, 
__x
 = (Ë(
x
); \

28 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

29 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

31 
	`__asm__
 ("rorw $8, %w0" \

32 : "Ù" (
__v
) \

33 : "0" (
__x
) \

35 
__v
; }))

	)

38 
	#__bsw≠_16
(
x
) \

39 (
__exãnsi⁄__
 \

40 ({ 
__x
 = (Ë(
x
); \

41 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

44 
__ölöe
 

45 
	$__bsw≠_16
 (
__bsx
)

47  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

48 
	}
}

	@/usr/include/bits/libc-lock.h

21 #i‚de‡
_BITS_LIBC_LOCK_H


22 
	#_BITS_LIBC_LOCK_H
 1

	)

24 
	~<±hªad.h
>

27 #ifde‡
_IO_MTSAFE_IO


28 
±hªad_muãx_t
 
	t__libc_lock_t
;

29 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

30 #ifde‡
__USE_UNIX98


31 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

33 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

35 
__libc_lock_ªcursive_t
 
	t__πld_lock_ªcursive_t
;

37 
__libc_lock_›aque__
 
	t__libc_lock_t
;

38 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

39 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

43 
±hªad_key_t
 
	t__libc_key_t
;

52 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

53 
CLASS
 
__libc_lock_t
 
NAME
;

	)

54 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

55 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

56 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

57 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

59 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

70 #i‡
__LT_SPINLOCK_INIT
 == 0

71 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

74 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

75 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

78 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

79 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

83 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

84 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

85 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

86 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

88 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

89 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

90 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

91 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

93 #i‡
deföed
 
__PIC__


94 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

95 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

96 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

98 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

99 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

101 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
Ë
	`__libc_maybe_ˇŒ
 (
__
##FUNC, ARGS, ELSE)

	)

105 
	#__libc_lock_öô
(
NAME
) \

106 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0))

	)

107 
	#__libc_rwlock_öô
(
NAME
) \

108 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0));

	)

111 
	#__libc_lock_öô_ªcursive
(
NAME
) \

113 i‡(
__±hªad_muãx_öô
 !
NULL
) \

115 
±hªad_muãx©å_t
 
__©å
; \

116 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

117 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

118 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

119 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

121 } 0);

	)

122 
	#__πld_lock_öô_ªcursive
(
NAME
) \

123 
	`__libc_lock_öô_ªcursive
 (
NAME
)

	)

128 
	#__libc_lock_föi
(
NAME
) \

129 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_de°roy
, (&(
NAME
)), 0));

	)

130 
	#__libc_rwlock_föi
(
NAME
) \

131 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0));

	)

134 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

135 
	#__πld_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi_ªcursive
 (NAME)

	)

138 
	#__libc_lock_lock
(
NAME
) \

139 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_lock
, (&(
NAME
)), 0));

	)

140 
	#__libc_rwlock_rdlock
(
NAME
) \

141 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0));

	)

142 
	#__libc_rwlock_wæock
(
NAME
) \

143 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0));

	)

146 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

149 
	#__libc_lock_åylock
(
NAME
) \

150 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_åylock
, (&(
NAME
)), 0))

	)

151 
	#__libc_rwlock_åyrdlock
(
NAME
) \

152 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0))

	)

153 
	#__libc_rwlock_åywæock
(
NAME
) \

154 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0))

	)

157 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

158 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

159 
	`__libc_lock_åylock_ªcursive
 (
NAME
)

	)

162 
	#__libc_lock_u∆ock
(
NAME
) \

163 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_u∆ock
, (&(
NAME
)), 0));

	)

164 
	#__libc_rwlock_u∆ock
(
NAME
) \

165 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0));

	)

168 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

170 
	#__πld_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock_ªcursive
 (NAME)

	)

171 
	#__πld_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock_ªcursive
 (NAME)

	)

174 #i‡
PTHREAD_ONCE_INIT
 == 0

177 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

178 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

180 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

181 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

185 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

187 i‡(
__±hªad_⁄˚
 !
NULL
) \

188 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

189 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

190 
	`INIT_FUNCTION
 (); \

191 (
ONCE_CONTROL
) = 2; \

193 } 0)

	)

197 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

198 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

199 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

200 i‡(
_avaû
) { \

201 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

202 }

	)

205 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

206 i‡(
_avaû
) { \

207 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

209 }

	)

212 
	#__libc_˛ónup_íd
(
DOIT
) \

213 i‡(
_avaû
) { \

214 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

215 }

	)

217 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

218 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

219 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_push
, (&
_buf„r
, (
f˘
), (
¨g
)), 0)

	)

221 
	#__libc_˛ónup_p›
(
execuã
) \

222 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_p›
, (&
_buf„r
, 
execuã
), 0); \

223 }

	)

226 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

227 (
	`__libc_maybe_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1))

	)

230 
	#__libc_gë•ecific
(
KEY
) \

231 (
	`__libc_maybe_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
))

	)

234 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

235 (
	`__libc_maybe_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0))

	)

239 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

240 (
	`__libc_maybe_ˇŒ
 (
__±hªad_©f‹k
, (
PREPARE
, 
PARENT
, 
CHILD
), 0))

	)

242 
__BEGIN_DECLS


244 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

245 (*
__routöe
) (*),

246 *
__¨g
Ë
__THROW
;

248 
	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

249 
__execuã
Ë
__THROW
;

255 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

256 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

258 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

260 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

262 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

264 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

266 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

268 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

270 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

271 
__köd
);

273 #ifde‡
__USE_UNIX98


274 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

275 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

277 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

279 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

281 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

283 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

285 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

287 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

290 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

291 (*
__de°r_fun˘i⁄
) (*));

293 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

294 
__c⁄°
 *
__poöãr
);

296 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

298 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

299 (*
__öô_routöe
) ());

301 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

302 (*
__∑ª¡
) (),

303 (*
__chûd
) ());

305 
__END_DECLS


309 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


310 #¥agm®
wók
 
__±hªad_muãx_öô


311 #¥agm®
wók
 
__±hªad_muãx_de°roy


312 #¥agm®
wók
 
__±hªad_muãx_lock


313 #¥agm®
wók
 
__±hªad_muãx_åylock


314 #¥agm®
wók
 
__±hªad_muãx_u∆ock


315 #¥agm®
wók
 
__±hªad_muãx©å_öô


316 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


317 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


318 #¥agm®
wók
 
__±hªad_rwlock_de°roy


319 #¥agm®
wók
 
__±hªad_rwlock_rdlock


320 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


321 #¥agm®
wók
 
__±hªad_rwlock_wæock


322 #¥agm®
wók
 
__±hªad_rwlock_åywæock


323 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


324 #¥agm®
wók
 
__±hªad_key_¸óã


325 #¥agm®
wók
 
__±hªad_£t•ecific


326 #¥agm®
wók
 
__±hªad_gë•ecific


327 #¥agm®
wók
 
__±hªad_⁄˚


328 #¥agm®
wók
 
__±hªad_öôülize


329 #¥agm®
wók
 
__±hªad_©f‹k


330 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


331 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


332 #¥agm®
wók
 
_±hªad_˛ónup_push


333 #¥agm®
wók
 
_±hªad_˛ónup_p›


338 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__FD_SETSIZE


22 
	#__FD_SETSIZE
 1024

	)

25 
	mfds_bôs
[
__FD_SETSIZE
 / (8 * ())];

26 } 
	t__kî√l_fd_£t
;

29 (*
	t__kî√l_sigh™dÀr_t
)();

32 
	t__kî√l_key_t
;

33 
	t__kî√l_mqd_t
;

35 
	~<asm/posix_ty≥s.h
>

	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/asm-generic/types.h

1 #i‚de‡
_ASM_GENERIC_TYPES_H


2 
	#_ASM_GENERIC_TYPES_H


	)

7 
	~<asm-gíîic/öt-Œ64.h
>

	@/usr/include/asm/posix_types.h

1 #ifde‡
__i386__


2 
	~<asm/posix_ty≥s_32.h
>

3 #ñi‡
deföed
(
__ILP32__
)

4 
	~<asm/posix_ty≥s_x32.h
>

6 
	~<asm/posix_ty≥s_64.h
>

	@/usr/include/linux/stddef.h

	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm-generic/int-ll64.h

8 #i‚de‡
_ASM_GENERIC_INT_LL64_H


9 
	#_ASM_GENERIC_INT_LL64_H


	)

11 
	~<asm/bô•îl⁄g.h
>

13 #i‚de‡
__ASSEMBLY__


19 
__sig√d__
 
	t__s8
;

20 
	t__u8
;

22 
__sig√d__
 
	t__s16
;

23 
	t__u16
;

25 
__sig√d__
 
	t__s32
;

26 
	t__u32
;

28 #ifde‡
__GNUC__


29 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

30 
__exãnsi⁄__
 
	t__u64
;

32 
__sig√d__
 
	t__s64
;

33 
	t__u64
;

	@/usr/include/asm/posix_types_32.h

1 #i‚de‡
_ASM_X86_POSIX_TYPES_32_H


2 
	#_ASM_X86_POSIX_TYPES_32_H


	)

10 
	t__kî√l_mode_t
;

11 
	#__kî√l_mode_t
 
__kî√l_mode_t


	)

13 
	t__kî√l_ùc_pid_t
;

14 
	#__kî√l_ùc_pid_t
 
__kî√l_ùc_pid_t


	)

16 
	t__kî√l_uid_t
;

17 
	t__kî√l_gid_t
;

18 
	#__kî√l_uid_t
 
__kî√l_uid_t


	)

20 
	t__kî√l_ﬁd_dev_t
;

21 
	#__kî√l_ﬁd_dev_t
 
__kî√l_ﬁd_dev_t


	)

23 
	~<asm-gíîic/posix_ty≥s.h
>

	@/usr/include/asm/posix_types_64.h

1 #i‚de‡
_ASM_X86_POSIX_TYPES_64_H


2 
	#_ASM_X86_POSIX_TYPES_64_H


	)

10 
	t__kî√l_ﬁd_uid_t
;

11 
	t__kî√l_ﬁd_gid_t
;

12 
	#__kî√l_ﬁd_uid_t
 
__kî√l_ﬁd_uid_t


	)

14 
	t__kî√l_ﬁd_dev_t
;

15 
	#__kî√l_ﬁd_dev_t
 
__kî√l_ﬁd_dev_t


	)

17 
	~<asm-gíîic/posix_ty≥s.h
>

	@/usr/include/asm/posix_types_x32.h

1 #i‚de‡
_ASM_X86_POSIX_TYPES_X32_H


2 
	#_ASM_X86_POSIX_TYPES_X32_H


	)

13 
	t__kî√l_l⁄g_t
;

14 
	t__kî√l_ul⁄g_t
;

15 
	#__kî√l_l⁄g_t
 
__kî√l_l⁄g_t


	)

17 
	~<asm/posix_ty≥s_64.h
>

	@/usr/include/asm-generic/posix_types.h

1 #i‚de‡
__ASM_GENERIC_POSIX_TYPES_H


2 
	#__ASM_GENERIC_POSIX_TYPES_H


	)

4 
	~<asm/bô•îl⁄g.h
>

13 #i‚de‡
__kî√l_l⁄g_t


14 
	t__kî√l_l⁄g_t
;

15 
	t__kî√l_ul⁄g_t
;

18 #i‚de‡
__kî√l_öo_t


19 
__kî√l_ul⁄g_t
 
	t__kî√l_öo_t
;

22 #i‚de‡
__kî√l_mode_t


23 
	t__kî√l_mode_t
;

26 #i‚de‡
__kî√l_pid_t


27 
	t__kî√l_pid_t
;

30 #i‚de‡
__kî√l_ùc_pid_t


31 
	t__kî√l_ùc_pid_t
;

34 #i‚de‡
__kî√l_uid_t


35 
	t__kî√l_uid_t
;

36 
	t__kî√l_gid_t
;

39 #i‚de‡
__kî√l_su£c⁄ds_t


40 
__kî√l_l⁄g_t
 
	t__kî√l_su£c⁄ds_t
;

43 #i‚de‡
__kî√l_daddr_t


44 
	t__kî√l_daddr_t
;

47 #i‚de‡
__kî√l_uid32_t


48 
	t__kî√l_uid32_t
;

49 
	t__kî√l_gid32_t
;

52 #i‚de‡
__kî√l_ﬁd_uid_t


53 
__kî√l_uid_t
 
	t__kî√l_ﬁd_uid_t
;

54 
__kî√l_gid_t
 
	t__kî√l_ﬁd_gid_t
;

57 #i‚de‡
__kî√l_ﬁd_dev_t


58 
	t__kî√l_ﬁd_dev_t
;

65 #i‚de‡
__kî√l_size_t


66 #i‡
__BITS_PER_LONG
 != 64

67 
	t__kî√l_size_t
;

68 
	t__kî√l_ssize_t
;

69 
	t__kî√l_±rdiff_t
;

71 
__kî√l_ul⁄g_t
 
	t__kî√l_size_t
;

72 
__kî√l_l⁄g_t
 
	t__kî√l_ssize_t
;

73 
__kî√l_l⁄g_t
 
	t__kî√l_±rdiff_t
;

77 #i‚de‡
__kî√l_fsid_t


79 
	mvÆ
[2];

80 } 
	t__kî√l_fsid_t
;

86 
__kî√l_l⁄g_t
 
	t__kî√l_off_t
;

87 
	t__kî√l_loff_t
;

88 
__kî√l_l⁄g_t
 
	t__kî√l_time_t
;

89 
__kî√l_l⁄g_t
 
	t__kî√l_˛ock_t
;

90 
	t__kî√l_timî_t
;

91 
	t__kî√l_˛ockid_t
;

92 * 
	t__kî√l_ˇddr_t
;

93 
	t__kî√l_uid16_t
;

94 
	t__kî√l_gid16_t
;

	@/usr/include/asm/bitsperlong.h

1 #i‚de‡
__ASM_X86_BITSPERLONG_H


2 
	#__ASM_X86_BITSPERLONG_H


	)

4 #ifde‡
__x86_64__


5 
	#__BITS_PER_LONG
 64

	)

7 
	#__BITS_PER_LONG
 32

	)

10 
	~<asm-gíîic/bô•îl⁄g.h
>

	@/usr/include/asm-generic/bitsperlong.h

1 #i‚de‡
__ASM_GENERIC_BITS_PER_LONG


2 
	#__ASM_GENERIC_BITS_PER_LONG


	)

11 #i‚de‡
__BITS_PER_LONG


12 
	#__BITS_PER_LONG
 32

	)

	@
1
.
1
/usr/include
181
4226
bug.cpp
bug.h
c_reducers.c
cilk-abi-cilk-for.cpp
cilk-abi.c
cilk-ittnotify.h
cilk-tbb-interop.h
cilk_api.c
cilk_malloc.c
cilk_malloc.h
component.h
concurrent_cilk.c
concurrent_cilk_internal.h
concurrent_queue.c
except-gcc.cpp
except-gcc.h
except.h
frame_malloc.c
frame_malloc.h
full_frame.c
full_frame.h
global_state.cpp
global_state.h
ivar_full_blocking.c
jmpbuf.c
jmpbuf.h
local_state.c
local_state.h
metacall_impl.c
metacall_impl.h
os-unix.c
os.h
os_mutex-unix.c
os_mutex.h
pedigrees.c
pedigrees.h
queues/cache_aware_queue.c
queues/lockfree_queue.c
queues/lockfree_queue.h
queues/locking_queue.c
reducer_impl.cpp
reducer_impl.h
rts-common.h
scheduler.c
scheduler.h
signal_node.c
signal_node.h
stacks.c
stacks.h
stats.c
stats.h
symbol_test.c
sysdep-unix.c
sysdep.h
worker_mutex.c
worker_mutex.h
/usr/include/assert.h
/usr/include/dlfcn.h
/usr/include/errno.h
/usr/include/limits.h
/usr/include/malloc.h
/usr/include/math.h
/usr/include/memory.h
/usr/include/pthread.h
/usr/include/sched.h
/usr/include/semaphore.h
/usr/include/setjmp.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/mman.h
/usr/include/sys/resource.h
/usr/include/sys/syscall.h
/usr/include/sys/sysctl.h
/usr/include/sys/sysinfo.h
/usr/include/sys/types.h
/usr/include/sys/utsname.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/wchar.h
/usr/include/alloca.h
/usr/include/asm/unistd.h
/usr/include/bits/confname.h
/usr/include/bits/dlfcn.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/inf.h
/usr/include/bits/math-finite.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/mman.h
/usr/include/bits/nan.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/resource.h
/usr/include/bits/sched.h
/usr/include/bits/semaphore.h
/usr/include/bits/setjmp.h
/usr/include/bits/setjmp2.h
/usr/include/bits/sigset.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/syscall.h
/usr/include/bits/sysctl.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/utsname.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/linux/kernel.h
/usr/include/linux/sysctl.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/wctype.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/unistd_32.h
/usr/include/asm/unistd_64.h
/usr/include/asm/unistd_x32.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/timex.h
/usr/include/bits/typesizes.h
/usr/include/ctype.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/linux/sysinfo.h
/usr/include/linux/types.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/asm/errno.h
/usr/include/asm/types.h
/usr/include/bits/byteswap-16.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-64.h
/usr/include/linux/limits.h
/usr/include/linux/posix_types.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/types.h
/usr/include/asm/posix_types.h
/usr/include/linux/stddef.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm-generic/int-ll64.h
/usr/include/asm/posix_types_32.h
/usr/include/asm/posix_types_64.h
/usr/include/asm/posix_types_x32.h
/usr/include/asm-generic/posix_types.h
/usr/include/asm/bitsperlong.h
/usr/include/asm-generic/bitsperlong.h
